,migration_id,ver1_file_path,ver1_tree_path,ver1_signature,method_ver1
0,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,HttpClient__(ResponseErrorHandler errorHandler),"public HttpClient(ResponseErrorHandler errorHandler) {
    setErrorHandler(errorHandler);
}"
1,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"exchange__(String url, HttpMethod httpMethod, HttpHeaders headers, Object request, Class<T> responseType, Object... urlVariables)","public <T> ResponseEntity<T> exchange(String url, HttpMethod httpMethod, HttpHeaders headers, Object request, Class<T> responseType, Object... urlVariables) {
    HttpEntity<?> requestEntity = new HttpEntity<Object>(request, headers);
    return exchange(url, httpMethod, requestEntity, responseType, urlVariables);
}"
2,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"get__(String url, Class<T> responseType, Object... urlVariables)","public <T> ResponseEntity<T> get(String url, Class<T> responseType, Object... urlVariables) {
    return get(url, null, responseType, urlVariables);
}"
3,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"get__(String url, HttpHeaders headers, Class<T> responseType, Object... urlVariables)","public <T> ResponseEntity<T> get(String url, HttpHeaders headers, Class<T> responseType, Object... urlVariables) {
    return exchange(url, HttpMethod.GET, headers, null, responseType, urlVariables);
}"
4,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"post__(String url, Object request, Class<T> responseType, Object... urlVariables)","public <T> ResponseEntity<T> post(String url, Object request, Class<T> responseType, Object... urlVariables) {
    return post(url, null, request, responseType, urlVariables);
}"
5,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"post__(String url, HttpHeaders headers, Object request, Class<T> responseType, Object... urlVariables)","public <T> ResponseEntity<T> post(String url, HttpHeaders headers, Object request, Class<T> responseType, Object... urlVariables) {
    return exchange(url, HttpMethod.POST, headers, request, responseType, urlVariables);
}"
6,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"put__(String url, Object request, Class<T> responseType, Object... urlVariables)","public <T> ResponseEntity<T> put(String url, Object request, Class<T> responseType, Object... urlVariables) {
    return put(url, null, request, responseType, urlVariables);
}"
7,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"put__(String url, HttpHeaders headers, Object request, Class<T> responseType, Object... urlVariables)","public <T> ResponseEntity<T> put(String url, HttpHeaders headers, Object request, Class<T> responseType, Object... urlVariables) {
    return exchange(url, HttpMethod.PUT, headers, request, responseType, urlVariables);
}"
8,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"delete__(String url, Class<T> responseType, Object... urlVariables)","public <T> ResponseEntity<T> delete(String url, Class<T> responseType, Object... urlVariables) {
    return delete(url, null, responseType, urlVariables);
}"
9,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"delete__(String url, HttpHeaders headers, Object request, Class<T> responseType, Object... urlVariables)","public <T> ResponseEntity<T> delete(String url, HttpHeaders headers, Object request, Class<T> responseType, Object... urlVariables) {
    return exchange(url, HttpMethod.DELETE, headers, request, responseType, urlVariables);
}"
10,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"delete__(String url, HttpHeaders headers, Class<T> responseType, Object... urlVariables)","public <T> ResponseEntity<T> delete(String url, HttpHeaders headers, Class<T> responseType, Object... urlVariables) {
    return exchange(url, HttpMethod.DELETE, headers, null, responseType, urlVariables);
}"
11,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/FelixGogoCommandsServiceGenerator.java,FelixGogoCommandsServiceGenerator,"generate__(Object service, Map<String, String> commands, String suffix)","public static Object generate(Object service, Map<String, String> commands, String suffix) throws Exception {
    // generate class with unique name
    CtClass ctClass = POOL.makeClass(AbstractFelixCommandsService.class.getName() + suffix);
    try {
        if (!ctClass.isFrozen()) {
            ClassFile ccFile = ctClass.getClassFile();
            ccFile.setVersionToJava5();
            ConstPool constPool = ccFile.getConstPool();

            // set superclass
            CtClass abstractCtClass = POOL.getCtClass(AbstractFelixCommandsService.class.getName());
            ctClass.setSuperclass(abstractCtClass);

            // add constructor
            CtClass serviceCtClass = POOL.getCtClass(Object.class.getName());
            CtConstructor ctConstructor = new CtConstructor(new CtClass[]{serviceCtClass}, ctClass);
            ctConstructor.setModifiers(Modifier.PUBLIC);
            ctConstructor.setBody(""super($1);"");
            ctClass.addConstructor(ctConstructor);

            // add method for each command
            CtClass sessionCtClass = POOL.getCtClass(CommandSession.class.getName());
            CtClass stringArrayCtClass = POOL.getCtClass(String[].class.getName());
            Set<String> names = commands.keySet();
            for (String name : names) {
                if (isMethodAvailable(service, name)) {
                    CtMethod ctMethod = new CtMethod(CtClass.voidType, name, new CtClass[]{
                            sessionCtClass, stringArrayCtClass
                    }, ctClass);
                    ctMethod.setModifiers(Modifier.PUBLIC);
                    ctMethod.setBody(""runCommand(\"""" + name + ""\"", $1, $2);"");
                    ctClass.addMethod(ctMethod);

                    // add GoGo descriptor for this shell command
                    AnnotationsAttribute annotationsAttribute = new AnnotationsAttribute(constPool, AnnotationsAttribute.visibleTag);
                    Annotation annotation = new Annotation(Descriptor.class.getName(), constPool);
                    annotation.addMemberValue(""value"", new StringMemberValue(commands.get(name), constPool));
                    annotationsAttribute.addAnnotation(annotation);
                    ctMethod.getMethodInfo().addAttribute(annotationsAttribute);
                }
            }
        }

        // create new instance
        Class<?> aClass = ctClass.toClass(FelixGogoCommandsServiceGenerator.class.getClassLoader(), null);
        Constructor<?> constructor = aClass.getConstructor(Object.class);
        return constructor.newInstance(service);
    } catch (Exception e) {
        ctClass.detach();
        throw e;
    }
}"
12,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/FelixGogoCommandsServiceGenerator.java,FelixGogoCommandsServiceGenerator,"isMethodAvailable__(Object commandsProvider, String methodName)","private static boolean isMethodAvailable(Object commandsProvider, String methodName) {
    try {
        commandsProvider.getClass().getMethod(methodName, InputStream.class, PrintStream.class, String[].class);
        return true;
    } catch (NoSuchMethodException e) {
        logger.warn(""Unable to find Console Command: {}"", methodName, e);
        return false;
    }
}"
13,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/Activator.java,Activator.ShellCommandsCustomizer,parseCommands__(Object commandsDescription),"private String[][] parseCommands(Object commandsDescription) {
    if (commandsDescription == null) {
        return null;
    } else if (commandsDescription instanceof String[][]) {
        return (String[][]) commandsDescription;
    } else if (commandsDescription instanceof String[]) {
        String[] commands = (String[]) commandsDescription;
        String[][] result = new String[commands.length][];
        for (int i = 0; i < commands.length; i++) {
            String command = commands[i];
            result[i] = command.split(""#"");
        }
        return result;
    } else {
        return null;
    }
}"
14,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-junit/src/test/java/net/jadler/junit/rule/JadlerRuleIntegrationTest.java,JadlerRuleIntegrationTest,createAndExecute__(),"private GetMethod createAndExecute() throws IOException {
    final GetMethod req = new GetMethod(""http://localhost:"" + port());
    this.client.executeMethod(req);
    
    return req;
}"
15,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/AbstractResetIntegrationTest.java,AbstractResetIntegrationTest,assertStatus__(int expected),"private void assertStatus(int expected) throws IOException {
    final HttpClient client = new HttpClient();
    final GetMethod method = new GetMethod(""http://localhost:"" + port() + ""/"");
    assertThat(client.executeMethod(method), is(expected));
    method.releaseConnection();
}"
16,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/FacadeIntegrationTest.java,FacadeIntegrationTest,assertExpectedStatus__(),"private void assertExpectedStatus() throws IOException {
    assertExpectedStatus(EXPECTED_STATUS);
}"
17,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/FacadeIntegrationTest.java,FacadeIntegrationTest,assertExpectedStatus__(final int expectedStatus),"private void assertExpectedStatus(final int expectedStatus) throws IOException {
    final HttpClient client = new HttpClient();
    final GetMethod method = new GetMethod(""http://localhost:"" + port() + ""/"");
    assertThat(client.executeMethod(method), is(expectedStatus));
    method.releaseConnection();
}"
18,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/VerificationIntegrationTest.java,VerificationIntegrationTest,setUp__(),"@Before
public void setUp() {
    this.client = new HttpClient();
}"
19,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/authoriser/AuthorisationProvider.java,FACTORY,"create__(Client client, Path keyFile)","public static AuthorisationProvider create(Client client, Path keyFile) throws OneDriveAPIException {
    return new OneDriveAuthorisationProvider(client, keyFile);
}"
20,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/resources/Authorisation.java,Authorisation,getTokenExpiryDate__(),"public Date getTokenExpiryDate() {
    return new Date(zeroTime + expiresIn * 1000);
}"
21,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/RWOneDriveProvider.java,RWOneDriveProvider,"RWOneDriveProvider__(Client client, AuthorisationProvider authoriser)","public RWOneDriveProvider(Client client, AuthorisationProvider authoriser) {
    super(client, authoriser);
}"
22,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/RWOneDriveProvider.java,RWOneDriveProvider.WriteableItem,"WriteableItem__(String name, FileSystemInfoFacet fileSystemInfo, boolean multipart)","public WriteableItem(String name, FileSystemInfoFacet fileSystemInfo, boolean multipart) {
    this.name = name;
    this.fileSystemInfo = fileSystemInfo;
    this.multipart = multipart;
}"
23,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/RWOneDriveProvider.java,RWOneDriveProvider.WriteableItem,getFileSystemInfo__(),"public FileSystemInfoFacet getFileSystemInfo() {
    return fileSystemInfo;
}"
24,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/RWOneDriveProvider.java,RWOneDriveProvider.WriteableItem,getName__(),"public String getName() {
    return name;
}"
25,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/RWOneDriveProvider.java,RWOneDriveProvider.WriteableItem,getFile__(),"public FileFacet getFile() {
    return file;
}"
26,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/RWOneDriveProvider.java,RWOneDriveProvider.WriteableItem,getSourceUrl__(),"@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonProperty(""@content.sourceUrl"")
public String getSourceUrl() {
    return multipart ? ""cid:content"" : null;
}"
27,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/RWOneDriveProvider.java,RWOneDriveProvider.MultiPartItem,MultiPartItem__(String name),"private MultiPartItem(String name) {
    this.name = name;
    this.item = new FileDetail();
}"
28,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/RWOneDriveProvider.java,RWOneDriveProvider.MultiPartItem.FileDetail,getConflictBehavior__(),"@JsonProperty(""@name.conflictBehavior"")
public String getConflictBehavior() {
    return conflictBehavior;
}"
29,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/ROOneDriveProvider.java,ROOneDriveProvider,"ROOneDriveProvider__(Client client, AuthorisationProvider authoriser)","public ROOneDriveProvider(Client client, AuthorisationProvider authoriser) {
    this.authoriser = authoriser;
    this.client = client;
}"
30,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/ROOneDriveProvider.java,ROOneDriveProvider,getDefaultRequest__(),"protected OneDriveRequest getDefaultRequest() {
    return new OneDriveRequest(client, authoriser, ""https://api.onedrive.com/v1.0"");
}"
31,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,"OneDriveRequest__(Client client, AuthorisationProvider authoriser, String target)","public OneDriveRequest(Client client, AuthorisationProvider authoriser, String target) {
    this.client = client;
    this.authoriser = authoriser;
    this.target = target;
    this.headers = Maps.newHashMap();
}"
32,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,target__(String target),"public OneDriveRequest target(String target) {
    this.target = target;
    return this;
}"
33,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,path__(String path),"public OneDriveRequest path(String path) {
    this.path = path;
    return this;
}"
34,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,method__(String method),"public OneDriveRequest method(String method) {
    this.method = method;
    return this;
}"
35,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,skipToken__(String skipToken),"public OneDriveRequest skipToken(String skipToken) {
    this.skipToken = skipToken;
    return this;
}"
36,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,withChildren__(),"public OneDriveRequest withChildren() {
    this.withChildren = true;
    return this;
}"
37,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,payloadBinary__(byte[] payloadBinary),"public OneDriveRequest payloadBinary(byte[] payloadBinary) {
    this.payloadBinary = payloadBinary;
    return this;
}"
38,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,payloadJson__(Object payloadJson),"public OneDriveRequest payloadJson(Object payloadJson) {
    this.payloadJson = payloadJson;
    return this;
}"
39,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,"header__(String key, Object value)","public OneDriveRequest header(String key, Object value) {
    headers.put(key, value);
    return this;
}"
40,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,getResponse__(Class<T> entityType),"public <T> T getResponse(Class<T> entityType) throws OneDriveAPIException {

    Response response = getResponse();

    switch (response.getStatus()) {
        case 200:
        case 201:
        case 202:
            return response.readEntity(entityType);
        case 204:
            return null;
        case 401:
            authoriser.refresh();
        default:
            throw new OneDriveAPIException(response.getStatus(), getMessage(response));
    }
}"
41,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,getResponse__(),"private Response getResponse() throws OneDriveAPIException {

    WebTarget requestTarget = client.target(target);

    if (path != null) {
        requestTarget = requestTarget.path(path);
    }

    if (skipToken != null) {
        requestTarget = requestTarget.queryParam(""$skiptoken"", skipToken);
    }

    if (withChildren) {
        requestTarget = requestTarget.queryParam(""expand"", ""children"");
    }

    Invocation.Builder builder = requestTarget.request(MediaType.TEXT_PLAIN_TYPE);

    builder = builder.header(""Authorization"", ""bearer "" + authoriser.getAccessToken());

    for (Map.Entry<String, Object> kvp : headers.entrySet()) {
        builder = builder.header(kvp.getKey(), kvp.getValue());
    }

    Entity<?> entity = null;
    try {
        if (payloadBinary != null && payloadJson != null) {
            entity = generateMultipartEntity();
        } else if (payloadBinary != null) {
            entity = Entity.entity(payloadBinary, MediaType.APPLICATION_OCTET_STREAM);
        } else if (payloadJson != null) {
            entity = Entity.json(payloadJson);
        }
    } catch (FileNotFoundException e) {
        throw Throwables.propagate(e);
    }

    return entity != null ? builder.method(method, entity) : builder.method(method);
}"
42,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,generateMultipartEntity__(),"private Entity<?> generateMultipartEntity() throws FileNotFoundException {
    MultiPart multiPart = new MultiPart();
    multiPart.setMediaType(Boundary.addBoundary(new MediaType(""multipart"", ""related"")));

    BodyPart jsonPart = new BodyPart(payloadJson, MediaType.APPLICATION_JSON_TYPE);
    jsonPart.getHeaders().putSingle(""Content-ID"", ""<metadata>"");
    multiPart.bodyPart(jsonPart);

    BodyPart filePart = new BodyPart(payloadBinary, MediaType.APPLICATION_OCTET_STREAM_TYPE);
    filePart.getHeaders().putSingle(""Content-ID"", ""<content>"");
    multiPart.bodyPart(filePart);

    return Entity.entity(multiPart, multiPart.getMediaType());
}"
43,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,getMessage__(Response response),"private String getMessage(Response response) {

    if (response == null) {
        return null;
    }

    StringBuilder msgBuilder = new StringBuilder().append(""error code "").append(response.getStatus());

    try {
        ErrorSet error = response.readEntity(ErrorSet.class);
        msgBuilder.append("": "").append(error.getError().getCode());
        msgBuilder.append("" ("").append(error.getError().getMessage()).append("")"");
    } catch (Exception e) {
        msgBuilder.append("": unknown error"");
    }

    return msgBuilder.toString();
}"
44,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveRequest.java,OneDriveRequest,getFile__(File target),"public void getFile(File target) throws OneDriveAPIException {

    WebTarget requestTarget = client
            .target(""https://api.onedrive.com/v1.0"")
            .path(path)
            .queryParam(""access_token"", authoriser.getAccessToken());

    try {

        ReadableByteChannel rbc = Channels.newChannel(requestTarget.getUri().toURL().openStream());
        FileOutputStream fos = new FileOutputStream(target);
        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);

        rbc.close();
        fos.close();
    } catch (IOException e) {
        throw new OneDriveAPIException(0, ""Unable to download file"", e);
    }
}"
45,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/serialization/JsonDateSerializer.java,JsonDateSerializer,"serialize__(Date value, JsonGenerator gen, SerializerProvider serializers)","@Override
public synchronized void serialize(Date value, JsonGenerator gen, SerializerProvider serializers) throws IOException {
    gen.writeString(df.format(value));
}"
46,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/authoriser/OneDriveAuthorisationProvider.java,OneDriveAuthorisationProvider,getTokenFromCode__(String code),"private void getTokenFromCode(String code) throws OneDriveAPIException {

    log.debug(""Fetching authorisation token using authorisation code"");

    WebTarget tokenTarget =
            client.target(""https://login.live.com/oauth20_token.srf"")
                    .queryParam(""client_id"", clientId)
                    .queryParam(""client_secret"", clientSecret)
                    .queryParam(""code"", code)
                    .queryParam(""grant_type"", ""authorization_code"")
                    .queryParam(""redirect_uri"", ""https://login.live.com/oauth20_desktop.srf"");

    Invocation.Builder invocationBuilder =
            tokenTarget.request(MediaType.TEXT_PLAIN_TYPE);

    processResponse(invocationBuilder.get());
}"
47,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/authoriser/OneDriveAuthorisationProvider.java,OneDriveAuthorisationProvider,getTokenFromRefreshToken__(String refreshToken),"private void getTokenFromRefreshToken(String refreshToken) throws OneDriveAPIException {

    log.debug(""Fetching authorisation token using refresh token"");

    WebTarget tokenTarget =
            client.target(""https://login.live.com/oauth20_token.srf"")
                    .queryParam(""client_id"", clientId)
                    .queryParam(""client_secret"", clientSecret)
                    .queryParam(""refresh_token"", refreshToken)
                    .queryParam(""grant_type"", ""refresh_token"")
                    .queryParam(""redirect_uri"", ""https://login.live.com/oauth20_desktop.srf"");

    Invocation.Builder invocationBuilder =
            tokenTarget.request(MediaType.TEXT_PLAIN_TYPE);

    processResponse(invocationBuilder.get());
}"
48,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/resources/ItemSet.java,ItemSet,getNextPage__(),"@JsonProperty(""@odata.nextLink"")
public String getNextPage() {
    return nextPage;
}"
49,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveProvider.java,FACTORY,"readOnlyApi__(Client client, AuthorisationProvider authoriser)","public static OneDriveProvider readOnlyApi(Client client, AuthorisationProvider authoriser) {
    return new ROOneDriveProvider(client, authoriser);
}"
50,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveProvider.java,FACTORY,"readWriteApi__(Client client, AuthorisationProvider authoriser)","public static OneDriveProvider readWriteApi(Client client, AuthorisationProvider authoriser) {
    return new RWOneDriveProvider(client, authoriser);
}"
51,RBGKew_Reconciliation-and-Matching-Framework__bdc0ee4fa8a1c1ecc4c73e9bc157832bac561533__bdc0ee4fa8a1c1ecc4c73e9bc157832bac561533,matchconf/src/main/java/org/kew/rmf/matchconf/web/ApplicationConversionServiceFactoryBean.java,ApplicationConversionServiceFactoryBean,installFormatters__(FormatterRegistry registry),"@Override
protected void installFormatters(FormatterRegistry registry) {
	super.installFormatters(registry);
	// Register application converters and formatters
}"
52,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi-jersey2x/src/main/java/org/ff4j/web/api/FF4jJacksonMapper.java,FF4jJacksonMapper,createDefaultMapper__(),"private static ObjectMapper createDefaultMapper() {
    final ObjectMapper mapper = new ObjectMapper();
    mapper.setAnnotationIntrospector(new JacksonAnnotationIntrospector());
    mapper.setSerializationInclusion(JsonSerialize.Inclusion.NON_NULL);
    mapper.setSerializationInclusion(JsonSerialize.Inclusion.NON_EMPTY);
    mapper.getSerializationConfig().without(SerializationConfig.Feature.FAIL_ON_EMPTY_BEANS);
    mapper.getDeserializationConfig().without(DeserializationConfig.Feature.FAIL_ON_NULL_FOR_PRIMITIVES);
    mapper.getDeserializationConfig().without(DeserializationConfig.Feature.FAIL_ON_UNKNOWN_PROPERTIES);
    mapper.setDateFormat(new SimpleDateFormat(""dd/MM/yyyy""));
    return mapper;
}"
53,SeqWare_seqware__289947f7719911a70d398c3df5a07906fc667bf3__289947f7719911a70d398c3df5a07906fc667bf3,seqware-common/src/main/java/net/sourceforge/seqware/common/util/filetools/FileTools.java,FileTools,"zipDirectoryRecursive__(File path, File zipFileName, String excludeRegEx, boolean relative, boolean compress)","public static boolean zipDirectoryRecursive(File path, File zipFileName, String excludeRegEx, boolean relative, boolean compress) {
    ArrayList<File> filesToZip = new ArrayList<>();
    if (path.exists()) {
        File[] files = path.listFiles();
        for (File file : files) {
            if (file.isDirectory()) {
                FileTools.listFilesRecursive(file, filesToZip);
            } else {
                filesToZip.add(file);
            }
        }
    }
    try {
        byte[] buffer = new byte[18024];
        // going to overwrite the zip file not add to it
        if (zipFileName.exists() && zipFileName.isFile() && zipFileName.canWrite()) {
            zipFileName.delete();
        }
        Zip64File zipFile = new Zip64File(zipFileName);
        for (File filesToZip1 : filesToZip) {
            if (excludeRegEx == null || !filesToZip1.getName().contains(excludeRegEx)) {
                try (final FileInputStream in = new FileInputStream(filesToZip1)) {
                    String filePath = filesToZip1.getPath();
                    if (relative) {
                        filePath = filePath.replaceFirst(path.getAbsolutePath() + File.separator, """");
                    }
                    Log.debug(""Deflating: "" + filePath);
                    int method = FileEntry.iMETHOD_DEFLATED;
                    if (!compress) {
                        method = FileEntry.iMETHOD_STORED;
                    }
                    try (EntryOutputStream out = zipFile.openEntryOutputStream(filePath, method, null)) {
                        int len;
                        while ((len = in.read(buffer)) > 0) {
                            out.write(buffer, 0, len);
                        }
                    }
                }
            }
        }
        // Close the ZipFile
        zipFile.close();

    } catch (IllegalArgumentException iae) {
        Log.error(iae.getMessage());
        return (false);
    } catch (FileNotFoundException fnfe) {
        Log.error(fnfe.getMessage());
        return (false);
    } catch (IOException ioe) {
        Log.error(ioe.getMessage());
        return (false);
    }
    return (true);
}"
54,SeqWare_seqware__289947f7719911a70d398c3df5a07906fc667bf3__289947f7719911a70d398c3df5a07906fc667bf3,seqware-common/src/main/java/net/sourceforge/seqware/common/util/filetools/FileTools.java,FileTools,"zipListFileRecursiveOld__(List<File> filesToZip, File zipFileName, String cutPrefix, String excludeRegEx,/*
                                                                                                                                  * boolean
                                                                                                                                  * relative
                                                                                                                                  * ,
                                                                                                                                  */
            boolean compress)","public static boolean zipListFileRecursiveOld(List<File> filesToZip, File zipFileName, String cutPrefix, String excludeRegEx,/*
                                                                                                                              * boolean
                                                                                                                              * relative
                                                                                                                              * ,
                                                                                                                              */
        boolean compress) {

    try {
        byte[] buffer = new byte[18024];
        try (ZipOutputStream out = new ZipOutputStream(new FileOutputStream(zipFileName))) {
            if (!compress) {
                out.setLevel(Deflater.NO_COMPRESSION);
            } else {
                out.setLevel(Deflater.DEFAULT_COMPRESSION);
            }
            for (File filesToZip1 : filesToZip) {
                if (excludeRegEx == null || !filesToZip1.getName().contains(excludeRegEx)) {
                    try (final FileInputStream in = new FileInputStream(filesToZip1)) {
                        String filePath = filesToZip1.getPath();
                        // if (relative) {
                        // filePath = filePath.replaceFirst(path.getAbsolutePath() +
                        // File.separator, """");
                        // }
                        // cutting from file path folder store
                        filePath = filePath.substring(cutPrefix.length());
                        Log.debug(""Deflating: "" + filePath);
                        out.putNextEntry(new ZipEntry(filePath));
                        // Transfer bytes from the current file to the ZIP file
                        // out.write(buffer, 0, in.read(buffer));
                        int len;
                        while ((len = in.read(buffer)) > 0) {
                            out.write(buffer, 0, len);
                        }
                        // Close the current entry
                        out.closeEntry();
                    }
                }
            }
        }

    } catch (IllegalArgumentException iae) {
        Log.error(iae.getMessage());
        return (false);
    } catch (FileNotFoundException fnfe) {
        Log.error(fnfe.getMessage());
        return (false);
    } catch (IOException ioe) {
        Log.error(ioe.getMessage());
        return (false);
    }
    return (true);
}"
55,SeqWare_seqware__289947f7719911a70d398c3df5a07906fc667bf3__289947f7719911a70d398c3df5a07906fc667bf3,seqware-pipeline/src/main/java/net/sourceforge/seqware/pipeline/plugins/WorkflowStatusChecker.java,WorkflowStatusChecker,isValid__(int c),"private static boolean isValid(int c) {
    return (c < 0x10000 && (CHARS[c] & MASK_VALID) != 0) || (0x10000 <= c && c <= 0x10FFFF);
}"
56,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,emergency__(String message),void emergency(String message);
57,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,alert__(String message),void alert(String message);
58,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,critical__(String message),void critical(String message);
59,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,error__(String message),void error(String message);
60,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,warning__(String message),void warning(String message);
61,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,notice__(String message),void notice(String message);
62,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,info__(String message),void info(String message);
63,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,debug__(String message),void debug(String message);
64,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,"log__(LogLevel level, String message)","void log(LogLevel level, String message);"
65,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,"emergency__(String message, Throwable t)","void emergency(String message, Throwable t);"
66,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,"alert__(String message, Throwable t)","void alert(String message, Throwable t);"
67,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,"critical__(String message, Throwable t)","void critical(String message, Throwable t);"
68,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,"error__(String message, Throwable t)","void error(String message, Throwable t);"
69,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,"warning__(String message, Throwable t)","void warning(String message, Throwable t);"
70,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,"notice__(String message, Throwable t)","void notice(String message, Throwable t);"
71,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,"info__(String message, Throwable t)","void info(String message, Throwable t);"
72,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,"debug__(String message, Throwable t)","void debug(String message, Throwable t);"
73,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/Logger.java,Logger,"log__(LogLevel level, String message, Throwable t)","void log(LogLevel level, String message, Throwable t);"
74,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/Cancellable.java,Cancellable,isCancelled__(),boolean isCancelled();
75,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/Cancellable.java,Cancellable,setCancelled__(),void setCancelled();
76,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/Cancellable.java,Cancellable,setCancelled__(boolean forceCancel),void setCancelled(boolean forceCancel);
77,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/player/PlayerEvent.java,PlayerEvent,getPlayer__(),"public Player getPlayer() {
    return player;
}"
78,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/player/PlayerAnimationEvent.java,PlayerAnimationEvent,getHandlers__(),"public static HandlerList getHandlers() {
    return handlers;
}"
79,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/player/PlayerEatFoodEvent.java,PlayerEatFoodEvent,getHandlers__(),"public static HandlerList getHandlers() {
    return handlers;
}"
80,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/Event.java,Event,getEventName__(),"final public String getEventName() {
    return eventName == null ? getClass().getName() : eventName;
}"
81,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/Event.java,Event,isCancelled__(),"public boolean isCancelled() {
    if (!(this instanceof Cancellable)) {
        throw new EventException(""Event is not Cancellable"");
    }
    return isCancelled;
}"
82,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/Event.java,Event,setCancelled__(),"public void setCancelled() {
    setCancelled(true);
}"
83,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/Event.java,Event,setCancelled__(boolean value),"public void setCancelled(boolean value) {
    if (!(this instanceof Cancellable)) {
        throw new EventException(""Event is not Cancellable"");
    }
    isCancelled = value;
}"
84,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/Bootstrap.java,Bootstrap,main__(String[] args),"public static void main(String[] args) {

    //Shorter title for windows 8/2012
    String osName = System.getProperty(""os.name"").toLowerCase();
    if (osName.contains(""windows"")) {
        if (osName.contains(""windows 8"") || osName.contains(""2012"")) {
            shortTitle = true;
        }
    }

    LogLevel logLevel = LogLevel.DEFAULT_LEVEL;
    int index = -1;
    boolean skip = false;
    //启动参数
    for (String arg : args) {
        index++;
        if (skip) {
            skip = false;
            continue;
        }

        switch (arg) {
            case ""disable-ansi"":
                ANSI = false;
                break;

            case ""--verbosity"":
            case ""-v"":
                skip = true;
                try {
                    String levelName = args[index + 1];
                    Set<String> levelNames = Arrays.stream(LogLevel.values()).map(level -> level.name().toLowerCase()).collect(Collectors.toSet());
                    if (!levelNames.contains(levelName.toLowerCase())) {
                        System.out.printf(""'%s' is not a valid log level, using the default\n"", levelName);
                        continue;
                    }
                    logLevel = Arrays.stream(LogLevel.values()).filter(level -> level.name().equalsIgnoreCase(levelName)).findAny().orElse(LogLevel.DEFAULT_LEVEL);
                } catch (ArrayIndexOutOfBoundsException e) {
                    System.out.println(""You must enter the requested log level, using the default\n"");
                }

        }
    }

    MainLogger logger = new MainLogger(DATA_PATH + ""server.log"", logLevel);
    System.out.printf(""Using log level '%s'\n"", logLevel);

    try {
        if (ANSI) {
            System.out.print((char) 0x1b + ""]0;Starting Nukkit NukkitServer For Minecraft: PE"" + (char) 0x07);
        }
        new NukkitServer(logger, PATH, DATA_PATH, PLUGIN_PATH);
    } catch (Exception e) {
        logger.logException(e);
    }

    if (ANSI) {
        System.out.print((char) 0x1b + ""]0;Stopping Server..."" + (char) 0x07);
    }
    logger.info(""Stopping other threads"");

    for (Thread thread : java.lang.Thread.getAllStackTraces().keySet()) {
        if (!(thread instanceof InterruptibleThread)) {
            continue;
        }
        logger.debug(""Stopping "" + thread.getClass().getSimpleName() + "" thread"");
        if (thread.isAlive()) {
            thread.interrupt();
        }
    }

    ServerKiller killer = new ServerKiller(8);
    killer.start();

    logger.shutdown();
    logger.interrupt();
    CommandReader.getInstance().removePromptLine();

    if (ANSI) {
        System.out.print((char) 0x1b + ""]0;Server Stopped"" + (char) 0x07);
    }
    System.exit(0);
}"
85,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/player/PlayerQuitEvent.java,PlayerQuitEvent,getHandlers__(),"public static HandlerList getHandlers() {
    return handlers;
}"
86,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/TranslationContainer.java,TranslationContainer,TranslationContainer__(String text),"public TranslationContainer(String text) {
    this(text, new String[]{});
}"
87,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/TranslationContainer.java,TranslationContainer,"TranslationContainer__(String text, String params)","public TranslationContainer(String text, String params) {
    super(text);
    this.setParameters(new String[]{params});
}"
88,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/TranslationContainer.java,TranslationContainer,"TranslationContainer__(String text, String[] params)","public TranslationContainer(String text, String[] params) {
    super(text);
    this.setParameters(params);
}"
89,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/TranslationContainer.java,TranslationContainer,getParameters__(),"public String[] getParameters() {
    return params;
}"
90,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/TranslationContainer.java,TranslationContainer,setParameters__(String[] params),"public void setParameters(String[] params) {
    this.params = params;
}"
91,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/TranslationContainer.java,TranslationContainer,getParameter__(int i),"public String getParameter(int i) {
    return (i >= 0 && i < this.params.length) ? this.params[i] : null;
}"
92,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/TranslationContainer.java,TranslationContainer,"setParameter__(int i, String str)","public void setParameter(int i, String str) {
    if (i >= 0 && i < this.params.length) {
        this.params[i] = str;
    }
}"
93,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/TranslationContainer.java,TranslationContainer,clone__(),"@Override
public TranslationContainer clone() {
    return new TranslationContainer(this.text, this.params.clone());
}"
94,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,broadcastMessage__(TextContainer message),"public int broadcastMessage(TextContainer message) {
    return this.broadcast(message, BROADCAST_CHANNEL_USERS);
}"
95,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,"broadcastMessage__(String message, CommandSender[] recipients)","public int broadcastMessage(String message, CommandSender[] recipients) {
    for (CommandSender recipient : recipients) {
        recipient.sendMessage(message);
    }

    return recipients.length;
}"
96,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,"broadcastMessage__(String message, Collection<CommandSender> recipients)","public int broadcastMessage(String message, Collection<CommandSender> recipients) {
    for (CommandSender recipient : recipients) {
        recipient.sendMessage(message);
    }

    return recipients.size();
}"
97,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,"broadcastMessage__(TextContainer message, Collection<CommandSender> recipients)","public int broadcastMessage(TextContainer message, Collection<CommandSender> recipients) {
    for (CommandSender recipient : recipients) {
        recipient.sendMessage(message);
    }

    return recipients.size();
}"
98,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getNukkitVersion__(),"public String getNukkitVersion() {
    return Bootstrap.VERSION;
}"
99,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getCodename__(),"public String getCodename() {
    return Bootstrap.CODENAME;
}"
100,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getMaxPlayers__(),"public int getMaxPlayers() {
    return maxPlayers;
}"
101,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getPort__(),"public int getPort() {
    return this.getPropertyInt(""server-port"", 19132);
}"
102,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getViewDistance__(),"public int getViewDistance() {
    return this.getPropertyInt(""view-distance"", 10);
}"
103,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getIp__(),"public String getIp() {
    return this.getPropertyString(""server-ip"", ""0.0.0.0"");
}"
104,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getServerUniqueId__(),"public UUID getServerUniqueId() {
    return this.serverID;
}"
105,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getAutoSave__(),"public boolean getAutoSave() {
    return this.autoSave;
}"
106,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,setAutoSave__(boolean autoSave),"public void setAutoSave(boolean autoSave) {
    this.autoSave = autoSave;
    for (Level level : this.getLevels().values()) {
        level.setAutoSave(this.autoSave);
    }
}"
107,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getLevelType__(),"public String getLevelType() {
    return this.getPropertyString(""level-type"", ""DEFAULT"");
}"
108,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getGenerateStructures__(),"public boolean getGenerateStructures() {
    return this.getPropertyBoolean(""generate-structures"", true);
}"
109,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getGamemode__(),"public int getGamemode() {
    return this.getPropertyInt(""gamemode"", 0) & 0b11;
}"
110,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getForceGamemode__(),"public boolean getForceGamemode() {
    return this.getPropertyBoolean(""force-gamemode"", false);
}"
111,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getDifficulty__(),"public int getDifficulty() {
    return this.getPropertyInt(""difficulty"", 1);
}"
112,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,hasWhitelist__(),"public boolean hasWhitelist() {
    return this.getPropertyBoolean(""white-list"", false);
}"
113,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getSpawnRadius__(),"public int getSpawnRadius() {
    return this.getPropertyInt(""spawn-protection"", 16);
}"
114,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getAllowFlight__(),"public boolean getAllowFlight() {
    if (getAllowFlight == null) {
        getAllowFlight = this.getPropertyBoolean(""allow-flight"", false);
    }
    return getAllowFlight;
}"
115,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,isHardcore__(),"public boolean isHardcore() {
    return this.getPropertyBoolean(""hardcore"", false);
}"
116,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getDefaultGamemode__(),"public int getDefaultGamemode() {
    return this.getPropertyInt(""gamemode"", 0);
}"
117,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getMotd__(),"public String getMotd() {
    return this.getPropertyString(""motd"", ""Nukkit NukkitServer For Minecraft: PE"");
}"
118,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getSubMotd__(),"public String getSubMotd() {
    return this.getPropertyString(""sub-motd"", ""Powered by Nukkit"");
}"
119,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getForceResources__(),"public boolean getForceResources() {
    return this.getPropertyBoolean(""force-resources"", false);
}"
120,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getLogger__(),"public MainLogger getLogger() {
    return this.logger;
}"
121,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getProperties__(),"public Config getProperties() {
    return this.properties;
}"
122,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getProperty__(String variable),"public Object getProperty(String variable) {
    return this.getProperty(variable, null);
}"
123,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,"getProperty__(String variable, Object defaultValue)","public Object getProperty(String variable, Object defaultValue) {
    return this.properties.exists(variable) ? this.properties.get(variable) : defaultValue;
}"
124,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,"setPropertyString__(String variable, String value)","public void setPropertyString(String variable, String value) {
    this.properties.set(variable, value);
    this.properties.save();
}"
125,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getPropertyString__(String variable),"public String getPropertyString(String variable) {
    return this.getPropertyString(variable, null);
}"
126,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,"getPropertyString__(String variable, String defaultValue)","public String getPropertyString(String variable, String defaultValue) {
    return this.properties.exists(variable) ? (String) this.properties.get(variable) : defaultValue;
}"
127,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getPropertyInt__(String variable),"public int getPropertyInt(String variable) {
    return this.getPropertyInt(variable, null);
}"
128,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,"getPropertyInt__(String variable, Integer defaultValue)","public int getPropertyInt(String variable, Integer defaultValue) {
    return this.properties.exists(variable) ? (!this.properties.get(variable).equals("""") ? Integer.parseInt(String.valueOf(this.properties.get(variable))) : defaultValue) : defaultValue;
}"
129,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,"setPropertyInt__(String variable, int value)","public void setPropertyInt(String variable, int value) {
    this.properties.set(variable, value);
    this.properties.save();
}"
130,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getPropertyBoolean__(String variable),"public boolean getPropertyBoolean(String variable) {
    return this.getPropertyBoolean(variable, null);
}"
131,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,"getPropertyBoolean__(String variable, Object defaultValue)","public boolean getPropertyBoolean(String variable, Object defaultValue) {
    Object value = this.properties.exists(variable) ? this.properties.get(variable) : defaultValue;
    if (value instanceof Boolean) {
        return (Boolean) value;
    }
    switch (String.valueOf(value)) {
        case ""on"":
        case ""true"":
        case ""1"":
        case ""yes"":
            return true;
    }
    return false;
}"
132,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,"setPropertyBoolean__(String variable, boolean value)","public void setPropertyBoolean(String variable, boolean value) {
    this.properties.set(variable, value ? ""1"" : ""0"");
    this.properties.save();
}"
133,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,addWhitelist__(String name),"public void addWhitelist(String name) {
    this.whitelist.set(name.toLowerCase(), true);
    this.whitelist.save(true);
}"
134,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,removeWhitelist__(String name),"public void removeWhitelist(String name) {
    this.whitelist.remove(name.toLowerCase());
    this.whitelist.save(true);
}"
135,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/player/PlayerCommandPreprocessEvent.java,PlayerCommandPreprocessEvent,getHandlers__(),"public static HandlerList getHandlers() {
    return handlers;
}"
136,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/player/PlayerCommandPreprocessEvent.java,PlayerCommandPreprocessEvent,"PlayerCommandPreprocessEvent__(Player player, String message)","public PlayerCommandPreprocessEvent(Player player, String message) {
    this.player = player;
    this.message = message;
}"
137,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/player/PlayerCommandPreprocessEvent.java,PlayerCommandPreprocessEvent,setPlayer__(Player player),"public void setPlayer(Player player) {
    this.player = player;
}"
138,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/player/PlayerAchievementAwardedEvent.java,PlayerAchievementAwardedEvent,getHandlers__(),"public static HandlerList getHandlers() {
    return handlers;
}"
139,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/player/PlayerAchievementAwardedEvent.java,PlayerAchievementAwardedEvent,"PlayerAchievementAwardedEvent__(Player player, String achievementId)","public PlayerAchievementAwardedEvent(Player player, String achievementId) {
    this.player = player;
    this.achievement = achievementId;
}"
140,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/player/PlayerAchievementAwardedEvent.java,PlayerAchievementAwardedEvent,getAchievement__(),"public String getAchievement() {
    return this.achievement;
}"
141,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/TextContainer.java,TextContainer,TextContainer__(String text),"public TextContainer(String text) {
    this.text = text;
}"
142,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/TextContainer.java,TextContainer,setText__(String text),"public void setText(String text) {
    this.text = text;
}"
143,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/TextContainer.java,TextContainer,getText__(),"public String getText() {
    return text;
}"
144,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/TextContainer.java,TextContainer,toString__(),"@Override
public String toString() {
    return this.getText();
}"
145,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/TextContainer.java,TextContainer,clone__(),"@Override
public TextContainer clone() {
    try {
        return (TextContainer) super.clone();
    } catch (CloneNotSupportedException e) {
        NukkitServer.getInstance().getLogger().logException(e);
    }
    return null;
}"
146,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/CommandSender.java,CommandSender,sendMessage__(String message),void sendMessage(String message);
147,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/CommandSender.java,CommandSender,sendMessage__(TextContainer message),void sendMessage(TextContainer message);
148,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/CommandReader.java,CommandReader,getInstance__(),"public static CommandReader getInstance() {
    return instance;
}"
149,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/CommandReader.java,CommandReader,CommandReader__(),"public CommandReader() {
    if (instance != null) {
        throw new RuntimeException(""CommandReader is already initialized!"");
    }
    try {
        this.reader = new ConsoleReader();
        reader.setPrompt(""> "");
        instance = this;

        reader.addCompleter(new PlayersCompleter()); // Add player TAB completer
        reader.addCompleter(new CommandsCompleter()); // Add command TAB completer
    } catch (IOException e) {
        NukkitServer.getInstance().getLogger().error(""Unable to start CommandReader"", e);
    }
    this.setName(""Console"");
}"
150,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/CommandReader.java,CommandReader,readLine__(),"public String readLine() {
    try {
        return reader.readLine();
    } catch (IOException e) {
        e.printStackTrace();
    }
    return null;
}"
151,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/CommandReader.java,CommandReader,run__(),"public void run() {
    Long lastLine = System.currentTimeMillis();
    String line;

    try {
        while ((line = reader.readLine()) != null) {
            if (NukkitServer.getInstance().getConsoleSender() == null || NukkitServer.getInstance().getPluginManager() == null) {
                continue;
            }

            if (!line.trim().isEmpty()) {
                //todo 将即时执行指令改为每tick执行
                try {
                    Timings.serverCommandTimer.startTiming();
                    ServerCommandEvent event = new ServerCommandEvent(NukkitServer.getInstance().getConsoleSender(), line);
                    NukkitServer.getInstance().getPluginManager().callEvent(event);
                    if (!event.isCancelled()) {
                        NukkitServer.getInstance().getScheduler().scheduleTask(() -> NukkitServer.getInstance().dispatchCommand(event.getSender(), event.getCommand()));
                    }
                    Timings.serverCommandTimer.stopTiming();
                } catch (Exception e) {
                    NukkitServer.getInstance().getLogger().logException(e);
                }

            } else if (System.currentTimeMillis() - lastLine <= 1) {
                try {
                    sleep(40);
                } catch (InterruptedException e) {
                    NukkitServer.getInstance().getLogger().logException(e);
                }
            }
            lastLine = System.currentTimeMillis();
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
}"
152,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/CommandReader.java,CommandReader,shutdown__(),"public void shutdown() {
    this.running = false;
}"
153,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/CommandReader.java,CommandReader,stashLine__(),"public synchronized void stashLine() {
    this.stashed = reader.getCursorBuffer().copy();
    try {
        reader.getOutput().write(""\u001b[1G\u001b[K"");
        reader.flush();
    } catch (IOException e) {
        // ignore
    }
}"
154,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/CommandReader.java,CommandReader,unstashLine__(),"public synchronized void unstashLine() {
    try {
        reader.resetPromptLine(""> "", this.stashed.toString(), this.stashed.cursor);
    } catch (IOException e) {
        // ignore
    }
}"
155,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/CommandReader.java,CommandReader,removePromptLine__(),"public void removePromptLine() {
    try {
        reader.resetPromptLine("""", """", 0);
    } catch (IOException e) {
        e.printStackTrace();
    }
}"
156,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/completers/CommandsCompleter.java,CommandsCompleter,"complete__(String buffer, int cursor, List<CharSequence> candidates)","@Override
public int complete(String buffer, int cursor, List<CharSequence> candidates) {
    // buffer could be null
    checkNotNull(candidates);

    if (buffer == null) {
        NukkitServer.getInstance().getCommandMap().getCommands().keySet().forEach((cmd) -> candidates.add(cmd));
    } else {
        SortedSet<String> names = new TreeSet<String>();
        NukkitServer.getInstance().getCommandMap().getCommands().keySet().forEach((cmd) -> names.add(cmd));
        for (String match : names) {
            if (!match.toLowerCase().startsWith(buffer.toLowerCase())) {
                continue;
            }

            candidates.add(match);
        }
    }

    return candidates.isEmpty() ? -1 : 0;
}"
157,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,MainLogger__(String logFile),"public MainLogger(String logFile) {
    this(logFile, LogLevel.DEFAULT_LEVEL);
}"
158,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,"MainLogger__(String logFile, LogLevel logLevel)","public MainLogger(String logFile, LogLevel logLevel) {

    if (logger != null) {
        throw new RuntimeException(""MainLogger has been already created"");
    }
    logger = this;
    this.logPath = logFile;
    this.start();
}"
159,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,"MainLogger__(String logFile, boolean logDebug)","public MainLogger(String logFile, boolean logDebug) {
    this(logFile, logDebug ? LogLevel.DEBUG : LogLevel.INFO);
}"
160,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,getLogger__(),"public static MainLogger getLogger() {
    return logger;
}"
161,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,emergency__(String message),"@Override
public void emergency(String message) {
    if (LogLevel.EMERGENCY.getLevel() <= logLevel.getLevel())
        this.send(TextFormat.RED + ""[EMERGENCY] "" + message);
}"
162,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,alert__(String message),"@Override
public void alert(String message) {
    if (LogLevel.ALERT.getLevel() <= logLevel.getLevel())
        this.send(TextFormat.RED + ""[ALERT] "" + message);
}"
163,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,critical__(String message),"@Override
public void critical(String message) {
    if (LogLevel.CRITICAL.getLevel() <= logLevel.getLevel())
        this.send(TextFormat.RED + ""[CRITICAL] "" + message);
}"
164,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,error__(String message),"@Override
public void error(String message) {
    if (LogLevel.ERROR.getLevel() <= logLevel.getLevel())
        this.send(TextFormat.DARK_RED + ""[ERROR] "" + message);
}"
165,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,warning__(String message),"@Override
public void warning(String message) {
    if (LogLevel.WARNING.getLevel() <= logLevel.getLevel())
        this.send(TextFormat.YELLOW + ""[WARNING] "" + message);
}"
166,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,notice__(String message),"@Override
public void notice(String message) {
    if (LogLevel.NOTICE.getLevel() <= logLevel.getLevel())
        this.send(TextFormat.AQUA + ""[NOTICE] "" + message);
}"
167,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,info__(String message),"@Override
public void info(String message) {
    if (LogLevel.INFO.getLevel() <= logLevel.getLevel())
        this.send(TextFormat.WHITE + ""[INFO] "" + message);
}"
168,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,debug__(String message),"@Override
public void debug(String message) {
    if (LogLevel.DEBUG.getLevel() <= logLevel.getLevel())
        this.send(TextFormat.GRAY + ""[DEBUG] "" + message);
}"
169,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,setLogDebug__(Boolean logDebug),"public void setLogDebug(Boolean logDebug) {
    this.logLevel = logDebug ? LogLevel.DEBUG : LogLevel.INFO;
}"
170,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,logException__(Exception e),"public void logException(Exception e) {
    this.alert(Utils.getExceptionMessage(e));
}"
171,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,"log__(LogLevel level, String message)","@Override
public void log(LogLevel level, String message) {
    switch (level) {
        case EMERGENCY:
            this.emergency(message);
            break;
        case ALERT:
            this.alert(message);
            break;
        case CRITICAL:
            this.critical(message);
            break;
        case ERROR:
            this.error(message);
            break;
        case WARNING:
            this.warning(message);
            break;
        case NOTICE:
            this.notice(message);
            break;
        case INFO:
            this.info(message);
            break;
        case DEBUG:
            this.debug(message);
            break;
    }
}"
172,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,shutdown__(),"public void shutdown() {
    this.shutdown = true;
}"
173,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,send__(String message),"protected void send(String message) {
    this.send(message, -1);
    synchronized (this) {
        this.notify();
    }
}"
174,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,"send__(String message, int level)","protected void send(String message, int level) {
    logBuffer.add(message);
}"
175,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,colorize__(String string),"private String colorize(String string) {
    if (string.indexOf(TextFormat.ESCAPE) < 0) {
        return string;
    } else if (Bootstrap.ANSI) {
        for (TextFormat color : colors) {
            if (replacements.containsKey(color)) {
                string = string.replaceAll(""(?i)"" + color, replacements.get(color));
            } else {
                string = string.replaceAll(""(?i)"" + color, """");
            }
        }
    } else {
        return TextFormat.clean(string);
    }
    return string + Ansi.ansi().reset();
}"
176,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,run__(),"@Override
public void run() {
    AnsiConsole.systemInstall();
    File logFile = new File(logPath);
    if (!logFile.exists()) {
        try {
            logFile.createNewFile();
        } catch (IOException e) {
            this.logException(e);
        }
    } else {
        long date = logFile.lastModified();
        String newName = new SimpleDateFormat(""Y-M-d HH.mm.ss"").format(new Date(date)) + "".log"";
        File oldLogs = new File(Bootstrap.DATA_PATH, ""logs"");
        if (!oldLogs.exists()) {
            oldLogs.mkdirs();
        }
        logFile.renameTo(new File(oldLogs, newName));
        logFile = new File(logPath);
        if (!logFile.exists()) {
            try {
                logFile.createNewFile();
            } catch (IOException e) {
                this.logException(e);
            }
        }
    }
    replacements.put(TextFormat.BLACK, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.BLACK).boldOff().toString());
    replacements.put(TextFormat.DARK_BLUE, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.BLUE).boldOff().toString());
    replacements.put(TextFormat.DARK_GREEN, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.GREEN).boldOff().toString());
    replacements.put(TextFormat.DARK_AQUA, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.CYAN).boldOff().toString());
    replacements.put(TextFormat.DARK_RED, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.RED).boldOff().toString());
    replacements.put(TextFormat.DARK_PURPLE, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.MAGENTA).boldOff().toString());
    replacements.put(TextFormat.GOLD, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.YELLOW).boldOff().toString());
    replacements.put(TextFormat.GRAY, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.WHITE).boldOff().toString());
    replacements.put(TextFormat.DARK_GRAY, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.BLACK).bold().toString());
    replacements.put(TextFormat.BLUE, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.BLUE).bold().toString());
    replacements.put(TextFormat.GREEN, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.GREEN).bold().toString());
    replacements.put(TextFormat.AQUA, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.CYAN).bold().toString());
    replacements.put(TextFormat.RED, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.RED).bold().toString());
    replacements.put(TextFormat.LIGHT_PURPLE, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.MAGENTA).bold().toString());
    replacements.put(TextFormat.YELLOW, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.YELLOW).bold().toString());
    replacements.put(TextFormat.WHITE, Ansi.ansi().a(Ansi.Attribute.RESET).fg(Ansi.Color.WHITE).bold().toString());
    replacements.put(TextFormat.BOLD, Ansi.ansi().a(Ansi.Attribute.UNDERLINE_DOUBLE).toString());
    replacements.put(TextFormat.STRIKETHROUGH, Ansi.ansi().a(Ansi.Attribute.STRIKETHROUGH_ON).toString());
    replacements.put(TextFormat.UNDERLINE, Ansi.ansi().a(Ansi.Attribute.UNDERLINE).toString());
    replacements.put(TextFormat.ITALIC, Ansi.ansi().a(Ansi.Attribute.ITALIC).toString());
    replacements.put(TextFormat.RESET, Ansi.ansi().a(Ansi.Attribute.RESET).toString());
    this.shutdown = false;
    do {
        flushBuffer(logFile);
    } while (!this.shutdown);
    flushBuffer(logFile);
}"
177,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,flushBuffer__(File logFile),"private void flushBuffer(File logFile) {
    if (logBuffer.isEmpty()) {
        try {
            synchronized (this) {
                wait(25000); // Wait for next message
            }
            Thread.sleep(5); // Buffer for 5ms to reduce back and forth between disk
        } catch (InterruptedException ignore) {
        }
    }
    try {
        Writer writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(logFile, true), StandardCharsets.UTF_8), 1024);
        Date now = new Date();
        String consoleDateFormat = new SimpleDateFormat(""HH:mm:ss "").format(now);
        String fileDateFormat = new SimpleDateFormat(""Y-M-d HH:mm:ss "").format(now);
        int count = 0;
        while (!logBuffer.isEmpty()) {
            String message = logBuffer.poll();
            if (message != null) {
                writer.write(fileDateFormat);
                writer.write(TextFormat.clean(message));
                writer.write(""\r\n"");
                CommandReader.getInstance().stashLine();
                System.out.println(colorize(TextFormat.AQUA + consoleDateFormat + TextFormat.RESET + message + TextFormat.RESET));
                CommandReader.getInstance().unstashLine();
            }
        }
        writer.flush();
        writer.close();
    } catch (Exception e) {
        this.logException(e);
    }
}"
178,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,"emergency__(String message, Throwable t)","@Override
public void emergency(String message, Throwable t) {
    this.emergency(message + ""\r\n"" + Utils.getExceptionMessage(t));
}"
179,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,"alert__(String message, Throwable t)","@Override
public void alert(String message, Throwable t) {
    this.alert(message + ""\r\n"" + Utils.getExceptionMessage(t));
}"
180,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,"critical__(String message, Throwable t)","@Override
public void critical(String message, Throwable t) {
    this.critical(message + ""\r\n"" + Utils.getExceptionMessage(t));
}"
181,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,"error__(String message, Throwable t)","@Override
public void error(String message, Throwable t) {
    this.error(message + ""\r\n"" + Utils.getExceptionMessage(t));
}"
182,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,"warning__(String message, Throwable t)","@Override
public void warning(String message, Throwable t) {
    this.warning(message + ""\r\n"" + Utils.getExceptionMessage(t));
}"
183,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,"notice__(String message, Throwable t)","@Override
public void notice(String message, Throwable t) {
    this.notice(message + ""\r\n"" + Utils.getExceptionMessage(t));
}"
184,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,"info__(String message, Throwable t)","@Override
public void info(String message, Throwable t) {
    this.info(message + ""\r\n"" + Utils.getExceptionMessage(t));
}"
185,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,"debug__(String message, Throwable t)","@Override
public void debug(String message, Throwable t) {
    this.debug(message + ""\r\n"" + Utils.getExceptionMessage(t));
}"
186,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/utils/MainLogger.java,MainLogger,"log__(LogLevel level, String message, Throwable t)","@Override
public void log(LogLevel level, String message, Throwable t) {
    this.log(level, message + ""\r\n"" + Utils.getExceptionMessage(t));
}"
187,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,ConsoleCommandSender__(),"public ConsoleCommandSender() {
    this.perm = new PermissibleBase(this);
}"
188,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,isPermissionSet__(String name),"@Override
public boolean isPermissionSet(String name) {
    return this.perm.isPermissionSet(name);
}"
189,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,isPermissionSet__(Permission permission),"@Override
public boolean isPermissionSet(Permission permission) {
    return this.perm.isPermissionSet(permission);
}"
190,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,hasPermission__(String name),"@Override
public boolean hasPermission(String name) {
    return this.perm.hasPermission(name);
}"
191,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,hasPermission__(Permission permission),"@Override
public boolean hasPermission(Permission permission) {
    return this.perm.hasPermission(permission);
}"
192,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,addAttachment__(Plugin plugin),"@Override
public PermissionAttachment addAttachment(Plugin plugin) {
    return this.perm.addAttachment(plugin);
}"
193,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,"addAttachment__(Plugin plugin, String name)","@Override
public PermissionAttachment addAttachment(Plugin plugin, String name) {
    return this.perm.addAttachment(plugin, name);
}"
194,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,"addAttachment__(Plugin plugin, String name, Boolean value)","@Override
public PermissionAttachment addAttachment(Plugin plugin, String name, Boolean value) {
    return this.perm.addAttachment(plugin, name, value);
}"
195,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,removeAttachment__(PermissionAttachment attachment),"@Override
public void removeAttachment(PermissionAttachment attachment) {
    this.perm.removeAttachment(attachment);
}"
196,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,recalculatePermissions__(),"@Override
public void recalculatePermissions() {
    this.perm.recalculatePermissions();
}"
197,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,getEffectivePermissions__(),"@Override
public Map<String, PermissionAttachmentInfo> getEffectivePermissions() {
    return this.perm.getEffectivePermissions();
}"
198,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,isPlayer__(),"public boolean isPlayer() {
    return false;
}"
199,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,getServer__(),"@Override
public NukkitServer getServer() {
    return NukkitServer.getInstance();
}"
200,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,sendMessage__(String message),"@Override
public void sendMessage(String message) {
    message = this.getServer().getLanguage().translateString(message);
    for (String line : message.trim().split(""\n"")) {
        MainLogger.getLogger().info(line);
    }
}"
201,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,sendMessage__(TextContainer message),"@Override
public void sendMessage(TextContainer message) {
    this.sendMessage(this.getServer().getLanguage().translate(message));
}"
202,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,getName__(),"@Override
public String getName() {
    return ""CONSOLE"";
}"
203,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,isOp__(),"@Override
public boolean isOp() {
    return true;
}"
204,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/ConsoleCommandSender.java,ConsoleCommandSender,setOp__(boolean value),"@Override
public void setOp(boolean value) {

}"
205,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/Command.java,Command,"execute__(CommandSender sender, String commandLabel, String[] args)","public abstract boolean execute(CommandSender sender, String commandLabel, String[] args);"
206,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/CommandExecutor.java,CommandExecutor,"onCommand__(CommandSender sender, Command command, String label, String[] args)","boolean onCommand(CommandSender sender, Command command, String label, String[] args);"
207,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/services/controller/ScreenController.java,ScreenController,setTransport__(PlayerTransport transport),"public void setTransport(PlayerTransport transport) {
    this.transport = transport;
}"
208,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/services/controller/PlayerController.java,PlayerController,setTransport__(PlayerTransport transport),"public void setTransport(PlayerTransport transport) {
    this.transport = transport;
    transport.setDefaultFilter(data -> data.toString());
}"
209,zalando_problem__1b987b88ecb5cc2c8df58ac8eda188fb2d6f5998__1b987b88ecb5cc2c8df58ac8eda188fb2d6f5998,jackson-datatype-problem/src/test/java/org/zalando/problem/BusinessException.java,BusinessException,BusinessException__(),"public BusinessException() {
}"
210,zalando_problem__1b987b88ecb5cc2c8df58ac8eda188fb2d6f5998__1b987b88ecb5cc2c8df58ac8eda188fb2d6f5998,jackson-datatype-problem/src/test/java/org/zalando/problem/BusinessException.java,BusinessException,"BusinessException__(final String message, final Throwable cause)","public BusinessException(final String message, final Throwable cause) {
    super(message, cause);
}"
211,zalando_problem__1b987b88ecb5cc2c8df58ac8eda188fb2d6f5998__1b987b88ecb5cc2c8df58ac8eda188fb2d6f5998,jackson-datatype-problem/src/test/java/org/zalando/problem/BusinessException.java,BusinessException,BusinessException__(final Throwable cause),"public BusinessException(final Throwable cause) {
    super(cause);
}"
212,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/service/impl/PostStateServiceImpl.java,PostStateServiceImpl,getAllPostState__(),"@Override
public List<PostStateDto> getAllPostState() {
    return this.execute(new GetAllPostStateCmd());
}"
213,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/service/impl/PostStateServiceImpl.java,PostStateServiceImpl,addPostState__(PostStateDto postStateDto),"@Override
public PostStateDto addPostState(PostStateDto postStateDto) {
    return this.execute(new AddPostStateCmd(postStateDto));
}"
214,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/service/impl/PostStateServiceImpl.java,PostStateServiceImpl,updatePostState__(PostStateDto postStateDto),"@Override
public PostStateDto updatePostState(PostStateDto postStateDto) {
    return this.execute(new UpdatePostStateCmd(postStateDto));
}"
215,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/service/impl/PostStateServiceImpl.java,PostStateServiceImpl,deletePostState__(String state),"@Override
public int deletePostState(String state) {
    return this.execute(new DeletePostStateCmd(state));
}"
216,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/service/ICommentaryService.java,ICommentaryService,getCommentaryList4PagerByCond__(GetCommentaryList4PagerByCondRequest req),List<CommentaryDto> getCommentaryList4PagerByCond(GetCommentaryList4PagerByCondRequest req) throws BaseAppException;
217,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/service/ICommentaryService.java,ICommentaryService,getCommentaryById__(Long commentaryId),CommentaryDto getCommentaryById(Long commentaryId) throws BaseAppException;
218,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/service/ICommentaryService.java,ICommentaryService,addCommentary__(CommentaryDto commentaryDto),CommentaryDto addCommentary(CommentaryDto commentaryDto) throws BaseAppException;
219,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/service/ICommentaryService.java,ICommentaryService,updateCommentary__(CommentaryDto commentaryDto),CommentaryDto updateCommentary(CommentaryDto commentaryDto) throws BaseAppException;
220,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/service/ICommentaryService.java,ICommentaryService,deleteCommentary__(Long commentaryId),int deleteCommentary(Long commentaryId) throws BaseAppException;
221,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/service/ICommentaryService.java,ICommentaryService,getAllCommentaryState__(),List<CommentaryStateDto> getAllCommentaryState() throws BaseAppException;
222,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngine.java,SystemEngine,getName__(),String getName();
223,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngine.java,SystemEngine,close__(),void close();
224,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngine.java,SystemEngine,getCommandExecutor__(),CommandExecutor getCommandExecutor();
225,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngine.java,SystemEngine,getService__(String serviceName),ServiceImpl getService(String serviceName);
226,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngine.java,SystemEngine,"initService__(String serviceName, ServiceImpl registerService)","void initService(String serviceName, ServiceImpl registerService);"
227,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,getId__(),"public Long getId() {
    return id;
}"
228,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,setId__(Long id),"public void setId(Long id) {
    this.id = id;
}"
229,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,getParentCommentaryId__(),"public Long getParentCommentaryId() {
    return parentCommentaryId;
}"
230,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,setParentCommentaryId__(Long parentCommentaryId),"public void setParentCommentaryId(Long parentCommentaryId) {
    this.parentCommentaryId = parentCommentaryId;
}"
231,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,getUserId__(),"public Long getUserId() {
    return userId;
}"
232,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,setUserId__(Long userId),"public void setUserId(Long userId) {
    this.userId = userId;
}"
233,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,getNickName__(),"public String getNickName() {
    return nickName;
}"
234,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,setNickName__(String nickName),"public void setNickName(String nickName) {
    this.nickName = nickName;
}"
235,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,getCommentaryIp__(),"public String getCommentaryIp() {
    return commentaryIp;
}"
236,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,setCommentaryIp__(String commentaryIp),"public void setCommentaryIp(String commentaryIp) {
    this.commentaryIp = commentaryIp;
}"
237,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,getCreatedDate__(),"public Date getCreatedDate() {
    return createdDate;
}"
238,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,setCreatedDate__(Date createdDate),"public void setCreatedDate(Date createdDate) {
    this.createdDate = createdDate;
}"
239,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,getPostId__(),"public Long getPostId() {
    return postId;
}"
240,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,setPostId__(Long postId),"public void setPostId(Long postId) {
    this.postId = postId;
}"
241,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,getState__(),"public String getState() {
    return state;
}"
242,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,setState__(String state),"public void setState(String state) {
    this.state = state;
}"
243,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,getStateDate__(),"public Date getStateDate() {
    return stateDate;
}"
244,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,setStateDate__(Date stateDate),"public void setStateDate(Date stateDate) {
    this.stateDate = stateDate;
}"
245,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,getContent__(),"public String getContent() {
    return content;
}"
246,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,setContent__(String content),"public void setContent(String content) {
    this.content = content;
}"
247,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,getAuthor__(),"public UserDto getAuthor() {
    return author;
}"
248,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,setAuthor__(UserDto author),"public void setAuthor(UserDto author) {
    this.author = author;
}"
249,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,getCommentaryState__(),"public CommentaryStateDto getCommentaryState() {
    return commentaryState;
}"
250,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,setCommentaryState__(CommentaryStateDto commentaryState),"public void setCommentaryState(CommentaryStateDto commentaryState) {
    this.commentaryState = commentaryState;
}"
251,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryDto.java,CommentaryDto,toString__(),"@Override
public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(""CommentaryDto [id="");
    builder.append(id);
    builder.append("", parentCommentaryId="");
    builder.append(parentCommentaryId);
    builder.append("", userId="");
    builder.append(userId);
    builder.append("", nickName="");
    builder.append(nickName);
    builder.append("", commentaryIp="");
    builder.append(commentaryIp);
    builder.append("", createdDate="");
    builder.append(createdDate);
    builder.append("", postId="");
    builder.append(postId);
    builder.append("", state="");
    builder.append(state);
    builder.append("", stateDate="");
    builder.append(stateDate);
    builder.append("", content="");
    builder.append(content);
    builder.append("", author="");
    builder.append(author);
    builder.append("", commentaryState="");
    builder.append(commentaryState);
    builder.append(""]"");
    return builder.toString();
}"
252,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessDeployImpl.java,ProcessDeployImpl,"deployFlow__(String processName, String classPath)","@Override
public void deployFlow(String processName, String classPath) {
    if (StringUtil.isNotEmpty(classPath) && !classPath.endsWith(EnumSymbol.BACKSLASH.getCode())) {
        classPath += EnumSymbol.BACKSLASH.getCode();
    }
    Deployment deployment = processEngine.getRepositoryService()
                        .createDeployment()
                        .name(processName)
                        .addClasspathResource(classPath + processName + BPMN_FINAL_NAME)
                        .addClasspathResource(classPath + processName + PNG_FINAL_NAME)
                        .deploy();
    logger.debug(""Id："" + deployment.getId());
    logger.debug(""Name："" + deployment.getName());
}"
253,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessDeployImpl.java,ProcessDeployImpl,deployFlow__(String processName),"@Override
public void deployFlow(String processName) {
    deployFlow(processName, null);
}"
254,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getId__(),"public Long getId() {
    return id;
}"
255,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setId__(Long id),"public void setId(Long id) {
    this.id = id;
}"
256,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getTitle__(),"public String getTitle() {
    return title;
}"
257,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setTitle__(String title),"public void setTitle(String title) {
    this.title = title;
}"
258,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getCreatedDate__(),"public Date getCreatedDate() {
    return createdDate;
}"
259,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setCreatedDate__(Date createdDate),"public void setCreatedDate(Date createdDate) {
    this.createdDate = createdDate;
}"
260,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getOriginalUrl__(),"public String getOriginalUrl() {
    return originalUrl;
}"
261,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setOriginalUrl__(String originalUrl),"public void setOriginalUrl(String originalUrl) {
    this.originalUrl = originalUrl;
}"
262,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getType__(),"public String getType() {
    return type;
}"
263,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setType__(String type),"public void setType(String type) {
    this.type = type;
}"
264,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getLastModifyDate__(),"public Date getLastModifyDate() {
    return lastModifyDate;
}"
265,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setLastModifyDate__(Date lastModifyDate),"public void setLastModifyDate(Date lastModifyDate) {
    this.lastModifyDate = lastModifyDate;
}"
266,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getReadTimes__(),"public Long getReadTimes() {
    return readTimes;
}"
267,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setReadTimes__(Long readTimes),"public void setReadTimes(Long readTimes) {
    this.readTimes = readTimes;
}"
268,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getLikedTimes__(),"public Long getLikedTimes() {
    return likedTimes;
}"
269,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setLikedTimes__(Long likedTimes),"public void setLikedTimes(Long likedTimes) {
    this.likedTimes = likedTimes;
}"
270,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getCommentTimes__(),"public Long getCommentTimes() {
    return commentTimes;
}"
271,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setCommentTimes__(Long commentTimes),"public void setCommentTimes(Long commentTimes) {
    this.commentTimes = commentTimes;
}"
272,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getUserId__(),"public Long getUserId() {
    return userId;
}"
273,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setUserId__(Long userId),"public void setUserId(Long userId) {
    this.userId = userId;
}"
274,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getEnableComment__(),"public String getEnableComment() {
    return enableComment;
}"
275,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setEnableComment__(String enableComment),"public void setEnableComment(String enableComment) {
    this.enableComment = enableComment;
}"
276,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getState__(),"public String getState() {
    return state;
}"
277,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setState__(String state),"public void setState(String state) {
    this.state = state;
}"
278,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getStateDate__(),"public Date getStateDate() {
    return stateDate;
}"
279,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setStateDate__(Date stateDate),"public void setStateDate(Date stateDate) {
    this.stateDate = stateDate;
}"
280,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getContent__(),"public String getContent() {
    return content;
}"
281,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setContent__(String content),"public void setContent(String content) {
    this.content = content;
}"
282,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getAuthor__(),"public UserDto getAuthor() {
    return author;
}"
283,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setAuthor__(UserDto author),"public void setAuthor(UserDto author) {
    this.author = author;
}"
284,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getPostType__(),"public PostTypeDto getPostType() {
    return postType;
}"
285,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setPostType__(PostTypeDto postType),"public void setPostType(PostTypeDto postType) {
    this.postType = postType;
}"
286,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,getPostState__(),"public PostStateDto getPostState() {
    return postState;
}"
287,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,setPostState__(PostStateDto postState),"public void setPostState(PostStateDto postState) {
    this.postState = postState;
}"
288,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostDto.java,PostDto,toString__(),"@Override
public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(""PostDto [id="");
    builder.append(id);
    builder.append("", title="");
    builder.append(title);
    builder.append("", createdDate="");
    builder.append(createdDate);
    builder.append("", originalUrl="");
    builder.append(originalUrl);
    builder.append("", type="");
    builder.append(type);
    builder.append("", lastModifyDate="");
    builder.append(lastModifyDate);
    builder.append("", readTimes="");
    builder.append(readTimes);
    builder.append("", likedTimes="");
    builder.append(likedTimes);
    builder.append("", commentTimes="");
    builder.append(commentTimes);
    builder.append("", userId="");
    builder.append(userId);
    builder.append("", enableComment="");
    builder.append(enableComment);
    builder.append("", state="");
    builder.append(state);
    builder.append("", stateDate="");
    builder.append(stateDate);
    builder.append("", content="");
    builder.append(content);
    builder.append("", author="");
    builder.append(author);
    builder.append("", postType="");
    builder.append(postType);
    builder.append("", postState="");
    builder.append(postState);
    builder.append(""]"");
    return builder.toString();
}"
289,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/GsonUtil.java,GsonUtil,GsonUtil__(),"private GsonUtil() {
}"
290,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/GsonUtil.java,GsonUtil,obj2Json__(Object obj),"public static String obj2Json(Object obj) {
    return gson.toJson(obj);
}"
291,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/DruidConfig.java,DruidConfig,getDruidStatInterceptor__(),"@Bean(name = ""druid-stat-interceptor"")
public DruidStatInterceptor getDruidStatInterceptor() {
    return new DruidStatInterceptor();
}"
292,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/DruidConfig.java,DruidConfig,getBeanTypeAutoProxyCreator__(),"@Bean(name = ""druid-type-proxyCreator"")
public BeanTypeAutoProxyCreator getBeanTypeAutoProxyCreator() {
    BeanTypeAutoProxyCreator beanTypeAutoProxyCreator = new BeanTypeAutoProxyCreator();
    beanTypeAutoProxyCreator.setTargetBeanType(ServiceImpl.class);
    beanTypeAutoProxyCreator.setInterceptorNames(""druid-stat-interceptor"");
    return beanTypeAutoProxyCreator;
}"
293,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/UpdateCommentaryStateCmd.java,UpdateCommentaryStateCmd,UpdateCommentaryStateCmd__(CommentaryStateDto commentaryStateDto),"public UpdateCommentaryStateCmd(CommentaryStateDto commentaryStateDto) {
    super();
    this.commentaryStateDto = commentaryStateDto;
}"
294,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/UpdateCommentaryStateCmd.java,UpdateCommentaryStateCmd,execute__(),"@Override
public CommentaryStateDto execute() {
    CommentaryStateDtoMapper commentaryStateDtoMapper = this.getMapper(CommentaryStateDtoMapper.class);
    commentaryStateDtoMapper.updateByPrimaryKey(commentaryStateDto);
    return commentaryStateDto;
}"
295,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessDeploy.java,IProcessDeploy,"deployFlow__(String processName, String classPath)","void deployFlow(String processName, String classPath);"
296,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessDeploy.java,IProcessDeploy,deployFlow__(String processName),void deployFlow(String processName);
297,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/config/ActivitiConfig.java,ActivitiConfig,processEngineFactoryBean__(),"@Bean
public ProcessEngineFactoryBean processEngineFactoryBean() {
    ProcessEngineFactoryBean processEngineFactoryBean = new ProcessEngineFactoryBean();
    processEngineFactoryBean.setProcessEngineConfiguration(standaloneProcessEngineConfiguration());
    return processEngineFactoryBean;
}"
298,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/config/ActivitiConfig.java,ActivitiConfig,standaloneProcessEngineConfiguration__(),"@Bean
public ProcessEngineConfigurationImpl standaloneProcessEngineConfiguration() {
    SpringProcessEngineConfiguration springProcessEngineConfiguration = new SpringProcessEngineConfiguration();
    // 设置数据源
    springProcessEngineConfiguration.setDataSource(dataSource);
    // 设置数据库类型
    springProcessEngineConfiguration.setDatabaseType(""mysql"");
    // 设置Activiti启动关闭所做操作
    // false(默认)：如果启动时数据库和配置不匹配，则抛异常
    // true：启动时检查数据库，如果不匹配，则创建
    // create-drop：启动时创建，关闭时删除数据库
    springProcessEngineConfiguration.setDatabaseSchemaUpdate(""true"");
    // 设置Job扫描功能关闭
    springProcessEngineConfiguration.setJobExecutorActivate(false);
    // 设置事务处理功能
    springProcessEngineConfiguration.setTransactionManager(transactionManager);
    return springProcessEngineConfiguration;
}"
299,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/config/ActivitiConfig.java,ActivitiConfig,repositoryService__(),"@Bean(name = ""repositoryService"")
public RepositoryService repositoryService() {
    return processEngineFactoryBean().getProcessEngineConfiguration().getRepositoryService();
}"
300,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/config/ActivitiConfig.java,ActivitiConfig,runtimeService__(),"@Bean(name = ""runtimeService"")
public RuntimeService runtimeService() {
    return processEngineFactoryBean().getProcessEngineConfiguration().getRuntimeService();
}"
301,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/config/ActivitiConfig.java,ActivitiConfig,taskService__(),"@Bean(name = ""taskService"")
public TaskService taskService() {
    return processEngineFactoryBean().getProcessEngineConfiguration().getTaskService();
}"
302,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/config/ActivitiConfig.java,ActivitiConfig,historyService__(),"@Bean(name = ""historyService"")
public HistoryService historyService() {
    return processEngineFactoryBean().getProcessEngineConfiguration().getHistoryService();
}"
303,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/config/ActivitiConfig.java,ActivitiConfig,managementService__(),"@Bean(name = ""managementService"")
public ManagementService managementService() {
    return processEngineFactoryBean().getProcessEngineConfiguration().getManagementService();
}"
304,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/consumer/DefaultConsumerMessageListener.java,DefaultConsumerMessageListener,doBusiness__(MessageRecord messageRecord),"@Override
protected void doBusiness(MessageRecord messageRecord) {
    logger.debug(""doBusiness, paramter is [{}]"", messageRecord);
}"
305,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/GetUserListByCondCmd.java,GetUserListByCondCmd,GetUserListByCondCmd__(GetUserList4PagerByCondRequest req),"public GetUserListByCondCmd(GetUserList4PagerByCondRequest req) {
    super();
    this.req = req;
}"
306,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/GetUserListByCondCmd.java,GetUserListByCondCmd,execute__(),"@Override
public List<UserDto> execute() {
    UserDtoMapper userDtoMapper = this.getMapper(UserDtoMapper.class);
    PageHelper.startPage(req.getPageNum(), req.getPageSize());
    return userDtoMapper.selectByCond(req);
}"
307,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/GetCommentaryList4PagerByCondCmd.java,GetCommentaryList4PagerByCondCmd,GetCommentaryList4PagerByCondCmd__(GetCommentaryList4PagerByCondRequest req),"public GetCommentaryList4PagerByCondCmd(GetCommentaryList4PagerByCondRequest req) {
    super();
    this.req = req;
}"
308,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/GetCommentaryList4PagerByCondCmd.java,GetCommentaryList4PagerByCondCmd,execute__(),"@Override
public List<CommentaryDto> execute() {
    CommentaryDtoMapper commentaryDtoMapper = this.getMapper(CommentaryDtoMapper.class);
    PageHelper.startPage(req.getPageNum(), req.getPageSize());
    return commentaryDtoMapper.selectByCond(req);
}"
309,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/DeleteCommentaryStateCmd.java,DeleteCommentaryStateCmd,DeleteCommentaryStateCmd__(String state),"public DeleteCommentaryStateCmd(String state) {
    super();
    this.state = state;
}"
310,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/DeleteCommentaryStateCmd.java,DeleteCommentaryStateCmd,execute__(),"@Override
public Integer execute() {
    CommentaryStateDtoMapper commentaryStateDtoMapper = this.getMapper(CommentaryStateDtoMapper.class);
    return commentaryStateDtoMapper.deleteByPrimaryKey(state);
}"
311,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/DeleteUserStateCmd.java,DeleteUserStateCmd,DeleteUserStateCmd__(String state),"public DeleteUserStateCmd(String state) {
    super();
    this.state = state;
}"
312,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/DeleteUserStateCmd.java,DeleteUserStateCmd,execute__(),"@Override
public Integer execute() {
    UserStateDtoMapper userStateDtoMapper = this.getMapper(UserStateDtoMapper.class);
    return userStateDtoMapper.deleteByPrimaryKey(state);
}"
313,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/QryAllUserCmd.java,QryAllUserCmd,execute__(),"@Override
public List<UserDto> execute() {
    UserDtoMapper userDtoMapper = this.getMapper(UserDtoMapper.class);
    return userDtoMapper.selectAll();
}"
314,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/ImportsPlugin.java,ImportsPlugin,setContext__(Context context),"@Override
public void setContext(Context context) {
    super.setContext(context);
    this.properties = context.getProperties();
}"
315,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/ImportsPlugin.java,ImportsPlugin,validate__(List<String> warnings),"@Override
public boolean validate(List<String> warnings) {
    return true;
}"
316,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/ImportsPlugin.java,ImportsPlugin,setProperties__(Properties properties),"@Override
public void setProperties(Properties properties) {
    super.setProperties(properties);

    String authorString = this.properties.getProperty(""author"");
    if (StringUtility.stringHasValue(authorString)) {
        author = authorString;
    }

    currentDateStr = new SimpleDateFormat(""yyyy年MM月dd日"").format(new Date());
}"
317,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/ImportsPlugin.java,ImportsPlugin,"clientGenerated__(Interface interfaze, TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean clientGenerated(Interface interfaze, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    interfaze.addJavaDocLine(""/**"");
    interfaze.addJavaDocLine("" *"");
    interfaze.addJavaDocLine("" * Description: "" + introspectedTable.getFullyQualifiedTable() + "" Mapper 接口"");
    interfaze.addJavaDocLine("" *"");
    interfaze.addJavaDocLine("" * Created on "" + currentDateStr);
    interfaze.addJavaDocLine("" * @author "" + author);
    interfaze.addJavaDocLine("" * @version 1.0"");
    interfaze.addJavaDocLine("" * @since v1.0"");
    interfaze.addJavaDocLine("" */"");
    return true;
}"
318,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/ImportsPlugin.java,ImportsPlugin,"processEntityClass__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","private void processEntityClass(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {

    // 导入ApiModel和ApiModelProperty包，用于swaggerUI
    topLevelClass.addImportedType(""com.wordnik.swagger.annotations.ApiModel"");
    topLevelClass.addImportedType(""com.wordnik.swagger.annotations.ApiModelProperty"");

    topLevelClass.addAnnotation(""@ApiModel(value = \"""" + introspectedTable.getFullyQualifiedTable() + ""实体\"")"");

    // 引入JPA注解
    topLevelClass.addImportedType(""javax.persistence.Column"");

    Field generatedValueField = null;
    for (Field field : topLevelClass.getFields()) {
        List<String> annotations = field.getAnnotations();
        for (String annotation : annotations) {
            if (annotation.startsWith(""@GeneratedValue"")) {
                generatedValueField = field;
                break;
            }
        }
    }

    if (generatedValueField != null) {

        topLevelClass.addImportedType(""javax.persistence.GeneratedValue"");
        topLevelClass.addImportedType(""javax.persistence.GenerationType"");
    }
    topLevelClass.addImportedType(""javax.persistence.Id"");

    // 判断field是否是Transient，如果是则导入对应包
    for (Field field : topLevelClass.getFields()) {
        if (field.isTransient()) {
            topLevelClass.addImportedType(""javax.persistence.Transient"");
            break;
        }
    }

    // 实体类注释
    topLevelClass.addJavaDocLine(""/**"");
    topLevelClass.addJavaDocLine("" *"");
    topLevelClass.addJavaDocLine("" * Description: "" + introspectedTable.getFullyQualifiedTable() + "" 实体"");
    topLevelClass.addJavaDocLine("" *"");
    topLevelClass.addJavaDocLine("" * Created on "" + currentDateStr);
    topLevelClass.addJavaDocLine("" * @author "" + author);
    topLevelClass.addJavaDocLine("" * @version 1.0"");
    topLevelClass.addJavaDocLine("" * @since v1.0"");
    topLevelClass.addJavaDocLine("" */"");
}"
319,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/ImportsPlugin.java,ImportsPlugin,"modelBaseRecordClassGenerated__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean modelBaseRecordClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    processEntityClass(topLevelClass, introspectedTable);
    return true;
}"
320,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/ImportsPlugin.java,ImportsPlugin,"modelPrimaryKeyClassGenerated__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean modelPrimaryKeyClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    processEntityClass(topLevelClass, introspectedTable);
    return true;
}"
321,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/ImportsPlugin.java,ImportsPlugin,"modelRecordWithBLOBsClassGenerated__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean modelRecordWithBLOBsClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    processEntityClass(topLevelClass, introspectedTable);
    return false;
}"
322,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContextFactory.java,CommandContextFactory,createCommandContext__(Command<?> cmd),"public CommandContext createCommandContext(Command<?> cmd) {
    return new CommandContext(cmd, systemEngineConfig);
}"
323,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContextFactory.java,CommandContextFactory,getSystemEngineConfig__(),"public SystemEngineConfig getSystemEngineConfig() {
    return systemEngineConfig;
}"
324,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContextFactory.java,CommandContextFactory,setSystemEngineConfig__(SystemEngineConfig systemEngineConfig),"public void setSystemEngineConfig(SystemEngineConfig systemEngineConfig) {
    this.systemEngineConfig = systemEngineConfig;
}"
325,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/springmvc/DateConverter.java,DateConverter,convert__(String source),"@Override
public Date convert(String source) {

    if (StringUtil.isEmpty(source)) {
        return null;
    }

    if (source.matches(""^\\d{4}-\\d{1,2}$"")) {
        return DateUtil.string2Date(source, FORMATS.get(0));
    } else if (source.matches(""^\\d{4}-\\d{1,2}-\\d{1,2}$"")) {
        return DateUtil.string2Date(source, FORMATS.get(1));
    } else if (source.matches(""^\\d{4}-\\d{1,2}-\\d{1,2} {1}\\d{1,2}:\\d{1,2}$"")) {
        return DateUtil.string2Date(source, FORMATS.get(2));
    } else if (source.matches(""^\\d{4}-\\d{1,2}-\\d{1,2} {1}\\d{1,2}:\\d{1,2}:\\d{1,2}$"")) {
        return DateUtil.string2Date(source, FORMATS.get(3));
    } else {
        ExceptionHandler.publish(""CORE-000008"", null, source);
    }
    return null;
}"
326,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/commentary/controller/CommentaryController.java,CommentaryController,"getCommentaryList4PagerByCond__(
            @ApiParam(required = true, value = ""查询评价列表条件"") @ModelAttribute GetCommentaryList4PagerByCondRequest req)","@RequestMapping(value = ""/pager"", method = RequestMethod.GET)
@ApiOperation(""查询评价列表，分页用"")
public PageInfo<CommentaryDto> getCommentaryList4PagerByCond(
        @ApiParam(required = true, value = ""查询评价列表条件"") @ModelAttribute GetCommentaryList4PagerByCondRequest req) {
    List<CommentaryDto> commentaryList = commentaryService.getCommentaryList4PagerByCond(req);
    return new PageInfo<>(commentaryList);
}"
327,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/commentary/controller/CommentaryController.java,CommentaryController,"getCommentaryById__(
            @ApiParam(required = true, value = ""评价主键"") @PathVariable(""commentaryId"") Long commentaryId)","@RequestMapping(value = ""/{commentaryId}"", method = RequestMethod.GET)
@ApiOperation(""根据主键查询评价"")
public CommentaryDto getCommentaryById(
        @ApiParam(required = true, value = ""评价主键"") @PathVariable(""commentaryId"") Long commentaryId) {
    return commentaryService.getCommentaryById(commentaryId);
}"
328,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/commentary/controller/CommentaryController.java,CommentaryController,"addCommentary__(
            @ApiParam(required = true, value = ""评价实体"") @RequestBody CommentaryDto commentaryDto)","@RequestMapping(method = RequestMethod.POST)
@ApiOperation(""新增评价"")
public CommentaryDto addCommentary(
        @ApiParam(required = true, value = ""评价实体"") @RequestBody CommentaryDto commentaryDto) {
    return commentaryService.addCommentary(commentaryDto);
}"
329,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/commentary/controller/CommentaryController.java,CommentaryController,"updateCommentary__(
            @ApiParam(required = true, value = ""评价实体"") @RequestBody CommentaryDto commentaryDto)","@RequestMapping(method = RequestMethod.PATCH)
@ApiOperation(""修改评价"")
public CommentaryDto updateCommentary(
        @ApiParam(required = true, value = ""评价实体"") @RequestBody CommentaryDto commentaryDto) {
    return commentaryService.updateCommentary(commentaryDto);
}"
330,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/commentary/controller/CommentaryController.java,CommentaryController,"deleteCommentary__(
            @ApiParam(required = true, value = ""评价主键"") @PathVariable(""commentaryId"") Long commentaryId)","@RequestMapping(value = ""/{commentaryId}"", method = RequestMethod.DELETE)
@ApiOperation(""删除评价"")
public int deleteCommentary(
        @ApiParam(required = true, value = ""评价主键"") @PathVariable(""commentaryId"") Long commentaryId) {
    return commentaryService.deleteCommentary(commentaryId);
}"
331,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/AddCommentaryCmd.java,AddCommentaryCmd,AddCommentaryCmd__(CommentaryDto commentaryDto),"public AddCommentaryCmd(CommentaryDto commentaryDto) {
    super();
    this.commentaryDto = commentaryDto;
}"
332,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/AddCommentaryCmd.java,AddCommentaryCmd,execute__(),"@Override
public CommentaryDto execute() {
    CommentaryDtoMapper commentaryDtoMapper = this.getMapper(CommentaryDtoMapper.class);
    commentaryDtoMapper.insert(commentaryDto);
    return commentaryDto;
}"
333,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/request/GetCommentaryList4PagerByCondRequest.java,GetCommentaryList4PagerByCondRequest,getPageNum__(),"public int getPageNum() {
    return pageNum;
}"
334,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/request/GetCommentaryList4PagerByCondRequest.java,GetCommentaryList4PagerByCondRequest,setPageNum__(int pageNum),"public void setPageNum(int pageNum) {
    this.pageNum = pageNum;
}"
335,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/request/GetCommentaryList4PagerByCondRequest.java,GetCommentaryList4PagerByCondRequest,getPageSize__(),"public int getPageSize() {
    return pageSize;
}"
336,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/request/GetCommentaryList4PagerByCondRequest.java,GetCommentaryList4PagerByCondRequest,setPageSize__(int pageSize),"public void setPageSize(int pageSize) {
    this.pageSize = pageSize;
}"
337,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/request/GetCommentaryList4PagerByCondRequest.java,GetCommentaryList4PagerByCondRequest,getPostId__(),"public Long getPostId() {
    return postId;
}"
338,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/request/GetCommentaryList4PagerByCondRequest.java,GetCommentaryList4PagerByCondRequest,setPostId__(Long postId),"public void setPostId(Long postId) {
    this.postId = postId;
}"
339,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/request/GetCommentaryList4PagerByCondRequest.java,GetCommentaryList4PagerByCondRequest,getKeyword__(),"public String getKeyword() {
    return keyword;
}"
340,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/request/GetCommentaryList4PagerByCondRequest.java,GetCommentaryList4PagerByCondRequest,setKeyword__(String keyword),"public void setKeyword(String keyword) {
    this.keyword = keyword;
}"
341,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/request/GetCommentaryList4PagerByCondRequest.java,GetCommentaryList4PagerByCondRequest,getCreatedDateStart__(),"public Date getCreatedDateStart() {
    return createdDateStart;
}"
342,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/request/GetCommentaryList4PagerByCondRequest.java,GetCommentaryList4PagerByCondRequest,setCreatedDateStart__(Date createdDateStart),"public void setCreatedDateStart(Date createdDateStart) {
    this.createdDateStart = createdDateStart;
}"
343,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/request/GetCommentaryList4PagerByCondRequest.java,GetCommentaryList4PagerByCondRequest,getCreatedDateEnd__(),"public Date getCreatedDateEnd() {
    return createdDateEnd;
}"
344,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/request/GetCommentaryList4PagerByCondRequest.java,GetCommentaryList4PagerByCondRequest,setCreatedDateEnd__(Date createdDateEnd),"public void setCreatedDateEnd(Date createdDateEnd) {
    this.createdDateEnd = createdDateEnd;
}"
345,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/request/GetCommentaryList4PagerByCondRequest.java,GetCommentaryList4PagerByCondRequest,toString__(),"@Override
public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(""GetCommentaryList4PagerByCondRequest [pageNum="");
    builder.append(pageNum);
    builder.append("", pageSize="");
    builder.append(pageSize);
    builder.append("", postId="");
    builder.append(postId);
    builder.append("", keyword="");
    builder.append(keyword);
    builder.append("", createdDateStart="");
    builder.append(createdDateStart);
    builder.append("", createdDateEnd="");
    builder.append(createdDateEnd);
    builder.append(""]"");
    return builder.toString();
}"
346,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getId__(),"public Long getId() {
    return id;
}"
347,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setId__(Long id),"public void setId(Long id) {
    this.id = id;
}"
348,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getAccNbr__(),"public String getAccNbr() {
    return accNbr;
}"
349,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setAccNbr__(String accNbr),"public void setAccNbr(String accNbr) {
    this.accNbr = accNbr;
}"
350,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getPassword__(),"public String getPassword() {
    return password;
}"
351,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setPassword__(String password),"public void setPassword(String password) {
    this.password = password;
}"
352,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getEmail__(),"public String getEmail() {
    return email;
}"
353,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setEmail__(String email),"public void setEmail(String email) {
    this.email = email;
}"
354,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getRealName__(),"public String getRealName() {
    return realName;
}"
355,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setRealName__(String realName),"public void setRealName(String realName) {
    this.realName = realName;
}"
356,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getNickName__(),"public String getNickName() {
    return nickName;
}"
357,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setNickName__(String nickName),"public void setNickName(String nickName) {
    this.nickName = nickName;
}"
358,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getEnName__(),"public String getEnName() {
    return enName;
}"
359,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setEnName__(String enName),"public void setEnName(String enName) {
    this.enName = enName;
}"
360,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getQq__(),"public String getQq() {
    return qq;
}"
361,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setQq__(String qq),"public void setQq(String qq) {
    this.qq = qq;
}"
362,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getWechat__(),"public String getWechat() {
    return wechat;
}"
363,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setWechat__(String wechat),"public void setWechat(String wechat) {
    this.wechat = wechat;
}"
364,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getPhoneNbr__(),"public String getPhoneNbr() {
    return phoneNbr;
}"
365,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setPhoneNbr__(String phoneNbr),"public void setPhoneNbr(String phoneNbr) {
    this.phoneNbr = phoneNbr;
}"
366,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getUserDesc__(),"public String getUserDesc() {
    return userDesc;
}"
367,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setUserDesc__(String userDesc),"public void setUserDesc(String userDesc) {
    this.userDesc = userDesc;
}"
368,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getState__(),"public String getState() {
    return state;
}"
369,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setState__(String state),"public void setState(String state) {
    this.state = state;
}"
370,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getRegDate__(),"public Date getRegDate() {
    return regDate;
}"
371,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setRegDate__(Date regDate),"public void setRegDate(Date regDate) {
    this.regDate = regDate;
}"
372,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getLastLoginDate__(),"public Date getLastLoginDate() {
    return lastLoginDate;
}"
373,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setLastLoginDate__(Date lastLoginDate),"public void setLastLoginDate(Date lastLoginDate) {
    this.lastLoginDate = lastLoginDate;
}"
374,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,getUserState__(),"public UserStateDto getUserState() {
    return userState;
}"
375,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,setUserState__(UserStateDto userState),"public void setUserState(UserStateDto userState) {
    this.userState = userState;
}"
376,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserDto.java,UserDto,toString__(),"@Override
public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(""UserDto [id="");
    builder.append(id);
    builder.append("", accNbr="");
    builder.append(accNbr);
    builder.append("", password="");
    builder.append(password);
    builder.append("", email="");
    builder.append(email);
    builder.append("", realName="");
    builder.append(realName);
    builder.append("", nickName="");
    builder.append(nickName);
    builder.append("", enName="");
    builder.append(enName);
    builder.append("", qq="");
    builder.append(qq);
    builder.append("", wechat="");
    builder.append(wechat);
    builder.append("", phoneNbr="");
    builder.append(phoneNbr);
    builder.append("", userDesc="");
    builder.append(userDesc);
    builder.append("", state="");
    builder.append(state);
    builder.append("", regDate="");
    builder.append(regDate);
    builder.append("", lastLoginDate="");
    builder.append(lastLoginDate);
    builder.append("", userState="");
    builder.append(userState);
    builder.append(""]"");
    return builder.toString();
}"
377,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/DbSqlSession.java,DbSqlSession,DbSqlSession__(DbSqlSessionFactory dbSqlSessionFactory),"public DbSqlSession(DbSqlSessionFactory dbSqlSessionFactory) {
    this.dbSqlSessionFactory = dbSqlSessionFactory;
    this.sqlSession = dbSqlSessionFactory.getSqlSessionFactory().openSession();
}"
378,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/DbSqlSession.java,DbSqlSession,getMapper__(Class<K> type),"public <K> K getMapper(Class<K> type) {
    return getSqlSession().getMapper(type);
}"
379,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/DbSqlSession.java,DbSqlSession,flush__(),"@Override
public void flush() {

}"
380,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/DbSqlSession.java,DbSqlSession,close__(),"@Override
public void close() {
    sqlSession.close();
}"
381,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/DbSqlSession.java,DbSqlSession,commit__(),"public void commit() {
    sqlSession.commit();
}"
382,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/DbSqlSession.java,DbSqlSession,rollback__(),"public void rollback() {
    sqlSession.rollback();
}"
383,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/DbSqlSession.java,DbSqlSession,getSqlSession__(),"public SqlSession getSqlSession() {
    return sqlSession;
}"
384,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/DbSqlSession.java,DbSqlSession,setSqlSession__(SqlSession sqlSession),"public void setSqlSession(SqlSession sqlSession) {
    this.sqlSession = sqlSession;
}"
385,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/db/service/impl/DbServiceImpl.java,DbServiceImpl,getDBDateTime__(),"public Date getDBDateTime() throws BaseAppException {
    return this.execute(new QryDbDateTimeCmd());

}"
386,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/UpdatePostTypeCmd.java,UpdatePostTypeCmd,UpdatePostTypeCmd__(PostTypeDto postTypeDto),"public UpdatePostTypeCmd(PostTypeDto postTypeDto) {
    super();
    this.postTypeDto = postTypeDto;
}"
387,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/UpdatePostTypeCmd.java,UpdatePostTypeCmd,execute__(),"@Override
public PostTypeDto execute() {
    PostTypeDtoMapper postTypeDtoMapper = this.getMapper(PostTypeDtoMapper.class);
    postTypeDtoMapper.updateByPrimaryKey(postTypeDto);
    return postTypeDto;
}"
388,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/SqlSessionFactoryBeanConfig.java,SqlSessionFactoryBeanConfig,sqlSessionFactoryBean__(),"@Bean(name = ""sqlSessionFactory"")
public SqlSessionFactoryBean sqlSessionFactoryBean() throws IOException {
    SqlSessionFactoryBean sqlSessionFactoryBean = new SqlSessionFactoryBean();
    sqlSessionFactoryBean.setDataSource(dataSource);
    // 解析classpath
    Resource[] littlefisherResources = new PathMatchingResourcePatternResolver()
            .getResources(""classpath*:com/littlefisher/**/mapper/*.xml"");
    sqlSessionFactoryBean.setMapperLocations(littlefisherResources);
    Interceptor[] plugins = { pageInterceptor() };
    sqlSessionFactoryBean.setPlugins(plugins);
    return sqlSessionFactoryBean;
}"
389,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/SqlSessionFactoryBeanConfig.java,SqlSessionFactoryBeanConfig,pageInterceptor__(),"@Bean
public PageInterceptor pageInterceptor() {
    PageInterceptor pageInterceptor = new PageInterceptor();
    Properties properties = new Properties();
    properties.put(""helperDialect"", ""mysql"");
    properties.put(""pageSizeZero"", true);
    pageInterceptor.setProperties(properties);
    return pageInterceptor;
}"
390,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/BaseRuntimeException.java,BaseRuntimeException,BaseRuntimeException__(),"public BaseRuntimeException() {
    super();
}"
391,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/BaseRuntimeException.java,BaseRuntimeException,"BaseRuntimeException__(String message, Throwable cause)","public BaseRuntimeException(String message, Throwable cause) {
    super(message, cause);
}"
392,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,LittleFisherLogger__(Logger logger),"private LittleFisherLogger(Logger logger) {
    this.logger = logger;
}"
393,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,getLogger__(Class<?> clazz),"public static LittleFisherLogger getLogger(Class<?> clazz) {
    if (loggerCache.get(clazz.getName()) != null) {
        return loggerCache.get(clazz.getName());
    }
    LittleFisherLogger littleFisherLogger = new LittleFisherLogger(LogManager.getLogger(clazz));
    loggerCache.put(clazz.getName(), littleFisherLogger);
    return littleFisherLogger;
}"
394,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,debug__(Object msg),"public void debug(Object msg) {
    if (logger.isDebugEnabled()) {
        logger.debug(msg);
    }
}"
395,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"debug__(Object msg, Throwable t)","public void debug(Object msg, Throwable t) {
    if (logger.isDebugEnabled()) {
        logger.debug(msg, t);
    }
}"
396,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"debug__(String msg, Object... arguments)","public void debug(String msg, Object... arguments) {
    if (logger.isDebugEnabled()) {
        logger.debug(msg, arguments);
    }
}"
397,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"debug__(String msg, Supplier<?>... paramSuppliers)","public void debug(String msg, Supplier<?>... paramSuppliers) {
    if (logger.isDebugEnabled()) {
        logger.debug(msg, paramSuppliers);
    }
}"
398,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,fatal__(Object msg),"public void fatal(Object msg) {
    if (logger.isFatalEnabled()) {
        logger.fatal(msg);
    }
}"
399,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"fatal__(Object msg, Throwable t)","public void fatal(Object msg, Throwable t) {
    if (logger.isFatalEnabled()) {
        logger.fatal(msg, t);
    }
}"
400,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"fatal__(String msg, Object... arguments)","public void fatal(String msg, Object... arguments) {
    if (logger.isFatalEnabled()) {
        logger.fatal(msg, arguments);
    }
}"
401,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"fatal__(String msg, Supplier<?>... paramSuppliers)","public void fatal(String msg, Supplier<?>... paramSuppliers) {
    if (logger.isFatalEnabled()) {
        logger.fatal(msg, paramSuppliers);
    }
}"
402,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,info__(Object msg),"public void info(Object msg) {
    if (logger.isInfoEnabled()) {
        logger.info(msg);
    }
}"
403,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"info__(Object msg, Throwable t)","public void info(Object msg, Throwable t) {
    if (logger.isInfoEnabled()) {
        logger.info(msg, t);
    }
}"
404,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"info__(String msg, Object... arguments)","public void info(String msg, Object... arguments) {
    if (logger.isInfoEnabled()) {
        logger.info(msg, arguments);
    }
}"
405,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"info__(String msg, Supplier<?>... paramSuppliers)","public void info(String msg, Supplier<?>... paramSuppliers) {
    if (logger.isInfoEnabled()) {
        logger.info(msg, paramSuppliers);
    }
}"
406,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,warn__(Object msg),"public void warn(Object msg) {
    if (logger.isWarnEnabled()) {
        logger.warn(msg);
    }
}"
407,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"warn__(Object msg, Throwable t)","public void warn(Object msg, Throwable t) {
    if (logger.isWarnEnabled()) {
        logger.warn(msg, t);
    }
}"
408,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"warn__(String msg, Object... arguments)","public void warn(String msg, Object... arguments) {
    if (logger.isWarnEnabled()) {
        logger.warn(msg, arguments);
    }
}"
409,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"warn__(String msg, Supplier<?>... paramSuppliers)","public void warn(String msg, Supplier<?>... paramSuppliers) {
    if (logger.isWarnEnabled()) {
        logger.warn(msg, paramSuppliers);
    }
}"
410,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,error__(Object msg),"public void error(Object msg) {
    if (logger.isErrorEnabled()) {
        logger.error(msg);
    }
}"
411,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"error__(Object msg, Throwable t)","public void error(Object msg, Throwable t) {
    if (logger.isErrorEnabled()) {
        logger.error(msg, t);
    }
}"
412,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"error__(String msg, Object... arguments)","public void error(String msg, Object... arguments) {
    if (logger.isErrorEnabled()) {
        logger.error(msg, arguments);
    }
}"
413,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/LittleFisherLogger.java,LittleFisherLogger,"error__(String msg, Supplier<?>... paramSuppliers)","public void error(String msg, Supplier<?>... paramSuppliers) {
    if (logger.isErrorEnabled()) {
        logger.error(msg, paramSuppliers);
    }
}"
414,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EntityEvent.java,EntityEvent,getEntity__(),Object getEntity();
415,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContext.java,CommandContext,"CommandContext__(Command<?> command, SystemEngineConfig systemEngineConfig)","public CommandContext(Command<?> command, SystemEngineConfig systemEngineConfig) {
    this.command = command;
    this.systemEngineConfig = systemEngineConfig;
    this.sessionFactories = systemEngineConfig.getSessionFactories();
}"
416,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContext.java,CommandContext,exception__(Throwable exception),"public void exception(Throwable exception) {
    if (this.exception == null) {
        this.exception = exception;
    }
}"
417,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContext.java,CommandContext,close__(),"public void close() {

}"
418,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContext.java,CommandContext,getSession__(Class<T> sessionClass),"@SuppressWarnings(""unchecked"")
public <T> T getSession(Class<T> sessionClass) throws BaseAppException {
    Session session = sessions.get(sessionClass);
    if (session == null) {
        SessionFactory sessionFactory = sessionFactories.get(sessionClass);
        if (sessionFactory == null) {
            ExceptionHandler.publish(""CORE-000005"", null, sessionClass.getName());
        } else {
            session = sessionFactory.openSession();
            sessions.put(sessionClass, session);
        }
    }

    return (T) session;
}"
419,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContext.java,CommandContext,getDbSqlSession__(),"public DbSqlSession getDbSqlSession() throws BaseAppException {
    return getSession(DbSqlSession.class);
}"
420,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContext.java,CommandContext,getException__(),"public Throwable getException() {
    return exception;
}"
421,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContext.java,CommandContext,setException__(Throwable exception),"public void setException(Throwable exception) {
    this.exception = exception;
}"
422,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContext.java,CommandContext,getSystemEngineConfig__(),"public SystemEngineConfig getSystemEngineConfig() {
    return this.systemEngineConfig;
}"
423,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContext.java,CommandContext,getSessionFactories__(),"public Map<Class<?>, SessionFactory> getSessionFactories() {
    return sessionFactories;
}"
424,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/service/impl/PostTypeServiceImpl.java,PostTypeServiceImpl,getAllPostType__(),"@Override
public List<PostTypeDto> getAllPostType() {
    return this.execute(new GetAllPostTypeCmd());
}"
425,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/service/impl/PostTypeServiceImpl.java,PostTypeServiceImpl,addPostType__(PostTypeDto postTypeDto),"@Override
public PostTypeDto addPostType(PostTypeDto postTypeDto) {
    return this.execute(new AddPostTypeCmd(postTypeDto));
}"
426,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/service/impl/PostTypeServiceImpl.java,PostTypeServiceImpl,updatePostType__(PostTypeDto postTypeDto),"@Override
public PostTypeDto updatePostType(PostTypeDto postTypeDto) {
    return this.execute(new UpdatePostTypeCmd(postTypeDto));
}"
427,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/service/impl/PostTypeServiceImpl.java,PostTypeServiceImpl,deletePostType__(String type),"@Override
public int deletePostType(String type) {
    return this.execute(new DeletePostTypeCmd(type));
}"
428,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandExecutor.java,CommandExecutor,getDefaultConfig__(),CommandConfig getDefaultConfig();
429,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandExecutor.java,CommandExecutor,"execute__(CommandConfig config, Command<U> command)","<U> U execute(CommandConfig config, Command<U> command);"
430,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandExecutor.java,CommandExecutor,execute__(Command<U> command),<U> U execute(Command<U> command);
431,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/DbSqlSessionFactory.java,DbSqlSessionFactory,DbSqlSessionFactory__(SqlSessionFactory sqlSessionFactory),"public DbSqlSessionFactory(SqlSessionFactory sqlSessionFactory) {
    this.setSqlSessionFactory(sqlSessionFactory);

}"
432,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/DbSqlSessionFactory.java,DbSqlSessionFactory,getSqlSessionFactory__(),"public SqlSessionFactory getSqlSessionFactory() {
    return sqlSessionFactory;
}"
433,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/DbSqlSessionFactory.java,DbSqlSessionFactory,setSqlSessionFactory__(SqlSessionFactory sqlSessionFactory),"public void setSqlSessionFactory(SqlSessionFactory sqlSessionFactory) {
    this.sqlSessionFactory = sqlSessionFactory;
}"
434,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/DbSqlSessionFactory.java,DbSqlSessionFactory,getSessionType__(),"@Override
public Class<?> getSessionType() {
    return DbSqlSession.class;
}"
435,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/DbSqlSessionFactory.java,DbSqlSessionFactory,openSession__(),"@Override
public Session openSession() {
    return new DbSqlSession(this);
}"
436,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/GetSystemParamByKeyCmd.java,GetSystemParamByKeyCmd,GetSystemParamByKeyCmd__(String paramKey),"public GetSystemParamByKeyCmd(String paramKey) {
    super();
    this.paramKey = paramKey;
}"
437,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/GetSystemParamByKeyCmd.java,GetSystemParamByKeyCmd,execute__(),"@Override
public SystemParamDto execute() {
    SystemParamDtoMapper systemParamDtoMapper = this.getMapper(SystemParamDtoMapper.class);
    return systemParamDtoMapper.selectByParamKey(paramKey);
}"
438,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/dao/UserDtoMapper.java,UserDtoMapper,selectByCond__(GetUserList4PagerByCondRequest req),List<UserDto> selectByCond(GetUserList4PagerByCondRequest req);
439,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/i18n/TextProvider.java,TextProvider,getText__(String key),String getText(String key);
440,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/i18n/TextProvider.java,TextProvider,"getText__(String dialect, String key)","String getText(String dialect, String key);"
441,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/service/impl/PostServiceImpl.java,PostServiceImpl,getPostList4PagerByCond__(GetPostList4PagerByCondRequest req),"@Override
public List<PostDto> getPostList4PagerByCond(GetPostList4PagerByCondRequest req) {
    return this.execute(new GetPostList4PagerByCondCmd(req));
}"
442,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/service/impl/PostServiceImpl.java,PostServiceImpl,getPostById__(Long postId),"@Override
public PostDto getPostById(Long postId) {
    return this.execute(new GetPostByIdCmd(postId));
}"
443,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/service/impl/PostServiceImpl.java,PostServiceImpl,addPost__(PostDto postDto),"@Override
public PostDto addPost(PostDto postDto) {
    return this.execute(new AddPostCmd(postDto));
}"
444,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/service/impl/PostServiceImpl.java,PostServiceImpl,updatePost__(PostDto postDto),"@Override
public PostDto updatePost(PostDto postDto) {
    return this.execute(new UpdatePostCmd(postDto));
}"
445,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/service/impl/PostServiceImpl.java,PostServiceImpl,deletePostById__(Long postId),"@Override
public int deletePostById(Long postId) {
    return this.execute(new DeletePostByIdCmd(postId));
}"
446,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/test/java/com/littlefisher/core/kafka/KafkaConsumerTest.java,KafkaConsumerTest,testGetMessage__(),"@Test
public void testGetMessage() throws InterruptedException {
    while (true) {
        logger.debug(""currentTime: {}"", new Date());
        TimeUnit.SECONDS.sleep(2);
    }
}"
447,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/UpdatePostCmd.java,UpdatePostCmd,UpdatePostCmd__(PostDto postDto),"public UpdatePostCmd(PostDto postDto) {
    super();
    this.postDto = postDto;
}"
448,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/UpdatePostCmd.java,UpdatePostCmd,execute__(),"@Override
public PostDto execute() {
    PostDtoMapper postDtoMapper = this.getMapper(PostDtoMapper.class);
    postDtoMapper.updateByPrimaryKey(postDto);
    return postDto;
}"
449,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/dao/PostDtoMapper.java,PostDtoMapper,selectByCond__(GetPostList4PagerByCondRequest req),List<PostDto> selectByCond(GetPostList4PagerByCondRequest req);
450,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/DeleteSystemParamByKeyCmd.java,DeleteSystemParamByKeyCmd,DeleteSystemParamByKeyCmd__(String paramKey),"public DeleteSystemParamByKeyCmd(String paramKey) {
    super();
    this.paramKey = paramKey;
}"
451,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/DeleteSystemParamByKeyCmd.java,DeleteSystemParamByKeyCmd,execute__(),"@Override
public Integer execute() {
    SystemParamDtoMapper systemParamDtoMapper = this.getMapper(SystemParamDtoMapper.class);
    return systemParamDtoMapper.deleteByParamKey(paramKey);
}"
452,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,LittleFisherCommentGenerator__(),"public LittleFisherCommentGenerator() {
    super();
    properties = new Properties();
}"
453,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,getDelimiterName__(String name),"public String getDelimiterName(String name) {
    return beginningDelimiter + name + endingDelimiter;
}"
454,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,"addGeneralMethodComment__(Method method, IntrospectedTable introspectedTable)","@Override
public void addGeneralMethodComment(Method method, IntrospectedTable introspectedTable) {
    method.addJavaDocLine(""/**"");
    method.addJavaDocLine("" * Description: "" + method.getName() + ""<br>"");
    method.addJavaDocLine("" *"");
    method.addJavaDocLine("" * @author "" + author + "" <br>"");
    List<Parameter> paramList = method.getParameters();
    for (Parameter p : paramList) {
        method.addJavaDocLine("" * @param "" + p.getName() + "" "" + p.getName());
    }
    if (method.getReturnType() != null) {
        method.addJavaDocLine("" * @return "" + method.getReturnType().getShortName() + "" "" + method.getReturnType().getShortName() + ""<br>"");
    }
    addJavadocTag(method, false);
    method.addJavaDocLine("" */"");

}"
455,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,"addJavadocTag__(JavaElement javaElement, boolean markAsDoNotDelete)","protected void addJavadocTag(JavaElement javaElement, boolean markAsDoNotDelete) {
    StringBuilder sb = new StringBuilder();
    sb.append("" * "");
    sb.append(MergeConstants.NEW_ELEMENT_TAG);
    if (markAsDoNotDelete) {
        sb.append("" do_not_delete_during_merge"");
    }
    javaElement.addJavaDocLine(sb.toString());
}"
456,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,"addFieldComment__(Field field, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn)","@Override
public void addFieldComment(Field field, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn) {
    String jdbc = ""JDBC"";
    // 添加@ApiModelProperty注解，用于swaggerUI展示用
    field.addAnnotation(""@ApiModelProperty(value = \"""" + introspectedColumn.getRemarks() + ""\"")"");

    if (StringUtility.stringHasValue(introspectedColumn.getRemarks())) {
        field.addJavaDocLine(""/**"");
        String sb = "" * "" + introspectedColumn.getRemarks();
        field.addJavaDocLine(sb);
        field.addJavaDocLine("" */"");
    }

    // 对非数据库字段添加@Transient注解
    if (field.isTransient()) {
        field.addAnnotation(""@Transient"");
    }
    // 对主键字段增加@Id注解
    for (IntrospectedColumn column : introspectedTable.getPrimaryKeyColumns()) {
        if (introspectedColumn == column) {
            field.addAnnotation(""@Id"");
            break;
        }
    }
    // 对数据库字段增加@Column注解，该注解用于解决字段名和数据库字段名不同时的映射问题
    String column = introspectedColumn.getActualColumnName();
    if (StringUtility.stringContainsSpace(column) || introspectedTable.getTableConfiguration().isAllColumnDelimitingEnabled()) {
        column = introspectedColumn.getContext().getBeginningDelimiter() + column + introspectedColumn.getContext().getEndingDelimiter();
    }
    if (!column.equals(introspectedColumn.getJavaProperty())) {
        //@Column
        field.addAnnotation(""@Column(name = \"""" + getDelimiterName(column) + ""\"")"");
    } else if (StringUtility.stringHasValue(beginningDelimiter) || StringUtility.stringHasValue(endingDelimiter)) {
        field.addAnnotation(""@Column(name = \"""" + getDelimiterName(column) + ""\"")"");
    }
    // 自增字段根据不同的数据库，添加不同的@GeneratedValue注解
    if (introspectedColumn.isIdentity()) {
        if (jdbc.equals(introspectedTable.getTableConfiguration().getGeneratedKey().getRuntimeSqlStatement())) {
            field.addAnnotation(""@GeneratedValue(generator = \""JDBC\"")"");
        } else {
            field.addAnnotation(""@GeneratedValue(strategy = GenerationType.IDENTITY)"");
        }
    } else if (introspectedColumn.isSequenceColumn()) {
        // 在 Oracle 中，如果需要是 SEQ_TABLENAME，那么可以配置为 select SEQ_{1} from dual
        String tableName = introspectedTable.getFullyQualifiedTableNameAtRuntime();
        String sql = MessageFormat.format(introspectedTable.getTableConfiguration().
                getGeneratedKey().getRuntimeSqlStatement(), tableName, tableName.toUpperCase());
        field.addAnnotation(""@GeneratedValue(strategy = GenerationType.IDENTITY, generator = \"""" + sql + ""\"")"");
    }

}"
457,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,addConfigurationProperties__(Properties properties),"@Override
public void addConfigurationProperties(Properties properties) {
    this.properties.putAll(properties);

    String authorString = properties.getProperty(""author"");
    if (StringUtility.stringHasValue(authorString)) {
        author = authorString;
    }

    String beginningDelimiter = properties.getProperty(""beginningDelimiter"");
    if (StringUtility.stringHasValue(beginningDelimiter)) {
        this.beginningDelimiter = beginningDelimiter;
    }
    String endingDelimiter = properties.getProperty(""endingDelimiter"");
    if (StringUtility.stringHasValue(endingDelimiter)) {
        this.endingDelimiter = endingDelimiter;
    }
}"
458,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,"addFieldComment__(Field field, IntrospectedTable introspectedTable)","@Override
public void addFieldComment(Field field, IntrospectedTable introspectedTable) {
}"
459,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,"addClassComment__(InnerClass innerClass, IntrospectedTable introspectedTable)","@Override
public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable) {
}"
460,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,"addClassComment__(InnerClass innerClass, IntrospectedTable introspectedTable, boolean markAsDoNotDelete)","@Override
public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable, boolean markAsDoNotDelete) {
}"
461,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,"addEnumComment__(InnerEnum innerEnum, IntrospectedTable introspectedTable)","@Override
public void addEnumComment(InnerEnum innerEnum, IntrospectedTable introspectedTable) {
}"
462,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,"addGetterComment__(Method method, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn)","@Override
public void addGetterComment(Method method, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn) {
}"
463,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,"addSetterComment__(Method method, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn)","@Override
public void addSetterComment(Method method, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn) {
}"
464,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,addJavaFileComment__(CompilationUnit compilationUnit),"@Override
public void addJavaFileComment(CompilationUnit compilationUnit) {
}"
465,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,addComment__(XmlElement xmlElement),"@Override
public void addComment(XmlElement xmlElement) {

    xmlElement.addElement(new TextElement(""<!--""));

    xmlElement.addElement(new TextElement(MergeConstants.NEW_ELEMENT_TAG));

    xmlElement.addElement(new TextElement(""-->""));

    //        xmlElement.addElement(new TextElement(""<!--""));
    //        StringBuilder sb = new StringBuilder();
    //        sb.append(""  WARNING - "");
    //        sb.append(MergeConstants.NEW_ELEMENT_TAG);
    //        xmlElement.addElement(new TextElement(sb.toString()));
    //        xmlElement.addElement(new TextElement(""-->""));
}"
466,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,addRootComment__(XmlElement rootElement),"@Override
public void addRootComment(XmlElement rootElement) {
}"
467,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/LittleFisherCommentGenerator.java,LittleFisherCommentGenerator,"addModelClassComment__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public void addModelClassComment(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
}"
468,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryStateDto.java,CommentaryStateDto,getState__(),"public String getState() {
    return state;
}"
469,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryStateDto.java,CommentaryStateDto,setState__(String state),"public void setState(String state) {
    this.state = state;
}"
470,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryStateDto.java,CommentaryStateDto,getStateName__(),"public String getStateName() {
    return stateName;
}"
471,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryStateDto.java,CommentaryStateDto,setStateName__(String stateName),"public void setStateName(String stateName) {
    this.stateName = stateName;
}"
472,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryStateDto.java,CommentaryStateDto,getComments__(),"public String getComments() {
    return comments;
}"
473,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryStateDto.java,CommentaryStateDto,setComments__(String comments),"public void setComments(String comments) {
    this.comments = comments;
}"
474,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/model/CommentaryStateDto.java,CommentaryStateDto,toString__(),"@Override
public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(getClass().getSimpleName());
    sb.append("" ["");
    sb.append(""Hash = "").append(hashCode());
    sb.append("", state="").append(state);
    sb.append("", stateName="").append(stateName);
    sb.append("", comments="").append(comments);
    sb.append("", serialVersionUID="").append(serialVersionUID);
    sb.append(""]"");
    return sb.toString();
}"
475,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/consumer/AbstractConsumerMessageListener.java,AbstractConsumerMessageListener,"onMessage__(ConsumerRecord<String, String> data)","@Override
public void onMessage(ConsumerRecord<String, String> data) {
    logger.debug(""ConsumerRecord: {}"", data);
    executorService.execute(() -> {
        logger.info(""[{}]开始被消费，该消息偏移量为[{}]"", data.topic(), data.offset());
        doBusiness(new MessageRecord(data.topic(), data.key(), data.value()));
        logger.info(""[{}]消费结束，该消息偏移量为[{}]"", data.topic(), data.offset());
    });
}"
476,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/consumer/AbstractConsumerMessageListener.java,AbstractConsumerMessageListener,doBusiness__(MessageRecord messageRecord),protected abstract void doBusiness(MessageRecord messageRecord);
477,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/OvalInterceptor.java,OvalInterceptor,"execute__(CommandConfig config, Command<U> command)","@Override
public <U> U execute(CommandConfig config, Command<U> command) {
    validateFields(command);
    return next.execute(config, command);
}"
478,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/OvalInterceptor.java,OvalInterceptor,validateFields__(Command<U> command),"private <U> void validateFields(Command<U> command) {
    Class<?> clazz = command.getClass();
    Field[] fields = clazz.getDeclaredFields();
    if (fields.length == 0) {
        return;
    }
    List<ConstraintViolation> constraintViolationList = Lists.newArrayList();
    for (Field field : fields) {
        Object fieldObj = getFieldVariable(command, field);
        Validator validator = new Validator();
        constraintViolationList.addAll(validator.validate(fieldObj));
    }

    if (CollectionUtil.isNotEmpty(constraintViolationList)) {
        constraintViolationList.forEach(input -> {
            logger.error(
                    EnumOvalErrorCode.find(input.getErrorCode()).getDescription() + ""["" + input.getMessage() + ""]"");
        });
        ConstraintViolation firstConstraintViolation = Iterables.get(constraintViolationList, 0);
        ExceptionHandler.publish(firstConstraintViolation.getErrorCode(),
                EnumOvalErrorCode.find(firstConstraintViolation.getErrorCode()).getDescription() + ""[""
                + firstConstraintViolation.getMessage() + ""]"");
    }
}"
479,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/OvalInterceptor.java,OvalInterceptor,"getFieldVariable__(Command<U> command, Field field)","@SuppressWarnings(""Duplicates"")
private <U> Object getFieldVariable(Command<U> command, Field field) {
    try {
        field.setAccessible(true);
        return field.get(command);
    } catch (IllegalArgumentException | IllegalAccessException e) {
        logger.error(""inerror"", e);
        throw new BaseRuntimeException(""inerror"", e);
    }
}"
480,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/AbstractCommand.java,AbstractCommand,getCommandContext__(),"public CommandContext getCommandContext() {
    return commandContext;
}"
481,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/AbstractCommand.java,AbstractCommand,getMapper__(Class<T> typeClass),"protected <T> T getMapper(Class<T> typeClass) {
    return commandContext.getDbSqlSession().getMapper(typeClass);
}"
482,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/AbstractCommand.java,AbstractCommand,getService__(String serviceName),"protected ServiceImpl getService(String serviceName) {
    return commandContext.getSystemEngineConfig().getService(serviceName);
}"
483,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/AbstractCommand.java,AbstractCommand,getService__(Class<? extends ServiceImpl> clazzService),"protected <T> T getService(Class<? extends ServiceImpl> clazzService) {
    return commandContext.getSystemEngineConfig().getService(clazzService);
}"
484,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/AbstractCommand.java,AbstractCommand,execute__(CommandContext commandContext),"@Override
public U execute(CommandContext commandContext) {
    this.commandContext = commandContext;
    return execute();
}"
485,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/AbstractCommand.java,AbstractCommand,execute__(),public abstract U execute();
486,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/i18n/PropertiesFileTextProvider.java,PropertiesFileTextProvider,getText__(String key),"@Override
public String getText(String key) {
    return this.getText(I18nConstants.DIALECT_DEFAULT, key);
}"
487,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/i18n/PropertiesFileTextProvider.java,PropertiesFileTextProvider,"getText__(String dialect, String key)","@Override
public String getText(String dialect, String key) {
    return PropResource.getValue(dialect, key);
}"
488,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/GetAllPostStateCmd.java,GetAllPostStateCmd,execute__(),"@Override
public List<PostStateDto> execute() {
    PostStateDtoMapper postStateDtoMapper = this.getMapper(PostStateDtoMapper.class);
    return postStateDtoMapper.selectAll();
}"
489,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandConfig.java,CommandConfig,CommandConfig__(),"public CommandConfig() {
    this.contextReusePossible = true;
    this.propagation = TransactionPropagation.REQUIRED;
}"
490,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandConfig.java,CommandConfig,CommandConfig__(boolean contextReusePossible),"public CommandConfig(boolean contextReusePossible) {
    this.contextReusePossible = contextReusePossible;
    this.propagation = TransactionPropagation.REQUIRED;
}"
491,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandConfig.java,CommandConfig,CommandConfig__(CommandConfig commandConfig),"protected CommandConfig(CommandConfig commandConfig) {
    this.contextReusePossible = commandConfig.contextReusePossible;
    this.propagation = commandConfig.propagation;
}"
492,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandConfig.java,CommandConfig,setContextReusePossible__(boolean contextReusePossible),"public CommandConfig setContextReusePossible(boolean contextReusePossible) {
    CommandConfig config = new CommandConfig(this);
    config.contextReusePossible = contextReusePossible;
    return config;
}"
493,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandConfig.java,CommandConfig,transactionRequired__(),"public CommandConfig transactionRequired() {
    CommandConfig config = new CommandConfig(this);
    config.propagation = TransactionPropagation.REQUIRED;
    return config;
}"
494,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandConfig.java,CommandConfig,transactionRequiresNew__(),"public static CommandConfig transactionRequiresNew() {
    CommandConfig config = new CommandConfig();
    config.contextReusePossible = false;
    config.propagation = TransactionPropagation.REQUIRES_NEW;
    return config;
}"
495,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandConfig.java,CommandConfig,transactionNotSupported__(),"public static CommandConfig transactionNotSupported() {
    CommandConfig config = new CommandConfig();
    config.contextReusePossible = false;
    config.propagation = TransactionPropagation.NOT_SUPPORTED;
    return config;
}"
496,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandConfig.java,CommandConfig,isContextReusePossible__(),"public boolean isContextReusePossible() {
    return contextReusePossible;
}"
497,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandConfig.java,CommandConfig,getTransactionPropagation__(),"public TransactionPropagation getTransactionPropagation() {
    return propagation;
}"
498,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/system/controller/SystemParamController.java,SystemParamController,"getSystemParamList4PagerByCond__(
            @ApiParam(value = ""查询系统参数列表条件"") @ModelAttribute GetSystemParamList4PagerByCondRequest req)","@RequestMapping(value = ""/pager"", method = RequestMethod.GET)
@ApiOperation(value = ""根据条件查询分页列表"")
public PageInfo<SystemParamDto> getSystemParamList4PagerByCond(
        @ApiParam(value = ""查询系统参数列表条件"") @ModelAttribute GetSystemParamList4PagerByCondRequest req) {
    List<SystemParamDto> systemParamList = systemParamService
            .getSystemParamList4PagerByCond(req);
    return new PageInfo<>(systemParamList);
}"
499,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/system/controller/SystemParamController.java,SystemParamController,"getSystemParamByKey__(
            @ApiParam(required = true, value = ""系统参数key值"") @PathVariable(""paramKey"") String paramKey)","@RequestMapping(value = ""/{paramKey}"", method = RequestMethod.GET)
@ApiOperation(value = ""根据key查询系统参数"")
public SystemParamDto getSystemParamByKey(
        @ApiParam(required = true, value = ""系统参数key值"") @PathVariable(""paramKey"") String paramKey) {
    return systemParamService.getSystemParamByKey(paramKey);
}"
500,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/system/controller/SystemParamController.java,SystemParamController,"getSystemParamById__(
            @ApiParam(required = true, value = ""系统参数主键"") @PathVariable(""systemParamId"") Long systemParamId)","@RequestMapping(value = ""/{systemParamId}"", method = RequestMethod.GET)
@ApiOperation(value = ""根据主键查询系统信息"")
public SystemParamDto getSystemParamById(
        @ApiParam(required = true, value = ""系统参数主键"") @PathVariable(""systemParamId"") Long systemParamId) {
    return systemParamService.getSystemParamById(systemParamId);
}"
501,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/system/controller/SystemParamController.java,SystemParamController,"addSystemParam__(
            @ApiParam(required = true, value = ""系统参数信息"") @RequestBody SystemParamDto systemParamDto)","@RequestMapping(method = RequestMethod.POST)
@ApiParam(value = ""新增系统参数"")
public SystemParamDto addSystemParam(
        @ApiParam(required = true, value = ""系统参数信息"") @RequestBody SystemParamDto systemParamDto) {
    return systemParamService.addSystemParam(systemParamDto);
}"
502,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/system/controller/SystemParamController.java,SystemParamController,"deleteSystemParamByKey__(
            @ApiParam(required = true, value = ""系统参数key值"") @PathVariable(""paramKey"") String paramKey)","@RequestMapping(value = ""/{paramKey}"", method = RequestMethod.DELETE)
@ApiOperation(value = ""删除系统参数"")
public int deleteSystemParamByKey(
        @ApiParam(required = true, value = ""系统参数key值"") @PathVariable(""paramKey"") String paramKey) {
    return systemParamService.deleteSystemParamByKey(paramKey);
}"
503,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/system/controller/SystemParamController.java,SystemParamController,"deleteSystemParamById__(
            @ApiParam(required = true, value = ""系统参数主键"") @PathVariable(""systemParamId"") Long systemParamId)","@RequestMapping(value = ""/{systemParamId}"", method = RequestMethod.DELETE)
@ApiOperation(value = ""根据主键删除系统参数"")
public int deleteSystemParamById(
        @ApiParam(required = true, value = ""系统参数主键"") @PathVariable(""systemParamId"") Long systemParamId) {
    return systemParamService.deleteSystemParamById(systemParamId);
}"
504,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/system/controller/SystemParamController.java,SystemParamController,"updateSystemParam__(
            @ApiParam(required = true, value = ""系统参数信息"") @RequestBody SystemParamDto systemParamDto)","@RequestMapping(method = RequestMethod.PATCH)
@ApiOperation(value = ""修改系统参数"")
public SystemParamDto updateSystemParam(
        @ApiParam(required = true, value = ""系统参数信息"") @RequestBody SystemParamDto systemParamDto) {
    return systemParamService.updateSystemParam(systemParamDto);
}"
505,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,getDateFormat__(String format),"public static SimpleDateFormat getDateFormat(String format) {
    return new SimpleDateFormat(format);
}"
506,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"date2String__(Date date, String format)","public static String date2String(Date date, String format) {
    if (date == null) {
        return StringUtil.EMPTY;
    }
    SimpleDateFormat sdf = getDateFormat(format);
    return sdf.format(date);
}"
507,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,date2String__(Date date),"public static String date2String(Date date) {
    return date2String(date, DEFAULT_DATE_FORMAT);
}"
508,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,getCurrentDate__(),"public static String getCurrentDate() {
    Date date = new Date();
    return date2String(date, DEFAULT_DATE_FORMAT);
}"
509,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,getNameFileCurrentDate__(),"public static String getNameFileCurrentDate() {
    Date date = new Date();
    return date2String(date, NAME_FILE_DATE_FORMAT);
}"
510,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,dateToSqlDate__(java.util.Date date),"public static java.sql.Date dateToSqlDate(java.util.Date date) {
    if (date == null) {
        return null;
    }
    else if (date instanceof java.sql.Date) {
        return (java.sql.Date) date;
    }
    else {
        return new java.sql.Date(date.getTime());
    }
}"
511,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,sqlDate2Date__(java.sql.Date date),"public static java.util.Date sqlDate2Date(java.sql.Date date) {
    return new java.util.Date(date.getTime());
}"
512,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,string2SQLDate__(String date),"public static java.sql.Date string2SQLDate(String date) {
    java.sql.Date ret;
    if (StringUtil.isEmpty(date)) {
        return null;
    }
    if (date.length() > DATE_TIME_LENGTH_11) {
        if (date.indexOf(EnumSymbol.MINUS.getCode()) > 0) {
            if (date.indexOf(EnumSymbol.COLON.getCode()) > 0) {
                ret = string2SQLDate(date, DATETIME_FORMAT_1);
            }
            else {
                ret = string2SQLDate(date, DATETIME_FORMAT_3);
            }
        }
        else if (date.indexOf(EnumSymbol.BACKSLASH.getCode()) > 0) {
            ret = string2SQLDate(date, DATETIME_FORMAT_4);
        }
        else {
            ret = string2SQLDate(date, DATETIME_FORMAT_2);
        }
    }
    else {
        if (date.indexOf(EnumSymbol.MINUS.getCode()) > 0) {
            ret = string2SQLDate(date, DATE_FORMAT_1);
        }
        else if (date.length() == DATE_LENGTH_8) {
            ret = string2SQLDate(date, DATE_FORMAT_2);
        }
        else {
            ret = string2SQLDate(date, DATE_FORMAT_3);
        }
    }
    return ret;
}"
513,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"string2SQLDate__(String date, String format)","public static java.sql.Date string2SQLDate(String date, String format) {
    boolean isSucc = true;
    Exception operateException = null;
    if (StringUtil.isEmpty(format)) {
        isSucc = false;
        operateException = new IllegalArgumentException(""the date format string is null!"");
    }
    SimpleDateFormat sdf = getDateFormat(format);
      if (sdf == null) {
          isSucc = false;
          operateException = new IllegalArgumentException(
              ""the date format string is not matching available format object"");
      }
    java.util.Date tmpDate = null;
    try {
        if (isSucc) {
            tmpDate = sdf.parse(date);
            String tmpDateStr = sdf.format(tmpDate);
            if (!tmpDateStr.equals(date)) {
                isSucc = false;
                operateException = new IllegalArgumentException(
                    ""the date string "" + date + "" is not matching format: "" + format);
            }
        }
    }
    catch (Exception e) {
        isSucc = false;
        operateException = e;
    }
    if (!isSucc) {
        logger.error(""the date string "" + date + "" is not matching format: "" + format, operateException);
        if (operateException instanceof IllegalArgumentException) {
            throw (IllegalArgumentException) operateException;
        }
        else {
            throw new IllegalArgumentException(""the date string "" + date + "" is not matching format: "" + format
                + "".\n cause by :"" + operateException.toString());
        }
    }
    else {
        return new java.sql.Date(tmpDate.getTime());
    }
}"
514,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,string2Date__(String date),"public static Date string2Date(String date) {
    Date ret;
    if (StringUtil.isEmpty(date)) {
        return null;
    }
    if (date.length() > DATE_TIME_LENGTH_11) {
        if (date.indexOf(EnumSymbol.MINUS.getCode()) > 0) {
            if (date.indexOf(EnumSymbol.COLON.getCode()) > 0) {
                ret = string2Date(date, DATETIME_FORMAT_1);
            }
            else {
                ret = string2Date(date, DATETIME_FORMAT_3);
            }
        }
        else if (date.indexOf(EnumSymbol.BACKSLASH.getCode()) > 0) {
            ret = string2Date(date, DATETIME_FORMAT_4);
        }
        else {
            ret = string2Date(date, DATETIME_FORMAT_2);
        }
    }
    else {
        if (date.indexOf(EnumSymbol.MINUS.getCode()) > 0) {
            ret = string2Date(date, DATE_FORMAT_1);
        }
        else if (date.length() == DATE_LENGTH_8) {
            ret = string2Date(date, DATE_FORMAT_2);
        }
        else {
            ret = string2Date(date, DATE_FORMAT_3);
        }
    }
    return ret;
}"
515,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"string2Date__(String date, String format)","public static Date string2Date(String date, String format) {
    if (StringUtil.isEmpty(format)) {
        throw new IllegalArgumentException(""the date format string is null!"");
    }
    SimpleDateFormat sdf = getDateFormat(format);
      if (sdf == null) {
          throw new IllegalArgumentException(""the date format string is not matching available format object"");
      }
    try {
        return sdf.parse(date);
    }
    catch (ParseException e) {
        throw new IllegalArgumentException(""the date string "" + date + "" is not matching format: "" + format, e);
    }
}"
516,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,getStandardNowTime__(),"public static String getStandardNowTime() {
    SimpleDateFormat sdf = getDateFormat(DEFAULT_TIME_FORMAT);
    return sdf.format(new java.util.Date());
}"
517,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,getNowDate__(),"public static java.sql.Date getNowDate() {
    return new java.sql.Date(new java.util.Date().getTime());
}"
518,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"offsetSecond__(java.sql.Date date, long seconds)","public static java.sql.Date offsetSecond(java.sql.Date date, long seconds) {
    if (date == null) {
        return null;
    }
    long time = date.getTime();
    long time2 = time + (seconds * 1000);
    long time3 = time + (seconds * 1000) - 60 * 60 * 1000;
    java.sql.Date date2 = new java.sql.Date(time2);
    java.sql.Date date3 = new java.sql.Date(time3);

    Calendar calendarDate = Calendar.getInstance();
    calendarDate.setTime(date);
    Calendar calendarDate2 = Calendar.getInstance();
    calendarDate2.setTime(date2);
    Calendar calendarDate3 = Calendar.getInstance();
    calendarDate3.setTime(date3);

    long dstDate = calendarDate.get(Calendar.DST_OFFSET);
    long dstDate2 = calendarDate2.get(Calendar.DST_OFFSET);
    long dstDate3 = calendarDate3.get(Calendar.DST_OFFSET);

    long dstOffset = dstDate - dstDate2;
    // 前后两个日期偏移相同（含不偏移）或者夏令日开始的那个小时不用补偿，否则要补偿偏移量。
    boolean isNeedReset = dstOffset == 0 || (dstDate2 - dstDate3 != 0 && dstDate2 != 0);
    if (!isNeedReset) {
        return date2;
    }
    else {
        return new java.sql.Date(time2 + dstOffset);
    }
}"
519,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"offsetMinute__(java.sql.Date date, long minutes)","public static java.sql.Date offsetMinute(java.sql.Date date, long minutes) {
    return offsetSecond(date, 60 * minutes);
}"
520,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"offsetHour__(java.sql.Date date, long hours)","public static java.sql.Date offsetHour(java.sql.Date date, long hours) {
    return offsetMinute(date, 60 * hours);
}"
521,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"offsetDay__(java.sql.Date date, int days)","public static java.sql.Date offsetDay(java.sql.Date date, int days) {
    return offsetHour(date, 24 * days);
}"
522,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"offsetWeek__(java.sql.Date date, int weeks)","public static java.sql.Date offsetWeek(java.sql.Date date, int weeks) {
    return offsetDay(date, 7 * weeks);
}"
523,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"offsetMonth__(java.sql.Date date, int months)","public static java.sql.Date offsetMonth(java.sql.Date date, int months) {
    if (date == null) {
        return null;
    }
    java.sql.Date tempDate = new java.sql.Date(date.getTime());
    Calendar calendar = Calendar.getInstance();
    calendar.setTime(tempDate);
    int curDay = calendar.get(Calendar.DAY_OF_MONTH);
    int maxDay = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
    calendar.set(Calendar.DAY_OF_MONTH, 1);
    calendar.add(Calendar.MONTH, months);
    int newMaxDay = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
    if (curDay == maxDay) {
        calendar.set(Calendar.DAY_OF_MONTH, newMaxDay);
    }
    else {
        if (curDay > newMaxDay) {
            calendar.set(Calendar.DAY_OF_MONTH, newMaxDay);
        }
        else {
            calendar.set(Calendar.DAY_OF_MONTH, curDay);
        }
    }
    tempDate.setTime(calendar.getTimeInMillis());
    return tempDate;
}"
524,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"offsetYear__(java.sql.Date date, int years)","public static java.sql.Date offsetYear(java.sql.Date date, int years) {
    if (date == null) {
        return null;
    }
    java.sql.Date newdate = (java.sql.Date) date.clone();
    Calendar calendar = Calendar.getInstance();
    calendar.setTime(newdate);
    calendar.add(Calendar.YEAR, years);
    newdate.setTime(calendar.getTimeInMillis());
    return newdate;
}"
525,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,getLastDayOfMonth__(java.sql.Date date),"public static java.sql.Date getLastDayOfMonth(java.sql.Date date) {
    Calendar calendar = Calendar.getInstance();
    calendar.setTime(date);
    int maxDay = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
    calendar.set(Calendar.DAY_OF_MONTH, maxDay);
    calendar.set(Calendar.HOUR_OF_DAY, 23);
    calendar.set(Calendar.MINUTE, 59);
    calendar.set(Calendar.SECOND, 59);
    date.setTime(calendar.getTimeInMillis());
    return date;
}"
526,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,getBeginDayOfMonth__(java.sql.Date date),"public static java.sql.Date getBeginDayOfMonth(java.sql.Date date) {
    Calendar calendar = Calendar.getInstance();
    calendar.setTime(date);
    calendar.set(Calendar.DAY_OF_MONTH, 1);
    calendar.set(Calendar.HOUR_OF_DAY, 0);
    calendar.set(Calendar.MINUTE, 0);
    calendar.set(Calendar.SECOND, 0);

    return new java.sql.Date(calendar.getTimeInMillis());
}"
527,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"differDateInDays__(java.sql.Date beginDate, java.sql.Date endDate, int returnType)","public static long differDateInDays(java.sql.Date beginDate, java.sql.Date endDate, int returnType) {
    long begin = beginDate.getTime();
    long end = endDate.getTime();
    long surplus = begin - end;

    Calendar calendarBeginDate = Calendar.getInstance();
    calendarBeginDate.setTime(beginDate);

    Calendar calendarEndDate = Calendar.getInstance();
    calendarEndDate.setTime(endDate);
    long dstOffset = calendarBeginDate.get(Calendar.DST_OFFSET) - calendarEndDate.get(Calendar.DST_OFFSET);
    surplus += dstOffset;

    long ret = 0;
    switch (returnType) {
        case 0:
            // 秒
            ret = surplus / 1000;
            break;
        case 1:
            // 分
            ret = surplus / 1000 / 60;
            break;
        case 2:
            // 时
            ret = surplus / 1000 / 60 / 60;
            break;
        case 3:
            // 天
            ret = surplus / 1000 / 60 / 60 / 24;
            break;
        default:
            break;
    }
    return ret;
}"
528,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"isInRange__(String date, String beginDate, String endDate)","public static boolean isInRange(String date, String beginDate, String endDate) {
    if (StringUtil.isEmpty(date) || StringUtil.isEmpty(beginDate) || StringUtil.isEmpty(endDate)) {
        // TODO: 定义异常码
        ExceptionHandler.publish("""");
    }
    int dateLen = date.length();
    int beginDateLen = beginDate.length();
    int endDateLen = endDate.length();
    if (!Objects.equal(beginDateLen, dateLen) || !Objects.equal(dateLen, endDateLen)) {
        ExceptionHandler.publish(""CORE-000001"",date, beginDate, endDate);
    }
    boolean asc = isAsc(beginDate, endDate);
    if (asc) {
        if (date.compareTo(beginDate) >= 0 && date.compareTo(endDate) <= 0) {
            return true;
        }
    }
    else {
        if (date.compareTo(beginDate) >= 0 || date.compareTo(endDate) <= 0) {
            return true;
        }
    }
    return false;
}"
529,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"isInRange__(Date date, Date beginDate, Date endDate)","public static boolean isInRange(Date date, Date beginDate, Date endDate) {
    long time = date.getTime();
    long beginTime = beginDate.getTime();
    long endTime = endDate.getTime();
    return time >= beginTime && time <= endTime;
}"
530,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"compare__(Date beginDate, Date endDate)","public static int compare(Date beginDate, Date endDate) {
    int ret = 1;
    long beginTime = beginDate.getTime();
    long endTime = endDate.getTime();
    if (beginTime > endTime) {
        ret = 2;
    }
    if (beginTime == endTime) {
        ret = 1;
    }
    if (beginTime < endTime) {
        ret = 0;
    }
    return ret;
}"
531,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"isAsc__(String beginDateStr, String endDateStr)","private static boolean isAsc(String beginDateStr, String endDateStr) {
    return (beginDateStr.compareTo(endDateStr) < 0);
}"
532,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,getSqlDBDateTime__(),"public static java.sql.Date getSqlDBDateTime() throws BaseAppException {
    java.sql.Date retDate;
    long begin = System.currentTimeMillis();
    // 定为20分钟
    long offsetTimeMillis = 1000L * 60 * 20;
    if (latestQueryTimeMillis == 0 || (begin - latestQueryTimeMillis > offsetTimeMillis)) {
        // 是首次查询，或者是查询超过了指定的间隔时间 <br>
        retDate = new java.sql.Date(getDBCurrentTime().getTime());
        long end = System.currentTimeMillis();
        long againQueryTimeMillis = 50;
        if (end - begin <= againQueryTimeMillis) {
            // 查询小于50毫秒 <br>
            intervalsOfDBandSysdate = (begin / 1000 * 1000) - retDate.getTime();
            latestQueryTimeMillis = begin;
        }
        else {
            // 初始化为首次查询 <br>
            latestQueryTimeMillis = 0;
        }
    }
    else {
        // 两次查询在许可的时间间隔之内，不需要重新从数据库查询 <br>
        retDate = new java.sql.Date((begin / 1000 * 1000) - intervalsOfDBandSysdate);
    }
    return retDate;
}"
533,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,getDBDateTime__(),"public static java.util.Date getDBDateTime() {
    return sqlDate2Date(getSqlDBDateTime());
}"
534,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,getDBCurrentTime__(),"private static Date getDBCurrentTime() {
    SystemEngine systemEngine = SpringContextUtil.getBean(SystemEngine.class);
    DbServiceImpl dbServiceImpl = (DbServiceImpl) systemEngine.getService(""core.dbService"");
    return dbServiceImpl.getDBDateTime();
}"
535,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"dateOffsetCalc__(int offset, String dateTimeStr, int intout)","public static Date dateOffsetCalc(int offset, String dateTimeStr, int intout) {
    Date ret = string2Date(dateTimeStr);
    boolean hasTimeStr = dateTimeStr.length() > 11;
    if (ret != null) {
        Calendar cal = Calendar.getInstance();
        cal.setTime(ret);
        // 表示是输入，加上偏移量
        if (intout == 0) {
            if (hasTimeStr) {
                cal.add(Calendar.SECOND, offset);
            }
            else {
                cal.add(Calendar.DATE, offset);
            }
        }
        else {
            if (hasTimeStr) {
                cal.add(Calendar.SECOND, (-1 * offset));
            }
            else {
                cal.add(Calendar.DATE, (-1 * offset));
            }
        }
        ret = cal.getTime();
    }
    return ret;
}"
536,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/DateUtil.java,DateUtil,"sqlDateOffsetCalc__(int offset, String dateTimeStr, int intout)","public static java.sql.Date sqlDateOffsetCalc(int offset, String dateTimeStr, int intout) {
    Date ret = dateOffsetCalc(offset, dateTimeStr, intout);
    if (ret != null) {
        return new java.sql.Date(ret.getTime());
    }
    return null;
}"
537,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/ExceptionHandlerModel.java,ExceptionHandlerModel,"ExceptionHandlerModel__(String errorCode, String errorMsg)","public ExceptionHandlerModel(String errorCode, String errorMsg) {
    super();
    this.errorCode = errorCode;
    this.errorMsg = errorMsg;
}"
538,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/ExceptionHandlerModel.java,ExceptionHandlerModel,getErrorCode__(),"public String getErrorCode() {
    return errorCode;
}"
539,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/ExceptionHandlerModel.java,ExceptionHandlerModel,setErrorCode__(String errorCode),"public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
}"
540,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/ExceptionHandlerModel.java,ExceptionHandlerModel,getErrorMsg__(),"public String getErrorMsg() {
    return errorMsg;
}"
541,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/ExceptionHandlerModel.java,ExceptionHandlerModel,setErrorMsg__(String errorMsg),"public void setErrorMsg(String errorMsg) {
    this.errorMsg = errorMsg;
}"
542,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/ExceptionHandlerModel.java,ExceptionHandlerModel,toString__(),"@Override
public String toString() {
    return ""ExceptionHandlerModel [errorCode="" + errorCode + "", errorMsg="" + errorMsg + ""]"";
}"
543,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RolePermissionDto.java,RolePermissionDto,getId__(),"public Long getId() {
    return id;
}"
544,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RolePermissionDto.java,RolePermissionDto,setId__(Long id),"public void setId(Long id) {
    this.id = id;
}"
545,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RolePermissionDto.java,RolePermissionDto,getPermissionId__(),"public Long getPermissionId() {
    return permissionId;
}"
546,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RolePermissionDto.java,RolePermissionDto,setPermissionId__(Long permissionId),"public void setPermissionId(Long permissionId) {
    this.permissionId = permissionId;
}"
547,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RolePermissionDto.java,RolePermissionDto,getRoleId__(),"public Long getRoleId() {
    return roleId;
}"
548,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RolePermissionDto.java,RolePermissionDto,setRoleId__(Long roleId),"public void setRoleId(Long roleId) {
    this.roleId = roleId;
}"
549,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RolePermissionDto.java,RolePermissionDto,toString__(),"@Override
public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(getClass().getSimpleName());
    sb.append("" ["");
    sb.append(""Hash = "").append(hashCode());
    sb.append("", id="").append(id);
    sb.append("", permissionId="").append(permissionId);
    sb.append("", roleId="").append(roleId);
    sb.append("", serialVersionUID="").append(serialVersionUID);
    sb.append(""]"");
    return sb.toString();
}"
550,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/Command.java,Command,execute__(CommandContext commandContext),U execute(CommandContext commandContext);
551,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/SpringContextUtil.java,SpringContextUtil,SpringContextUtil__(),"private SpringContextUtil() {

}"
552,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/SpringContextUtil.java,SpringContextUtil,initFromFile__(String... filePaths),"public static void initFromFile(String... filePaths) {
    try {
        new FileSystemXmlApplicationContext(filePaths);
    } catch (BeansException e) {
        ExceptionHandler.publish(""CORE-000002"", null, e);
    }
}"
553,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/SpringContextUtil.java,SpringContextUtil,initFromClasspath__(String... classpaths),"public static void initFromClasspath(String... classpaths) {
    try {
        new ClassPathXmlApplicationContext(classpaths);
    } catch (BeansException e) {
        ExceptionHandler.publish(""CORE-000002"", null, e);
    }
}"
554,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/SpringContextUtil.java,SpringContextUtil,getBean__(Class<T> beanClass),"public static <T> T getBean(Class<T> beanClass) {
    return context.getBean(beanClass);
}"
555,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/SpringContextUtil.java,SpringContextUtil,getBeanClass__(String beanName),"public static Class<?> getBeanClass(String beanName) {
    return context.getType(beanName);
}"
556,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/SpringContextUtil.java,SpringContextUtil,getBeanNamesForType__(Class<?> type),"public static String[] getBeanNamesForType(Class<?> type) {
    return context.getBeanNamesForType(type);
}"
557,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/SpringContextUtil.java,SpringContextUtil,"getBeanNamesForType__(Class<?> type, boolean includeNonSingletons, boolean allowEagerInit)","public static String[] getBeanNamesForType(Class<?> type, boolean includeNonSingletons, boolean allowEagerInit) {
    return context.getBeanNamesForType(type, includeNonSingletons, allowEagerInit);
}"
558,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/SpringContextUtil.java,SpringContextUtil,getBeansOfType__(Class<T> type),"public static <T> Map<String, T> getBeansOfType(Class<T> type) {
    return context.getBeansOfType(type);
}"
559,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/SpringContextUtil.java,SpringContextUtil,"getBeansOfType__(Class<T> type, boolean includeNonSingletons, boolean allowEagerInit)","public static <T> Map<String, T> getBeansOfType(Class<T> type, boolean includeNonSingletons, boolean allowEagerInit) {
    return context.getBeansOfType(type, includeNonSingletons, allowEagerInit);
}"
560,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/SpringContextUtil.java,SpringContextUtil,setApplicationContext__(ApplicationContext applicationContext),"@Override
public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
    context = applicationContext;
}"
561,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/ApplicationControllerExceptionHandler.java,ApplicationControllerExceptionHandler,handlerError__(BaseAppException ex),"@ExceptionHandler(value = BaseAppException.class)
@ResponseStatus(value = HttpStatus.BAD_REQUEST)
@ResponseBody
public ExceptionHandlerModel handlerError(BaseAppException ex) {
    logger.error(ex.getMessage(), ex);
    return new ExceptionHandlerModel(ex.getCode(), ex.getLocalMessage());
}"
562,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/ApplicationControllerExceptionHandler.java,ApplicationControllerExceptionHandler,handlerError__(BaseRuntimeException ex),"@ExceptionHandler(value = BaseRuntimeException.class)
@ResponseStatus(value = HttpStatus.INTERNAL_SERVER_ERROR)
@ResponseBody
public ExceptionHandlerModel handlerError(BaseRuntimeException ex) {
    logger.error(ex.getMessage(), ex);
    
    return new ExceptionHandlerModel(null, ex.getMessage());
}"
563,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/ApplicationControllerExceptionHandler.java,ApplicationControllerExceptionHandler,handlerError__(Exception ex),"@ExceptionHandler(value = Exception.class)
@ResponseStatus(value = HttpStatus.INTERNAL_SERVER_ERROR)
@ResponseBody
public ExceptionHandlerModel handlerError(Exception ex) {
    logger.error(ex.getMessage(), ex);
    return new ExceptionHandlerModel(null, ex.getMessage());
}"
564,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/UpdateUserStateCmd.java,UpdateUserStateCmd,UpdateUserStateCmd__(UserStateDto userStateDto),"public UpdateUserStateCmd(UserStateDto userStateDto) {
    super();
    this.userStateDto = userStateDto;
}"
565,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/UpdateUserStateCmd.java,UpdateUserStateCmd,execute__(),"@Override
public UserStateDto execute() {
    UserStateDtoMapper userStateDtoMapper = this.getMapper(UserStateDtoMapper.class);
    userStateDtoMapper.updateByPrimaryKey(userStateDto);
    return userStateDto;
}"
566,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/DeleteSystemParamByIdCmd.java,DeleteSystemParamByIdCmd,DeleteSystemParamByIdCmd__(Long systemParamId),"public DeleteSystemParamByIdCmd(Long systemParamId) {
    super();
    this.systemParamId = systemParamId;
}"
567,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/DeleteSystemParamByIdCmd.java,DeleteSystemParamByIdCmd,execute__(),"@Override
public Integer execute() {
    SystemParamDtoMapper systemParamDtoMapper = this.getMapper(SystemParamDtoMapper.class);
    return systemParamDtoMapper.deleteByPrimaryKey(systemParamId);
}"
568,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/PermissionDto.java,PermissionDto,getId__(),"public Long getId() {
    return id;
}"
569,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/PermissionDto.java,PermissionDto,setId__(Long id),"public void setId(Long id) {
    this.id = id;
}"
570,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/PermissionDto.java,PermissionDto,getCode__(),"public String getCode() {
    return code;
}"
571,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/PermissionDto.java,PermissionDto,setCode__(String code),"public void setCode(String code) {
    this.code = code;
}"
572,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/PermissionDto.java,PermissionDto,getPermissionDesc__(),"public String getPermissionDesc() {
    return permissionDesc;
}"
573,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/PermissionDto.java,PermissionDto,setPermissionDesc__(String permissionDesc),"public void setPermissionDesc(String permissionDesc) {
    this.permissionDesc = permissionDesc;
}"
574,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/PermissionDto.java,PermissionDto,toString__(),"@Override
public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(getClass().getSimpleName());
    sb.append("" ["");
    sb.append(""Hash = "").append(hashCode());
    sb.append("", id="").append(id);
    sb.append("", code="").append(code);
    sb.append("", permissionDesc="").append(permissionDesc);
    sb.append("", serialVersionUID="").append(serialVersionUID);
    sb.append(""]"");
    return sb.toString();
}"
575,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/model/ActivitiStepDto.java,ActivitiStepDto,toString__(),"@Override
public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(""ActivitiStepDto [orderState="");
    builder.append(orderState);
    builder.append("", taskName="");
    builder.append(taskName);
    builder.append("", taskType="");
    builder.append(taskType);
    builder.append("", orderNbr="");
    builder.append(orderNbr);
    builder.append(""]"");
    return builder.toString();
}"
576,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/model/ActivitiStepDto.java,ActivitiStepDto,getOrderState__(),"public String getOrderState() {
    return orderState;
}"
577,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/model/ActivitiStepDto.java,ActivitiStepDto,setOrderState__(String orderState),"public void setOrderState(String orderState) {
    this.orderState = orderState;
}"
578,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/model/ActivitiStepDto.java,ActivitiStepDto,getTaskName__(),"public String getTaskName() {
    return taskName;
}"
579,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/model/ActivitiStepDto.java,ActivitiStepDto,setTaskName__(String taskName),"public void setTaskName(String taskName) {
    this.taskName = taskName;
}"
580,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/model/ActivitiStepDto.java,ActivitiStepDto,getTaskType__(),"public String getTaskType() {
    return taskType;
}"
581,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/model/ActivitiStepDto.java,ActivitiStepDto,setTaskType__(String taskType),"public void setTaskType(String taskType) {
    this.taskType = taskType;
}"
582,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/model/ActivitiStepDto.java,ActivitiStepDto,getOrderNbr__(),"public Long getOrderNbr() {
    return orderNbr;
}"
583,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/model/ActivitiStepDto.java,ActivitiStepDto,setOrderNbr__(Long orderNbr),"public void setOrderNbr(Long orderNbr) {
    this.orderNbr = orderNbr;
}"
584,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/model/ActivitiStepDto.java,ActivitiStepDto,compareTo__(ActivitiStepDto o),"@Override
public int compareTo(ActivitiStepDto o) {
    return (int) (this.orderNbr - o.orderNbr);
}"
585,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/service/IUserStateService.java,IUserStateService,getAllUserState__(),List<UserStateDto> getAllUserState() throws BaseAppException;
586,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/service/IUserStateService.java,IUserStateService,addUserState__(UserStateDto userStateDto),UserStateDto addUserState(UserStateDto userStateDto) throws BaseAppException;
587,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/service/IUserStateService.java,IUserStateService,updateUserState__(UserStateDto userStateDto),UserStateDto updateUserState(UserStateDto userStateDto) throws BaseAppException;
588,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/service/IUserStateService.java,IUserStateService,deleteUserState__(String state),int deleteUserState(String state) throws BaseAppException;
589,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/AddPostTypeCmd.java,AddPostTypeCmd,AddPostTypeCmd__(PostTypeDto postTypeDto),"public AddPostTypeCmd(PostTypeDto postTypeDto) {
    super();
    this.postTypeDto = postTypeDto;
}"
590,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/AddPostTypeCmd.java,AddPostTypeCmd,execute__(),"@Override
public PostTypeDto execute() {
    PostTypeDtoMapper postTypeDtoMapper = this.getMapper(PostTypeDtoMapper.class);
    postTypeDtoMapper.insert(postTypeDto);
    return postTypeDto;
}"
591,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostStateDto.java,PostStateDto,getState__(),"public String getState() {
    return state;
}"
592,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostStateDto.java,PostStateDto,setState__(String state),"public void setState(String state) {
    this.state = state;
}"
593,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostStateDto.java,PostStateDto,getStateName__(),"public String getStateName() {
    return stateName;
}"
594,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostStateDto.java,PostStateDto,setStateName__(String stateName),"public void setStateName(String stateName) {
    this.stateName = stateName;
}"
595,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostStateDto.java,PostStateDto,getComments__(),"public String getComments() {
    return comments;
}"
596,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostStateDto.java,PostStateDto,setComments__(String comments),"public void setComments(String comments) {
    this.comments = comments;
}"
597,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostStateDto.java,PostStateDto,toString__(),"@Override
public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(getClass().getSimpleName());
    sb.append("" ["");
    sb.append(""Hash = "").append(hashCode());
    sb.append("", state="").append(state);
    sb.append("", stateName="").append(stateName);
    sb.append("", comments="").append(comments);
    sb.append("", serialVersionUID="").append(serialVersionUID);
    sb.append(""]"");
    return sb.toString();
}"
598,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/AddUserCmd.java,AddUserCmd,AddUserCmd__(UserDto userDto),"public AddUserCmd(UserDto userDto) {
    super();
    this.userDto = userDto;
}"
599,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/AddUserCmd.java,AddUserCmd,execute__(),"@Override
public UserDto execute() {
    UserDtoMapper userDtoMapper = this.getMapper(UserDtoMapper.class);
    userDtoMapper.insert(userDto);
    return userDto;
}"
600,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,setContext__(Context context),"@Override
public void setContext(Context context) {
    super.setContext(context);
    //设置默认的注释生成器
    commentCfg = new CommentGeneratorConfiguration();
    commentCfg.setConfigurationType(LittleFisherCommentGenerator.class.getCanonicalName());
    context.setCommentGeneratorConfiguration(commentCfg);
    contextProperties = context.getProperties();
    addProperties(context);
    //支持oracle获取注释#114
    context.getJdbcConnectionConfiguration().addProperty(""remarksReporting"", EnumBool.TRUE.getCode().toLowerCase());
}"
601,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,addProperties__(Context context),"private void addProperties(Context context) {
    for (Object key : contextProperties.keySet()) {
        Object value = contextProperties.get(key);
        commentCfg.addProperty((String) key, (String) value);
    }
}"
602,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,setProperties__(Properties properties),"@Override
public void setProperties(Properties properties) {
    super.setProperties(properties);
    String mappers = this.properties.getProperty(""mappers"");
    if (StringUtility.stringHasValue(mappers)) {
        Collections.addAll(this.mappers, mappers.split("",""));
    } else {
        throw new MapperException(""Mapper插件缺少必要的mappers属性!"");
    }
    String caseSensitive = this.properties.getProperty(""caseSensitive"");
    if (StringUtility.stringHasValue(caseSensitive)) {
        this.caseSensitive = EnumBool.TRUE.getCode().equalsIgnoreCase(caseSensitive);
    }
    String beginningDelimiter = this.contextProperties.getProperty(""beginningDelimiter"");
    if (StringUtility.stringHasValue(beginningDelimiter)) {
        this.beginningDelimiter = beginningDelimiter;
    }
    String endingDelimiter = this.contextProperties.getProperty(""endingDelimiter"");
    if (StringUtility.stringHasValue(endingDelimiter)) {
        this.endingDelimiter = endingDelimiter;
    }
    String schema = this.properties.getProperty(""schema"");
    if (StringUtility.stringHasValue(schema)) {
        this.schema = schema;
    }
}"
603,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,getDelimiterName__(String name),"public String getDelimiterName(String name) {
    StringBuilder nameBuilder = new StringBuilder();
    if (StringUtility.stringHasValue(schema)) {
        nameBuilder.append(schema);
        nameBuilder.append(""."");
    }
    nameBuilder.append(beginningDelimiter);
    nameBuilder.append(name);
    nameBuilder.append(endingDelimiter);
    return nameBuilder.toString();
}"
604,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,validate__(List<String> warnings),"@Override
public boolean validate(List<String> warnings) {
    return true;
}"
605,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientGenerated__(Interface interfaze, TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean clientGenerated(Interface interfaze, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    //获取实体类
    FullyQualifiedJavaType entityType = new FullyQualifiedJavaType(introspectedTable.getBaseRecordType());
    //import接口
    for (String mapper : mappers) {
        interfaze.addImportedType(new FullyQualifiedJavaType(mapper));
        interfaze.addSuperInterface(new FullyQualifiedJavaType(mapper + ""<"" + entityType.getShortName() + "">""));
    }
    //import实体类
    interfaze.addImportedType(entityType);
    return true;
}"
606,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"processEntityClass__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","private void processEntityClass(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    //引入JPA注解
    topLevelClass.addImportedType(""javax.persistence.Table"");
    String tableName = introspectedTable.getFullyQualifiedTableNameAtRuntime();
    //如果包含空格，或者需要分隔符，需要完善
    if (StringUtility.stringContainsSpace(tableName)) {
        tableName = context.getBeginningDelimiter() + tableName + context.getEndingDelimiter();
    }
    //是否忽略大小写，对于区分大小写的数据库，会有用
    if (caseSensitive && !topLevelClass.getType().getShortName().equals(tableName)) {
        topLevelClass.addAnnotation(""@Table(name = \"""" + getDelimiterName(tableName) + ""\"")"");
    } else if (!topLevelClass.getType().getShortName().equalsIgnoreCase(tableName)) {
        topLevelClass.addAnnotation(""@Table(name = \"""" + getDelimiterName(tableName) + ""\"")"");
    } else if (StringUtility.stringHasValue(schema) || StringUtility.stringHasValue(beginningDelimiter) || StringUtility.stringHasValue(endingDelimiter)) {
        topLevelClass.addAnnotation(""@Table(name = \"""" + getDelimiterName(tableName) + ""\"")"");
    }
}"
607,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"modelBaseRecordClassGenerated__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean modelBaseRecordClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    processEntityClass(topLevelClass, introspectedTable);
    return true;
}"
608,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"modelPrimaryKeyClassGenerated__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean modelPrimaryKeyClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    processEntityClass(topLevelClass, introspectedTable);
    return true;
}"
609,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"modelRecordWithBLOBsClassGenerated__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean modelRecordWithBLOBsClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    processEntityClass(topLevelClass, introspectedTable);
    return false;
}"
610,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientDeleteByPrimaryKeyMethodGenerated__(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean clientDeleteByPrimaryKeyMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    return false;
}"
611,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientInsertMethodGenerated__(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean clientInsertMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    return false;
}"
612,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientInsertSelectiveMethodGenerated__(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean clientInsertSelectiveMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    return false;
}"
613,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientSelectByPrimaryKeyMethodGenerated__(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean clientSelectByPrimaryKeyMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    return false;
}"
614,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientUpdateByPrimaryKeySelectiveMethodGenerated__(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean clientUpdateByPrimaryKeySelectiveMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    return false;
}"
615,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientUpdateByPrimaryKeyWithBLOBsMethodGenerated__(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean clientUpdateByPrimaryKeyWithBLOBsMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    return false;
}"
616,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientUpdateByPrimaryKeyWithoutBLOBsMethodGenerated__(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean clientUpdateByPrimaryKeyWithoutBLOBsMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    return false;
}"
617,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientDeleteByPrimaryKeyMethodGenerated__(Method method, Interface interfaze, IntrospectedTable introspectedTable)","@Override
public boolean clientDeleteByPrimaryKeyMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
    return false;
}"
618,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientInsertMethodGenerated__(Method method, Interface interfaze, IntrospectedTable introspectedTable)","@Override
public boolean clientInsertMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
    return false;
}"
619,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientInsertSelectiveMethodGenerated__(Method method, Interface interfaze, IntrospectedTable introspectedTable)","@Override
public boolean clientInsertSelectiveMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
    return false;
}"
620,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientSelectAllMethodGenerated__(Method method, Interface interfaze, IntrospectedTable introspectedTable)","@Override
public boolean clientSelectAllMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
    return false;
}"
621,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientSelectAllMethodGenerated__(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean clientSelectAllMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    return false;
}"
622,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientSelectByPrimaryKeyMethodGenerated__(Method method, Interface interfaze, IntrospectedTable introspectedTable)","@Override
public boolean clientSelectByPrimaryKeyMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
    return false;
}"
623,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientUpdateByPrimaryKeySelectiveMethodGenerated__(Method method, Interface interfaze, IntrospectedTable introspectedTable)","@Override
public boolean clientUpdateByPrimaryKeySelectiveMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
    return false;
}"
624,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientUpdateByPrimaryKeyWithBLOBsMethodGenerated__(Method method, Interface interfaze, IntrospectedTable introspectedTable)","@Override
public boolean clientUpdateByPrimaryKeyWithBLOBsMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
    return false;
}"
625,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"clientUpdateByPrimaryKeyWithoutBLOBsMethodGenerated__(Method method, Interface interfaze, IntrospectedTable introspectedTable)","@Override
public boolean clientUpdateByPrimaryKeyWithoutBLOBsMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
    return false;
}"
626,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"sqlMapDeleteByPrimaryKeyElementGenerated__(XmlElement element, IntrospectedTable introspectedTable)","@Override
public boolean sqlMapDeleteByPrimaryKeyElementGenerated(XmlElement element, IntrospectedTable introspectedTable) {
    return false;
}"
627,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"sqlMapInsertElementGenerated__(XmlElement element, IntrospectedTable introspectedTable)","@Override
public boolean sqlMapInsertElementGenerated(XmlElement element, IntrospectedTable introspectedTable) {
    return false;
}"
628,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"sqlMapInsertSelectiveElementGenerated__(XmlElement element, IntrospectedTable introspectedTable)","@Override
public boolean sqlMapInsertSelectiveElementGenerated(XmlElement element, IntrospectedTable introspectedTable) {
    return false;
}"
629,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"sqlMapSelectAllElementGenerated__(XmlElement element, IntrospectedTable introspectedTable)","@Override
public boolean sqlMapSelectAllElementGenerated(XmlElement element, IntrospectedTable introspectedTable) {
    return false;
}"
630,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"sqlMapSelectByPrimaryKeyElementGenerated__(XmlElement element, IntrospectedTable introspectedTable)","@Override
public boolean sqlMapSelectByPrimaryKeyElementGenerated(XmlElement element, IntrospectedTable introspectedTable) {
    return false;
}"
631,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"sqlMapUpdateByPrimaryKeySelectiveElementGenerated__(XmlElement element, IntrospectedTable introspectedTable)","@Override
public boolean sqlMapUpdateByPrimaryKeySelectiveElementGenerated(XmlElement element, IntrospectedTable introspectedTable) {
    return false;
}"
632,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"sqlMapUpdateByPrimaryKeyWithBLOBsElementGenerated__(XmlElement element, IntrospectedTable introspectedTable)","@Override
public boolean sqlMapUpdateByPrimaryKeyWithBLOBsElementGenerated(XmlElement element, IntrospectedTable introspectedTable) {
    return false;
}"
633,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"sqlMapUpdateByPrimaryKeyWithoutBLOBsElementGenerated__(XmlElement element, IntrospectedTable introspectedTable)","@Override
public boolean sqlMapUpdateByPrimaryKeyWithoutBLOBsElementGenerated(XmlElement element, IntrospectedTable introspectedTable) {
    return false;
}"
634,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"providerGenerated__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean providerGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    return false;
}"
635,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"providerApplyWhereMethodGenerated__(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean providerApplyWhereMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    return false;
}"
636,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"providerInsertSelectiveMethodGenerated__(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean providerInsertSelectiveMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    return false;
}"
637,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/MapperPlugin.java,MapperPlugin,"providerUpdateByPrimaryKeySelectiveMethodGenerated__(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean providerUpdateByPrimaryKeySelectiveMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    return false;
}"
638,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/KafkaProducerConfig.java,KafkaProducerConfig,kafkaProducerFactory__(),"@Bean
public <K, V> DefaultKafkaProducerFactory<K, V> kafkaProducerFactory() {
    return new DefaultKafkaProducerFactory<>(generateKafkaProducerConfig());
}"
639,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/KafkaProducerConfig.java,KafkaProducerConfig,generateKafkaProducerConfig__(),"private Map<String, Object> generateKafkaProducerConfig() {
    Map<String, Object> config = Maps.newHashMap();
    // zk的ip和host，可以多个
    config.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);
    // ack模式
    config.put(ProducerConfig.ACKS_CONFIG, acks);
    // 用户随意指定，但是不能重复，主要用于跟踪记录消息
    config.put(ProducerConfig.CLIENT_ID_CONFIG, clientId);
    // 重试次数
    config.put(ProducerConfig.RETRIES_CONFIG, retries);
    // Producer会尝试去把发往同一个Partition的多个Requests进行合并，
    // batch.size指明了一次Batch合并后Requests总大小的上限。如果这个值设置的太小，可能会导致所有的Request都不进行Batch
    config.put(ProducerConfig.BATCH_SIZE_CONFIG, batchSize);
    // Producer默认会把两次发送时间间隔内收集到的所有Requests进行一次聚合然后再发送，以此提高吞吐量，
    // 而linger.ms则更进一步，这个参数为每次发送增加一些delay，以此来聚合更多的Message
    config.put(ProducerConfig.LINGER_MS_CONFIG, lingerMs);
    // 在Producer端用来存放尚未发送出去的Message的缓冲区大小。
    // 缓冲区满了之后可以选择阻塞发送或抛出异常，由block.on.buffer.full的配置来决定
    config.put(ProducerConfig.BUFFER_MEMORY_CONFIG, bufferMemory);
    // Broker等待ack的超时时间，若等待时间超过此值，会返回客户端错误信息。
    config.put(ProducerConfig.REQUEST_TIMEOUT_MS_CONFIG, requestTimeoutMs);
    // 每次重新连接的间隔时间
    config.put(ProducerConfig.RECONNECT_BACKOFF_MS_CONFIG, reconnectBackoffMs);
    // 每次失败后的间隔时间
    config.put(ProducerConfig.RETRY_BACKOFF_MS_CONFIG, retryBackoffMs);
    // Key的序列化类
    config.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, keySerializer);
    // Value的序列化类
    config.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, valueSerializer);
    return config;
}"
640,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/KafkaProducerConfig.java,KafkaProducerConfig,kafkaTemplate__(),"@Bean
public <K, V> KafkaTemplate<K, V> kafkaTemplate() {
    return new KafkaTemplate<>(kafkaProducerFactory(), true);
}"
641,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessAction.java,IProcessAction,notify__(DelegateTask delegateTask),"@Override
;"
642,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessAction.java,IProcessAction,execute__(DelegateExecution execution),"@Override
;"
643,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/service/IPostStateService.java,IPostStateService,getAllPostState__(),List<PostStateDto> getAllPostState() throws BaseAppException;
644,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/service/IPostStateService.java,IPostStateService,addPostState__(PostStateDto postStateDto),PostStateDto addPostState(PostStateDto postStateDto) throws BaseAppException;
645,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/service/IPostStateService.java,IPostStateService,updatePostState__(PostStateDto postStateDto),PostStateDto updatePostState(PostStateDto postStateDto) throws BaseAppException;
646,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/service/IPostStateService.java,IPostStateService,deletePostState__(String state),int deletePostState(String state) throws BaseAppException;
647,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/service/impl/CommentaryServiceImpl.java,CommentaryServiceImpl,"getCommentaryList4PagerByCond__(
            GetCommentaryList4PagerByCondRequest req)","@Override
public List<CommentaryDto> getCommentaryList4PagerByCond(
        GetCommentaryList4PagerByCondRequest req) {
    return this.execute(new GetCommentaryList4PagerByCondCmd(req));
}"
648,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/service/impl/CommentaryServiceImpl.java,CommentaryServiceImpl,getCommentaryById__(Long commentaryId),"@Override
public CommentaryDto getCommentaryById(Long commentaryId) {
    return this.execute(new GetCommentaryByIdCmd(commentaryId));
}"
649,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/service/impl/CommentaryServiceImpl.java,CommentaryServiceImpl,addCommentary__(CommentaryDto commentaryDto),"@Override
public CommentaryDto addCommentary(CommentaryDto commentaryDto) {
    return this.execute(new AddCommentaryCmd(commentaryDto));
}"
650,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/service/impl/CommentaryServiceImpl.java,CommentaryServiceImpl,updateCommentary__(CommentaryDto commentaryDto),"@Override
public CommentaryDto updateCommentary(CommentaryDto commentaryDto) {
    return this.execute(new UpdateCommentaryCmd(commentaryDto));
}"
651,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/service/impl/CommentaryServiceImpl.java,CommentaryServiceImpl,deleteCommentary__(Long commentaryId),"@Override
public int deleteCommentary(Long commentaryId) {
    return this.execute(new DeleteCommentaryCmd(commentaryId));
}"
652,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/service/impl/CommentaryServiceImpl.java,CommentaryServiceImpl,getAllCommentaryState__(),"@Override
public List<CommentaryStateDto> getAllCommentaryState() {
    return this.execute(new GetAllCommentaryStateCmd());
}"
653,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/user/controller/UserStateController.java,UserStateController,getAllUserState__(),"@RequestMapping(method = RequestMethod.GET)
@ApiOperation(""查询所有用户状态"")
public List<UserStateDto> getAllUserState() {
    return userStateService.getAllUserState();
}"
654,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/user/controller/UserStateController.java,UserStateController,"addUserState__(
            @ApiParam(required = true, value = ""用户状态实体"") @RequestBody UserStateDto userStateDto)","@RequestMapping(method = RequestMethod.POST)
public UserStateDto addUserState(
        @ApiParam(required = true, value = ""用户状态实体"") @RequestBody UserStateDto userStateDto) {
    return userStateService.addUserState(userStateDto);
}"
655,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/user/controller/UserStateController.java,UserStateController,"updateUserState__(
            @ApiParam(required = true, value = ""用户状态实体"") @RequestBody UserStateDto userStateDto)","@RequestMapping(method = RequestMethod.PATCH)
@ApiOperation(""修改用户状态"")
public UserStateDto updateUserState(
        @ApiParam(required = true, value = ""用户状态实体"") @RequestBody UserStateDto userStateDto) {
    return userStateService.updateUserState(userStateDto);
}"
656,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/user/controller/UserStateController.java,UserStateController,"deleteUserState__(
            @ApiParam(required = true, value = ""状态"") @PathVariable(""state"") String state)","@RequestMapping(value = ""/{state}"", method = RequestMethod.DELETE)
@ApiOperation(""删除用户状态"")
public int deleteUserState(
        @ApiParam(required = true, value = ""状态"") @PathVariable(""state"") String state) {
    return userStateService.deleteUserState(state);
}"
657,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/db/dao/DbMapper.java,DbMapper,getDBDateTime__(),Date getDBDateTime();
658,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/service/IPostService.java,IPostService,getPostList4PagerByCond__(GetPostList4PagerByCondRequest req),List<PostDto> getPostList4PagerByCond(GetPostList4PagerByCondRequest req) throws BaseAppException;
659,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/service/IPostService.java,IPostService,getPostById__(Long postId),PostDto getPostById(Long postId) throws BaseAppException;
660,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/service/IPostService.java,IPostService,addPost__(PostDto postDto),PostDto addPost(PostDto postDto) throws BaseAppException;
661,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/service/IPostService.java,IPostService,updatePost__(PostDto postDto),PostDto updatePost(PostDto postDto) throws BaseAppException;
662,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/service/IPostService.java,IPostService,deletePostById__(Long postId),int deletePostById(Long postId) throws BaseAppException;
663,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/service/ISystemParamService.java,ISystemParamService,getSystemParamList4PagerByCond__(GetSystemParamList4PagerByCondRequest req),"List<SystemParamDto> getSystemParamList4PagerByCond(GetSystemParamList4PagerByCondRequest req)
;"
664,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/service/ISystemParamService.java,ISystemParamService,getSystemParamByKey__(String paramKey),SystemParamDto getSystemParamByKey(String paramKey) throws BaseAppException;
665,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/service/ISystemParamService.java,ISystemParamService,getSystemParamById__(Long systemParamId),SystemParamDto getSystemParamById(Long systemParamId) throws BaseAppException;
666,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/service/ISystemParamService.java,ISystemParamService,addSystemParam__(SystemParamDto systemParamDto),SystemParamDto addSystemParam(SystemParamDto systemParamDto) throws BaseAppException;
667,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/service/ISystemParamService.java,ISystemParamService,deleteSystemParamByKey__(String paramKey),int deleteSystemParamByKey(String paramKey) throws BaseAppException;
668,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/service/ISystemParamService.java,ISystemParamService,deleteSystemParamById__(Long systemParamId),int deleteSystemParamById(Long systemParamId) throws BaseAppException;
669,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/service/ISystemParamService.java,ISystemParamService,updateSystemParam__(SystemParamDto systemParamDto),SystemParamDto updateSystemParam(SystemParamDto systemParamDto) throws BaseAppException;
670,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/SerializablePlugin.java,SerializablePlugin,SerializablePlugin__(),"public SerializablePlugin() {
    super();
    serializable = new FullyQualifiedJavaType(""java.io.Serializable"");
    gwtSerializable = new FullyQualifiedJavaType(""com.google.gwt.user.client.rpc.IsSerializable"");
}"
671,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/SerializablePlugin.java,SerializablePlugin,validate__(List<String> warnings),"@Override
public boolean validate(List<String> warnings) {
    // this plugin is always valid
    return true;
}"
672,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/SerializablePlugin.java,SerializablePlugin,setProperties__(Properties properties),"@Override
public void setProperties(Properties properties) {
    super.setProperties(properties);
    addGWTInterface = Boolean.valueOf(properties.getProperty(""addGWTInterface""));
    suppressJavaInterface = Boolean.valueOf(properties.getProperty(""suppressJavaInterface""));
}"
673,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/SerializablePlugin.java,SerializablePlugin,"modelBaseRecordClassGenerated__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean modelBaseRecordClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    makeSerializable(topLevelClass, introspectedTable);
    return true;
}"
674,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/SerializablePlugin.java,SerializablePlugin,"modelPrimaryKeyClassGenerated__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean modelPrimaryKeyClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    makeSerializable(topLevelClass, introspectedTable);
    return true;
}"
675,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/SerializablePlugin.java,SerializablePlugin,"modelRecordWithBLOBsClassGenerated__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","@Override
public boolean modelRecordWithBLOBsClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    makeSerializable(topLevelClass, introspectedTable);
    return true;
}"
676,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/plugins/SerializablePlugin.java,SerializablePlugin,"makeSerializable__(TopLevelClass topLevelClass, IntrospectedTable introspectedTable)","protected void makeSerializable(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
    if (addGWTInterface) {
        topLevelClass.addImportedType(gwtSerializable);
        topLevelClass.addSuperInterface(gwtSerializable);
    }

    if (!suppressJavaInterface) {
        topLevelClass.addImportedType(serializable);
        topLevelClass.addSuperInterface(serializable);

        Field field = new Field();
        field.setFinal(true);
        field.setInitializationString(""1L"");
        field.setName(""serialVersionUID"");
        field.setStatic(true);
        field.setType(new FullyQualifiedJavaType(""long""));
        field.setVisibility(JavaVisibility.PRIVATE);
        field.addJavaDocLine(""/**"");
        field.addJavaDocLine("" * serialVersionUID"");
        field.addJavaDocLine("" */"");
        context.getCommentGenerator().addFieldComment(field, introspectedTable);

        topLevelClass.addField(field);
    }
}"
677,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleDto.java,RoleDto,getId__(),"public Long getId() {
    return id;
}"
678,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleDto.java,RoleDto,setId__(Long id),"public void setId(Long id) {
    this.id = id;
}"
679,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleDto.java,RoleDto,getName__(),"public String getName() {
    return name;
}"
680,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleDto.java,RoleDto,setName__(String name),"public void setName(String name) {
    this.name = name;
}"
681,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleDto.java,RoleDto,getType__(),"public String getType() {
    return type;
}"
682,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleDto.java,RoleDto,setType__(String type),"public void setType(String type) {
    this.type = type;
}"
683,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleDto.java,RoleDto,getRoleDesc__(),"public String getRoleDesc() {
    return roleDesc;
}"
684,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleDto.java,RoleDto,setRoleDesc__(String roleDesc),"public void setRoleDesc(String roleDesc) {
    this.roleDesc = roleDesc;
}"
685,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleDto.java,RoleDto,toString__(),"@Override
public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(getClass().getSimpleName());
    sb.append("" ["");
    sb.append(""Hash = "").append(hashCode());
    sb.append("", id="").append(id);
    sb.append("", name="").append(name);
    sb.append("", type="").append(type);
    sb.append("", roleDesc="").append(roleDesc);
    sb.append("", serialVersionUID="").append(serialVersionUID);
    sb.append(""]"");
    return sb.toString();
}"
686,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventListener.java,EventListener,onEvent__(Event event),void onEvent(Event event);
687,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventListener.java,EventListener,isFailOnException__(),boolean isFailOnException();
688,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContextInterceptor.java,CommandContextInterceptor,CommandContextInterceptor__(),"public CommandContextInterceptor() {
}"
689,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContextInterceptor.java,CommandContextInterceptor,"CommandContextInterceptor__(CommandContextFactory commandContextFactory,
                                     SystemEngineConfig systemEngineConfig)","public CommandContextInterceptor(CommandContextFactory commandContextFactory,
                                 SystemEngineConfig systemEngineConfig) {
    this.commandContextFactory = commandContextFactory;
    this.systemEngineConfig = systemEngineConfig;
}"
690,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandContextInterceptor.java,CommandContextInterceptor,"execute__(CommandConfig config, Command<U> command)","@Override
public <U> U execute(CommandConfig config, Command<U> command) {
    CommandContext context = Context.getCommandContext();

    boolean contextReused = false;
    if (!config.isContextReusePossible() || context == null || context.getException() != null) {
        context = commandContextFactory.createCommandContext(command);
    } else {
        logger.debug(""Valid context found. Reusing it for the current command [{}]"",
                command.getClass().getCanonicalName());
        contextReused = true;
    }
    try {
        // Push on stack
        Context.setCommandContext(context);
        Context.setSystemEngineConfig(systemEngineConfig);

        return next.execute(config, command);

    } catch (BaseAppException e) {

        context.exception(e);
        throw e;

    } finally {
        try {
            if (!contextReused) {
                context.close();
            }
        } finally {
            // Pop from stack
            Context.removeCommandContext();
            Context.removeSystemEngineConfig();
        }
    }

}"
691,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/GetSystemParamList4PagerByCondCmd.java,GetSystemParamList4PagerByCondCmd,GetSystemParamList4PagerByCondCmd__(GetSystemParamList4PagerByCondRequest req),"public GetSystemParamList4PagerByCondCmd(GetSystemParamList4PagerByCondRequest req) {
    super();
    this.req = req;
}"
692,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/GetSystemParamList4PagerByCondCmd.java,GetSystemParamList4PagerByCondCmd,execute__(),"@Override
public List<SystemParamDto> execute() {
    SystemParamDtoMapper systemParamDtoMapper = this.getMapper(SystemParamDtoMapper.class);
    PageHelper.startPage(req.getPageNum(), req.getPageSize());
    return systemParamDtoMapper.selectByCond(req);
    //        RowBounds rowBounds = new RowBounds(req.getPageNum() - 1, req.getPageSize());
    //        return systemParamDtoMapper.selectByCond(req, rowBounds);
}"
693,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/ChangeColType2LongJavaTypeResolver.java,ChangeColType2LongJavaTypeResolver,calculateJavaType__(IntrospectedColumn introspectedColumn),"@Override
public FullyQualifiedJavaType calculateJavaType(IntrospectedColumn introspectedColumn) {
    FullyQualifiedJavaType answer;
    JdbcTypeInformation jdbcTypeInformation = typeMap.get(introspectedColumn.getJdbcType());

    if (jdbcTypeInformation == null || Types.INTEGER == introspectedColumn.getJdbcType()) {
        switch (introspectedColumn.getJdbcType()) {
            case Types.DECIMAL:
            case Types.NUMERIC:
            case Types.INTEGER:
                answer = new FullyQualifiedJavaType(Long.class.getName());
                break;

            default:
                answer = null;
                break;
        }
    } else {
        answer = jdbcTypeInformation.getFullyQualifiedJavaType();
    }
    return answer;
}"
694,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/KafkaConsumerConfig.java,KafkaConsumerConfig,kafkaConsumerFactory__(),"@Bean(""consumerFactory"")
public <K, V> DefaultKafkaConsumerFactory<K, V> kafkaConsumerFactory() {
    return new DefaultKafkaConsumerFactory<>(generateKafkaConsumerConfig());
}"
695,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/KafkaConsumerConfig.java,KafkaConsumerConfig,generateKafkaConsumerConfig__(),"private Map<String, Object> generateKafkaConsumerConfig() {
    Map<String, Object> config = Maps.newHashMap();
    config.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);
    config.put(ConsumerConfig.GROUP_ID_CONFIG, groupId);
    config.put(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, enableAutoCommit);
    config.put(ConsumerConfig.AUTO_COMMIT_INTERVAL_MS_CONFIG, autoCommitIntervalMs);
    config.put(ConsumerConfig.SESSION_TIMEOUT_MS_CONFIG, sessionTimeoutMs);
    config.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, keyDeserializer);
    config.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, valueDeserializer);
    return config;
}"
696,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/KafkaConsumerConfig.java,KafkaConsumerConfig,consumerMessageListener__(),"@Bean
public DefaultConsumerMessageListener consumerMessageListener() {
    return new DefaultConsumerMessageListener();
}"
697,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/KafkaConsumerConfig.java,KafkaConsumerConfig,containerProperties__(),"@Bean
public ContainerProperties containerProperties() {
    ContainerProperties containerProperties = new ContainerProperties(Iterables
            .toArray(Splitter.on("","").omitEmptyStrings().trimResults().split(topics),
                    String.class));
    containerProperties.setMessageListener(consumerMessageListener());
    containerProperties.setAckMode(AbstractMessageListenerContainer.AckMode.RECORD);
    return containerProperties;
}"
698,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/KafkaConsumerConfig.java,KafkaConsumerConfig,kafkaMessageListenerContainer__(),"@Bean(initMethod = ""doStart"")
public <K, V> KafkaMessageListenerContainer<K, V> kafkaMessageListenerContainer() {
    KafkaMessageListenerContainer<K, V> kafkaMessageListenerContainer = new KafkaMessageListenerContainer<>(
            kafkaConsumerFactory(), containerProperties());
    kafkaMessageListenerContainer.setAutoStartup(true);
    return kafkaMessageListenerContainer;
}"
699,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserRoleDto.java,UserRoleDto,getId__(),"public Long getId() {
    return id;
}"
700,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserRoleDto.java,UserRoleDto,setId__(Long id),"public void setId(Long id) {
    this.id = id;
}"
701,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserRoleDto.java,UserRoleDto,getUserId__(),"public Long getUserId() {
    return userId;
}"
702,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserRoleDto.java,UserRoleDto,setUserId__(Long userId),"public void setUserId(Long userId) {
    this.userId = userId;
}"
703,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserRoleDto.java,UserRoleDto,getRoleId__(),"public Long getRoleId() {
    return roleId;
}"
704,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserRoleDto.java,UserRoleDto,setRoleId__(Long roleId),"public void setRoleId(Long roleId) {
    this.roleId = roleId;
}"
705,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserRoleDto.java,UserRoleDto,toString__(),"@Override
public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(getClass().getSimpleName());
    sb.append("" ["");
    sb.append(""Hash = "").append(hashCode());
    sb.append("", id="").append(id);
    sb.append("", userId="").append(userId);
    sb.append("", roleId="").append(roleId);
    sb.append("", serialVersionUID="").append(serialVersionUID);
    sb.append(""]"");
    return sb.toString();
}"
706,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/GetPostList4PagerByCondCmd.java,GetPostList4PagerByCondCmd,GetPostList4PagerByCondCmd__(GetPostList4PagerByCondRequest req),"public GetPostList4PagerByCondCmd(GetPostList4PagerByCondRequest req) {
    super();
    this.req = req;
}"
707,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/GetPostList4PagerByCondCmd.java,GetPostList4PagerByCondCmd,execute__(),"@Override
public List<PostDto> execute() {
    PostDtoMapper postDtoMapper = this.getMapper(PostDtoMapper.class);
    PageHelper.startPage(req.getPageNum(), req.getPageSize());
    return postDtoMapper.selectByCond(req);
}"
708,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventImpl.java,EventImpl,EventImpl__(String type),"public EventImpl(String type) {
    this.type = type;
}"
709,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventImpl.java,EventImpl,getType__(),"@Override
public String getType() {
    return type;
}"
710,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventImpl.java,EventImpl,setType__(String type),"public void setType(String type) {
    this.type = type;
}"
711,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/service/ICommentaryStateService.java,ICommentaryStateService,getAllCommentaryState__(),List<CommentaryStateDto> getAllCommentaryState() throws BaseAppException;
712,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/service/ICommentaryStateService.java,ICommentaryStateService,addCommentaryState__(CommentaryStateDto commentaryStateDto),CommentaryStateDto addCommentaryState(CommentaryStateDto commentaryStateDto) throws BaseAppException;
713,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/service/ICommentaryStateService.java,ICommentaryStateService,updateCommentaryState__(CommentaryStateDto commentaryStateDto),CommentaryStateDto updateCommentaryState(CommentaryStateDto commentaryStateDto) throws BaseAppException;
714,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/commentary/service/ICommentaryStateService.java,ICommentaryStateService,deleteCommentaryState__(String state),int deleteCommentaryState(String state) throws BaseAppException;
715,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/service/IUserService.java,IUserService,getAllUser__(),List<UserDto> getAllUser() throws BaseAppException;
716,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/service/IUserService.java,IUserService,getUserListByCond__(GetUserList4PagerByCondRequest req),List<UserDto> getUserListByCond(GetUserList4PagerByCondRequest req) throws BaseAppException;
717,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/service/IUserService.java,IUserService,getUserById__(Long userId),UserDto getUserById(Long userId) throws BaseAppException;
718,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/service/IUserService.java,IUserService,addUser__(UserDto userDto),UserDto addUser(UserDto userDto) throws BaseAppException;
719,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/service/IUserService.java,IUserService,updateUser__(UserDto userDto),UserDto updateUser(UserDto userDto) throws BaseAppException;
720,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/service/IUserService.java,IUserService,deleteUser__(Long userId),int deleteUser(Long userId) throws BaseAppException;
721,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/post/controller/PostStateController.java,PostStateController,getAllPostState__(),"@RequestMapping(method = RequestMethod.GET)
@ApiOperation(""查询所有博文状态"")
public List<PostStateDto> getAllPostState() {
    return postStateService.getAllPostState();
}"
722,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/post/controller/PostStateController.java,PostStateController,"addPostState__(
            @ApiParam(required = true, value = ""博文状态实体"") @RequestBody PostStateDto postStateDto)","@RequestMapping(method = RequestMethod.POST)
@ApiOperation(""新增博文状态"")
public PostStateDto addPostState(
        @ApiParam(required = true, value = ""博文状态实体"") @RequestBody PostStateDto postStateDto) {
    return postStateService.addPostState(postStateDto);
}"
723,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/post/controller/PostStateController.java,PostStateController,"updatePostState__(
            @ApiParam(required = true, value = ""博文状态实体"") @RequestBody PostStateDto postStateDto)","@RequestMapping(method = RequestMethod.PATCH)
@ApiOperation(""修改博文状态"")
public PostStateDto updatePostState(
        @ApiParam(required = true, value = ""博文状态实体"") @RequestBody PostStateDto postStateDto) {
    return postStateService.updatePostState(postStateDto);
}"
724,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/post/controller/PostStateController.java,PostStateController,"deletePostState__(
            @ApiParam(required = true, value = ""博文状态"") @PathVariable(""state"") String state)","@RequestMapping(value = ""/{state}"", method = RequestMethod.DELETE)
@ApiOperation(""删除博文状态"")
public int deletePostState(
        @ApiParam(required = true, value = ""博文状态"") @PathVariable(""state"") String state) {
    return postStateService.deletePostState(state);
}"
725,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/service/IPostTypeService.java,IPostTypeService,getAllPostType__(),List<PostTypeDto> getAllPostType() throws BaseAppException;
726,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/service/IPostTypeService.java,IPostTypeService,addPostType__(PostTypeDto postTypeDto),PostTypeDto addPostType(PostTypeDto postTypeDto) throws BaseAppException;
727,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/service/IPostTypeService.java,IPostTypeService,updatePostType__(PostTypeDto postTypeDto),PostTypeDto updatePostType(PostTypeDto postTypeDto) throws BaseAppException;
728,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/service/IPostTypeService.java,IPostTypeService,deletePostType__(String type),int deletePostType(String type) throws BaseAppException;
729,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/post/controller/PostController.java,PostController,"getPostList4PagerByCond__(
            @ApiParam(required = true, value = ""查询博文列表的条件"") @ModelAttribute GetPostList4PagerByCondRequest req)","@RequestMapping(value = ""/pager"", method = RequestMethod.GET)
@ApiOperation(""根据条件查询博文列表"")
public PageInfo<PostDto> getPostList4PagerByCond(
        @ApiParam(required = true, value = ""查询博文列表的条件"") @ModelAttribute GetPostList4PagerByCondRequest req) {
    List<PostDto> postList = postService.getPostList4PagerByCond(req);
    return new PageInfo<>(postList);
}"
730,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/post/controller/PostController.java,PostController,"getPostById__(
            @ApiParam(required = true, value = ""博文主键"") @PathVariable(""postId"") Long postId)","@RequestMapping(value = ""/{postId}"", method = RequestMethod.GET)
@ApiOperation(""根据博文主键查询具体博文"")
public PostDto getPostById(
        @ApiParam(required = true, value = ""博文主键"") @PathVariable(""postId"") Long postId) {
    return postService.getPostById(postId);
}"
731,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/post/controller/PostController.java,PostController,"addPost__(
            @ApiParam(required = true, value = ""博文实体"") @RequestBody PostDto postDto)","@RequestMapping(method = RequestMethod.POST)
@ApiOperation(""新增博文"")
public PostDto addPost(
        @ApiParam(required = true, value = ""博文实体"") @RequestBody PostDto postDto) {
    return postService.addPost(postDto);
}"
732,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/post/controller/PostController.java,PostController,"updatePost__(
            @ApiParam(required = true, value = ""博文实体"") @RequestBody PostDto postDto)","@RequestMapping(method = RequestMethod.PATCH)
@ApiOperation(""修改博文"")
public PostDto updatePost(
        @ApiParam(required = true, value = ""博文实体"") @RequestBody PostDto postDto) {
    return postService.updatePost(postDto);
}"
733,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/post/controller/PostController.java,PostController,"deletePost__(
            @ApiParam(required = true, value = ""博文主键"") @PathVariable(""postId"") Long postId)","@RequestMapping(value = ""/{postId}"", method = RequestMethod.DELETE)
@ApiOperation(""删除博文"")
public int deletePost(
        @ApiParam(required = true, value = ""博文主键"") @PathVariable(""postId"") Long postId) {
    return postService.deletePostById(postId);
}"
734,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessStartImpl.java,ProcessStartImpl,"flowStart__(String processInstanceKey, Map<String, Object> variables)","@Override
public void flowStart(String processInstanceKey, Map<String, Object> variables)  {
    
    RuntimeService runtimeService = processEngine.getRuntimeService();
    ProcessInstance processInstance = runtimeService
            .startProcessInstanceByKey(processInstanceKey, variables);
    logger.debug(""processInstanceId："" + processInstance.getId());
    logger.debug(""Name："" + processInstance.getName());
}"
735,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessStartImpl.java,ProcessStartImpl,flowStart__(String processInstanceKey),"@Override
public void flowStart(String processInstanceKey) {
    this.flowStart(processInstanceKey, null);
}"
736,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/config/WebSpringMvcConfig.java,WebSpringMvcConfig,addResourceHandlers__(final ResourceHandlerRegistry registry),"@Override
public void addResourceHandlers(final ResourceHandlerRegistry registry) {

    // 所有swagger目录的访问，直接访问location指定的目录
    registry.addResourceHandler(""/swagger/**"").addResourceLocations(""/WEB-INF/swagger/"");
}"
737,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/config/WebSpringMvcConfig.java,WebSpringMvcConfig,commonsMultipartResolver__(),"@Bean
public CommonsMultipartResolver commonsMultipartResolver() {
    CommonsMultipartResolver commonsMultipartResolver = new CommonsMultipartResolver();

    // 默认编码格式 默认ISO-8859-1
    commonsMultipartResolver.setDefaultEncoding(""UTF-8"");

    // 设置允许上传的最大文件大小，以字节为单位计算。当设为-1时表示无限制，默认是-1
    commonsMultipartResolver.setMaxUploadSize(10485760);

    // 设置在文件上传时允许写到内存中的最大值，以字节为单位计算，默认是10240
    commonsMultipartResolver.setMaxInMemorySize(4096);

    return commonsMultipartResolver;
}"
738,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/config/WebSpringMvcConfig.java,WebSpringMvcConfig,configureDefaultServletHandling__(DefaultServletHandlerConfigurer configurer),"@Override
public void configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer) {

    // 类似于使用<mvc:default-servlet-handler />
    configurer.enable();
}"
739,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/config/WebSpringMvcConfig.java,WebSpringMvcConfig,configureMessageConverters__(List<HttpMessageConverter<?>> converters),"@Override
public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {
    Charset charset = Charset.forName(""UTF-8"");
    MappingJackson2HttpMessageConverter jacksonConverter = new MappingJackson2HttpMessageConverter();
    ObjectMapper om = jacksonConverter.getObjectMapper();

    om.setDateFormat(new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss""));
    om.setLocale(Locale.CHINA);
    om.setTimeZone(TimeZone.getTimeZone(""GMT+8""));

    List<MediaType> mediaTypeList = new ArrayList<>();

    mediaTypeList.add(new MediaType(""application"", ""json"", charset));
    mediaTypeList.add(new MediaType(""text"", ""html"", charset));
    jacksonConverter.setSupportedMediaTypes(mediaTypeList);

    StringHttpMessageConverter stringConverter = new StringHttpMessageConverter(charset);

    stringConverter.setWriteAcceptCharset(false);

    // 保持以下顺序
    // ""application/json"" ""application/*+json""
    converters.add(jacksonConverter);

    // ""application/xml"" ""text/xml"" ""application/*+xml""
    converters.add(new Jaxb2RootElementHttpMessageConverter());

    // ""application/xml"" ""text/xml"" ""application/*+xml""
    converters.add(new SourceHttpMessageConverter<>());

    // ""application/x-www-form-urlencoded"" ""multipart/form-data""
    converters.add(new AllEncompassingFormHttpMessageConverter());

    // ""application/octet-stream"" ""*/*""
    converters.add(new ByteArrayHttpMessageConverter());

    // ""text/plain"" ""*/*""
    converters.add(stringConverter);

    // ""*/*""
    converters.add(new ResourceHttpMessageConverter());
}"
740,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/config/WebSpringMvcConfig.java,WebSpringMvcConfig,addFormatters__(FormatterRegistry registry),"@Override
public void addFormatters(FormatterRegistry registry) {
    registry.addConverter(new DateConverter());

}"
741,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleTypeDto.java,RoleTypeDto,getType__(),"public String getType() {
    return type;
}"
742,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleTypeDto.java,RoleTypeDto,setType__(String type),"public void setType(String type) {
    this.type = type;
}"
743,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleTypeDto.java,RoleTypeDto,getTypeName__(),"public String getTypeName() {
    return typeName;
}"
744,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleTypeDto.java,RoleTypeDto,setTypeName__(String typeName),"public void setTypeName(String typeName) {
    this.typeName = typeName;
}"
745,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleTypeDto.java,RoleTypeDto,getComments__(),"public String getComments() {
    return comments;
}"
746,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleTypeDto.java,RoleTypeDto,setComments__(String comments),"public void setComments(String comments) {
    this.comments = comments;
}"
747,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/RoleTypeDto.java,RoleTypeDto,toString__(),"@Override
public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(getClass().getSimpleName());
    sb.append("" ["");
    sb.append(""Hash = "").append(hashCode());
    sb.append("", type="").append(type);
    sb.append("", typeName="").append(typeName);
    sb.append("", comments="").append(comments);
    sb.append("", serialVersionUID="").append(serialVersionUID);
    sb.append(""]"");
    return sb.toString();
}"
748,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/Event.java,Event,getType__(),String getType();
749,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/AddPostCmd.java,AddPostCmd,AddPostCmd__(PostDto postDto),"public AddPostCmd(PostDto postDto) {
    super();
    this.postDto = postDto;
}"
750,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/AddPostCmd.java,AddPostCmd,execute__(),"@Override
public PostDto execute() {
    PostDtoMapper postDtoMapper = this.getMapper(PostDtoMapper.class);
    postDtoMapper.insert(postDto);
    return postDto;
}"
751,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/AbstractCommandInterceptor.java,AbstractCommandInterceptor,getNext__(),"@Override
public CommandInterceptor getNext() {
    return next;
}"
752,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/AbstractCommandInterceptor.java,AbstractCommandInterceptor,setNext__(CommandInterceptor next),"@Override
public void setNext(CommandInterceptor next) {
    this.next = next;
}"
753,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/GetAllCommentaryStateCmd.java,GetAllCommentaryStateCmd,execute__(),"@Override
public List<CommentaryStateDto> execute() {
    CommentaryStateDtoMapper commentaryStateDtoMapper = this.getMapper(CommentaryStateDtoMapper.class);
    return commentaryStateDtoMapper.selectAll();
}"
754,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/service/impl/UserServiceImpl.java,UserServiceImpl,getAllUser__(),"@Override
public List<UserDto> getAllUser() {
    return this.execute(new QryAllUserCmd());
}"
755,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/service/impl/UserServiceImpl.java,UserServiceImpl,getUserById__(Long userId),"@Override
public UserDto getUserById(Long userId) {
    return this.execute(new QryUserByIdCmd(userId));
}"
756,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/service/impl/UserServiceImpl.java,UserServiceImpl,addUser__(UserDto userDto),"@Override
public UserDto addUser(UserDto userDto) {
    return this.execute(new AddUserCmd(userDto));
}"
757,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/service/impl/UserServiceImpl.java,UserServiceImpl,updateUser__(UserDto userDto),"@Override
public UserDto updateUser(UserDto userDto) {
    return this.execute(new UpdateUserCmd(userDto));
}"
758,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/service/impl/UserServiceImpl.java,UserServiceImpl,deleteUser__(Long userId),"@Override
public int deleteUser(Long userId) {
    return this.execute(new DeleteUserCmd(userId));
}"
759,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/service/impl/UserServiceImpl.java,UserServiceImpl,getUserListByCond__(GetUserList4PagerByCondRequest req),"@Override
public List<UserDto> getUserListByCond(GetUserList4PagerByCondRequest req) {
    return this.execute(new GetUserListByCondCmd(req));
}"
760,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/SystemEngineConfig.java,SystemEngineConfig,systemEngineFactoryBean__(),"@Bean
public SystemEngineFactoryBean systemEngineFactoryBean() throws Exception {
    SystemEngineFactoryBean systemEngineFactoryBean = new SystemEngineFactoryBean();
    systemEngineFactoryBean.setSystemEngineConfig(systemEngineConfig());
    return systemEngineFactoryBean;
}"
761,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/SystemEngineConfig.java,SystemEngineConfig,systemEngineConfig__(),"@Bean(destroyMethod = ""destory"")
public com.littlefisher.core.engine.SystemEngineConfig systemEngineConfig() throws Exception {
    com.littlefisher.core.engine.SystemEngineConfig systemEngineConfig = new com.littlefisher.core.engine.SystemEngineConfig();
    systemEngineConfig.setDataSource(dataSource);
    systemEngineConfig.setDatabaseType(""mysql"");
    systemEngineConfig.setTransactionManager(transactionManager);
    systemEngineConfig.setSqlSessionFactory(sqlSessionFactory.getObject());
    return systemEngineConfig;
}"
762,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/GetAllUserStateCmd.java,GetAllUserStateCmd,execute__(),"@Override
public List<UserStateDto> execute() {
    UserStateDtoMapper userStateDtoMapper = this.getMapper(UserStateDtoMapper.class);
    return userStateDtoMapper.selectAll();
}"
763,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/GetSystemParamByIdCmd.java,GetSystemParamByIdCmd,GetSystemParamByIdCmd__(Long systemParamId),"public GetSystemParamByIdCmd(Long systemParamId) {
    super();
    this.systemParamId = systemParamId;
}"
764,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/GetSystemParamByIdCmd.java,GetSystemParamByIdCmd,execute__(),"@Override
public SystemParamDto execute() {
    SystemParamDtoMapper systemParamDtoMapper = this.getMapper(SystemParamDtoMapper.class);
    return systemParamDtoMapper.selectByPrimaryKey(systemParamId);
}"
765,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/GetCommentaryByIdCmd.java,GetCommentaryByIdCmd,GetCommentaryByIdCmd__(Long commentaryId),"public GetCommentaryByIdCmd(Long commentaryId) {
    super();
    this.commentaryId = commentaryId;
}"
766,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/GetCommentaryByIdCmd.java,GetCommentaryByIdCmd,execute__(),"@Override
public CommentaryDto execute() {
    CommentaryDtoMapper commentaryDtoMapper = this.getMapper(CommentaryDtoMapper.class);
    return commentaryDtoMapper.selectByPrimaryKey(commentaryId);
}"
767,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/commentary/controller/CommentaryStateController.java,CommentaryStateController,getAllCommentaryState__(),"@RequestMapping(method = RequestMethod.GET)
@ApiOperation(""查询所有评价类型"")
public List<CommentaryStateDto> getAllCommentaryState() {
    return commentaryStateService.getAllCommentaryState();
}"
768,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/commentary/controller/CommentaryStateController.java,CommentaryStateController,"addCommentaryState__(
            @ApiParam(required = true, value = ""评价类型实体"") @RequestBody CommentaryStateDto commentaryStateDto)","@RequestMapping(method = RequestMethod.POST)
@ApiOperation(""新增评价类型"")
public CommentaryStateDto addCommentaryState(
        @ApiParam(required = true, value = ""评价类型实体"") @RequestBody CommentaryStateDto commentaryStateDto) {
    return commentaryStateService.addCommentaryState(commentaryStateDto);
}"
769,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/commentary/controller/CommentaryStateController.java,CommentaryStateController,"updateCommentaryState__(
            @ApiParam(required = true, value = ""评价类型实体"") @RequestBody CommentaryStateDto commentaryStateDto)","@RequestMapping(method = RequestMethod.PATCH)
@ApiOperation(""修改评价类型"")
public CommentaryStateDto updateCommentaryState(
        @ApiParam(required = true, value = ""评价类型实体"") @RequestBody CommentaryStateDto commentaryStateDto) {
    return commentaryStateService.updateCommentaryState(commentaryStateDto);
}"
770,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/commentary/controller/CommentaryStateController.java,CommentaryStateController,"deleteCommentaryState__(
            @ApiParam(required = true, value = ""评价类型"") @PathVariable(""state"") String state)","@RequestMapping(value = ""/{state}"", method = RequestMethod.DELETE)
@ApiOperation(""删除评价类型"")
public int deleteCommentaryState(
        @ApiParam(required = true, value = ""评价类型"") @PathVariable(""state"") String state) {
    return commentaryStateService.deleteCommentaryState(state);
}"
771,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/test/java/com/littlefisher/blog/post/service/TestPostService.java,TestPostService,testGetPostList4PagerByCond__(),"@Test
public void testGetPostList4PagerByCond() {
    GetPostList4PagerByCondRequest request = new GetPostList4PagerByCondRequest();
    request.setPageNum(4);
    request.setPageSize(5);
    List<PostDto> postList = postService.getPostList4PagerByCond(request);
    logger.info(""postList: "" + postList);
}"
772,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/GetAllPostTypeCmd.java,GetAllPostTypeCmd,execute__(),"@Override
public List<PostTypeDto> execute() {
    PostTypeDtoMapper postTypeDtoMapper = this.getMapper(PostTypeDtoMapper.class);
    return postTypeDtoMapper.selectAll();
}"
773,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/db/cmd/QryDbDateTimeCmd.java,QryDbDateTimeCmd,execute__(),"@Override
public Date execute() throws BaseAppException {
    DbMapper dbMapper = this.getMapper(DbMapper.class);
    return dbMapper.getDBDateTime();
}"
774,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineImpl.java,SystemEngineImpl,getSystemEngineConfig__(),"public SystemEngineConfig getSystemEngineConfig() {
    return systemEngineConfig;
}"
775,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineImpl.java,SystemEngineImpl,setSystemEngineConfig__(SystemEngineConfig systemEngineConfig),"public void setSystemEngineConfig(SystemEngineConfig systemEngineConfig) {
    this.systemEngineConfig = systemEngineConfig;
}"
776,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineImpl.java,SystemEngineImpl,getCommandExecutor__(),"@Override
public CommandExecutor getCommandExecutor() {
    return commandExecutor;
}"
777,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineImpl.java,SystemEngineImpl,setCommandExecutor__(CommandExecutor commandExecutor),"public void setCommandExecutor(CommandExecutor commandExecutor) {
    this.commandExecutor = commandExecutor;
}"
778,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineImpl.java,SystemEngineImpl,setName__(String name),"public void setName(String name) {
    this.name = name;
}"
779,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineImpl.java,SystemEngineImpl,SystemEngineImpl__(SystemEngineConfig systemEngineConfig),"public SystemEngineImpl(SystemEngineConfig systemEngineConfig) {
    this.systemEngineConfig = systemEngineConfig;
    this.name = systemEngineConfig.getSystemEngineName();
    this.commandExecutor = systemEngineConfig.getCommandExecutor();
}"
780,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineImpl.java,SystemEngineImpl,getName__(),"@Override
public String getName() {
    return name;
}"
781,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineImpl.java,SystemEngineImpl,close__(),"@Override
public void close() {

}"
782,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineImpl.java,SystemEngineImpl,getService__(String serviceName),"@Override
public ServiceImpl getService(String serviceName) {
    return systemEngineConfig.getService(serviceName);
}"
783,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineImpl.java,SystemEngineImpl,"initService__(String serviceName, ServiceImpl registerService)","@Override
public void initService(String serviceName, ServiceImpl registerService) {
    systemEngineConfig.initService(serviceName, registerService);

}"
784,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/i18n/PropResource.java,PropResource,PropResource__(),"private PropResource() {
}"
785,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/i18n/PropResource.java,PropResource,init__(),"private static void init() {
    getResourceValueList(findFileNameSuffix());
}"
786,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/i18n/PropResource.java,PropResource,findFileNameSuffix__(),"private static List<File> findFileNameSuffix() {
    String littleFisherHome = initHomePath();
    String resourceDir = littleFisherHome + File.separator + I18nConstants.I18N_RESOURCE_PATH;
    List<File> allFileList = Lists.newArrayList();
    getAllFileName(resourceDir, allFileList);
    for (File file : allFileList) {
        String name = file.getName()
                .substring(0, file.getName().length() - I18nConstants.PROPERTIES_LENGTH);
        int index = name.lastIndexOf(""."");
        String local = name.substring(index + 1, name.length());
        resourceMap.put(local, Maps.newConcurrentMap());
    }
    return allFileList;
}"
787,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/i18n/PropResource.java,PropResource,"getAllFileName__(String path, List<File> list)","private static void getAllFileName(String path, List<File> list) {
    File dir = new File(path);
    File[] files = dir.listFiles();
    if (ArrayUtils.isEmpty(files)) {
        return;
    }
    if (files != null) {
        for (File file : files) {
            if (file.isDirectory()) {
                getAllFileName(file.getPath(), list);
            } else {
                if (file.getName().endsWith("".properties"")) {
                    list.add(file);
                }
            }
        }
    }
}"
788,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/i18n/PropResource.java,PropResource,initHomePath__(),"private static String initHomePath() {
    Properties p = System.getProperties();
    String littlefisherHome = p.getProperty(I18nConstants.SYSTEM_HOME);
    if (StringUtil.isNotEmpty(littlefisherHome)) {
        return littlefisherHome;
    } else {
        String os = System.getProperties().getProperty(""os.name"").toLowerCase();
        try {
            InputStream inStream;
            if (os.contains(WINDOWS)) {
                inStream = Runtime.getRuntime().exec(""cmd   /C   set"").getInputStream();
            } else if (os.contains(UNIX)) {
                inStream = Runtime.getRuntime().exec(""env"").getInputStream();
            } else {
                inStream = Runtime.getRuntime().exec(""env"").getInputStream();
            }
            BufferedReader br = new BufferedReader(
                    new InputStreamReader(inStream, Charsets.ISO_8859_1));
            String line;
            while ((line = br.readLine()) != null) {

                if (line.contains(I18nConstants.SYSTEM_HOME)) {
                    int idx = line.indexOf('=');
                    return line.substring(idx + 1).trim();
                }

            }
        } catch (IOException e) {
            logger.error(""env loader error"", e);
        }
    }

    return null;
}"
789,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/i18n/PropResource.java,PropResource,getResourceValueList__(List<File> allFileList),"private static void getResourceValueList(List<File> allFileList) {
    Set<String> keys = resourceMap.keySet();
    for (String key : keys) {
        Map<String, String> valueMap = Maps.newConcurrentMap();
        for (File file : allFileList) {
            if (file.getName().contains(""."" + key + ""."")) {
                readFile(file, valueMap);
            }
        }
        resourceMap.put(key, valueMap);
    }
}"
790,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/i18n/PropResource.java,PropResource,"readFile__(File file, Map<String, String> valueMap)","private static void readFile(File file, Map<String, String> valueMap) {
    try {
        List<String> lineList = Files.readLines(file, Charsets.UTF_8);
        for (String line : lineList) {
            int idx = line.indexOf('=');
            String key = line.substring(0, idx).trim();
            String value = line.substring(idx + 1).trim();
            valueMap.put(key, value);
        }
    } catch (IOException e) {
        logger.error(""IOException"", e);
    }
}"
791,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/i18n/PropResource.java,PropResource,"getValue__(String dialect, String key)","public static String getValue(String dialect, String key) {
    String value = resourceMap.get(dialect).get(key);
    if (!I18nConstants.DIALECT_EN.equals(dialect) && StringUtil.isBlank(value)) {
        return resourceMap.get(I18nConstants.DIALECT_EN).get(key);
    } else {
        return value;
    }
}"
792,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/service/impl/UserStateServiceImpl.java,UserStateServiceImpl,getAllUserState__(),"@Override
public List<UserStateDto> getAllUserState() {
    return this.execute(new GetAllUserStateCmd());
}"
793,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/service/impl/UserStateServiceImpl.java,UserStateServiceImpl,addUserState__(UserStateDto userStateDto),"@Override
public UserStateDto addUserState(UserStateDto userStateDto) {
    return this.execute(new AddUserStateCmd(userStateDto));
}"
794,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/service/impl/UserStateServiceImpl.java,UserStateServiceImpl,updateUserState__(UserStateDto userStateDto),"@Override
public UserStateDto updateUserState(UserStateDto userStateDto) {
    return this.execute(new UpdateUserStateCmd(userStateDto));
}"
795,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/service/impl/UserStateServiceImpl.java,UserStateServiceImpl,deleteUserState__(String state),"@Override
public int deleteUserState(String state) {
    return this.execute(new DeleteUserStateCmd(state));
}"
796,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/dao/SystemParamDtoMapper.java,SystemParamDtoMapper,deleteByParamKey__(String paramKey),int deleteByParamKey(String paramKey);
797,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/dao/SystemParamDtoMapper.java,SystemParamDtoMapper,selectByParamKey__(String paramKey),SystemParamDto selectByParamKey(String paramKey);
798,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/dao/SystemParamDtoMapper.java,SystemParamDtoMapper,selectByCond__(GetSystemParamList4PagerByCondRequest req),List<SystemParamDto> selectByCond(GetSystemParamList4PagerByCondRequest req);
799,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/dao/SystemParamDtoMapper.java,SystemParamDtoMapper,"selectByCond__(GetSystemParamList4PagerByCondRequest req, RowBounds rowBounds)","List<SystemParamDto> selectByCond(GetSystemParamList4PagerByCondRequest req, RowBounds rowBounds);"
800,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/MapperScannerConfigurerConfig.java,MapperScannerConfigurerConfig,mapperScannerConfigurer__(),"@Bean
public MapperScannerConfigurer mapperScannerConfigurer() {
    MapperScannerConfigurer mapperScannerConfigurer = new MapperScannerConfigurer();
    mapperScannerConfigurer.setBasePackage(""com.littlefisher.**.dao"");
    mapperScannerConfigurer.setSqlSessionFactoryBeanName(""sqlSessionFactory"");
    return mapperScannerConfigurer;
}"
801,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/GetPostByIdCmd.java,GetPostByIdCmd,GetPostByIdCmd__(Long postId),"public GetPostByIdCmd(Long postId) {
    super();
    this.postId = postId;
}"
802,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/GetPostByIdCmd.java,GetPostByIdCmd,execute__(),"@Override
public PostDto execute() {
    PostDtoMapper postDtoMapper = this.getMapper(PostDtoMapper.class);
    return postDtoMapper.selectByPrimaryKey(postId);
}"
803,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandInterceptor.java,CommandInterceptor,"execute__(CommandConfig config, Command<U> command)","<U> U execute(CommandConfig config, Command<U> command);"
804,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandInterceptor.java,CommandInterceptor,getNext__(),CommandInterceptor getNext();
805,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandInterceptor.java,CommandInterceptor,setNext__(CommandInterceptor next),void setNext(CommandInterceptor next);
806,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/dao/CommentaryDtoMapper.java,CommentaryDtoMapper,selectByCond__(GetCommentaryList4PagerByCondRequest req),List<CommentaryDto> selectByCond(GetCommentaryList4PagerByCondRequest req);
807,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineFactoryBean.java,SystemEngineFactoryBean,getSystemEngineConfig__(),"public SystemEngineConfig getSystemEngineConfig() {
    return systemEngineConfig;
}"
808,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineFactoryBean.java,SystemEngineFactoryBean,setSystemEngineConfig__(SystemEngineConfig systemEngineConfig),"public void setSystemEngineConfig(SystemEngineConfig systemEngineConfig) {
    this.systemEngineConfig = systemEngineConfig;
}"
809,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineFactoryBean.java,SystemEngineFactoryBean,getObjectType__(),"@Override
public Class<SystemEngine> getObjectType() {
    return SystemEngine.class;
}"
810,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineFactoryBean.java,SystemEngineFactoryBean,isSingleton__(),"@Override
public boolean isSingleton() {
    return true;
}"
811,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineFactoryBean.java,SystemEngineFactoryBean,getObject__(),"@Override
public SystemEngine getObject() {
    systemEngine = systemEngineConfig.buildSystemEngine();

    systemEngineConfig.initServices(registerServices);

    return systemEngine;
}"
812,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineFactoryBean.java,SystemEngineFactoryBean,getRegisterServices__(),"public Map<String, ServiceImpl> getRegisterServices() {
    return registerServices;
}"
813,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineFactoryBean.java,SystemEngineFactoryBean,"setRegisterServices__(Map<String, ServiceImpl> registerServices)","public void setRegisterServices(Map<String, ServiceImpl> registerServices) {
    this.registerServices = registerServices;
}"
814,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getDatabaseType__(),"public String getDatabaseType() {
    return databaseType;
}"
815,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,setDatabaseType__(String databaseType),"public void setDatabaseType(String databaseType) {
    this.databaseType = databaseType;
}"
816,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getSqlSessionFactory__(),"public SqlSessionFactory getSqlSessionFactory() {
    return sqlSessionFactory;
}"
817,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,setSqlSessionFactory__(SqlSessionFactory sqlSessionFactory),"public void setSqlSessionFactory(SqlSessionFactory sqlSessionFactory) {
    this.sqlSessionFactory = sqlSessionFactory;
}"
818,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getSystemEngineName__(),"public String getSystemEngineName() {
    return systemEngineName;
}"
819,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,setSystemEngineName__(String systemEngineName),"public void setSystemEngineName(String systemEngineName) {
    this.systemEngineName = systemEngineName;
}"
820,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getDataSource__(),"public DataSource getDataSource() {
    return dataSource;
}"
821,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,setDataSource__(DataSource dataSource),"public void setDataSource(DataSource dataSource) {
    this.dataSource = dataSource;
}"
822,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getTransactionManager__(),"public PlatformTransactionManager getTransactionManager() {
    return transactionManager;
}"
823,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,setTransactionManager__(PlatformTransactionManager transactionManager),"public void setTransactionManager(PlatformTransactionManager transactionManager) {
    this.transactionManager = transactionManager;
}"
824,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,buildSystemEngine__(),"public SystemEngine buildSystemEngine() {
    init();
    return new SystemEngineImpl(this);
}"
825,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,init__(),"protected void init() {
    logger.info(""SystemEngineConfig init"");
    // 初始化默认Command配置
    initDefaultCommandConfig();
    // 初始化Command上下文工厂
    initCommandContextFactory();
    // 初始化自定义的sqlSession工厂
    initDbSqlSessionFactory();
    // 初始化session工厂
    initSessionFactories();
    // 初始化命令调用工具
    initCommandInvoker();
    // 初始化命令的拦截器
    initCommandInterceptors();
    // 初始化命令的执行器
    initCommandExecutor();
    // 初始化EventDispatcher，暂不具体关注
    initEventDispatcher();

}"
826,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,"initServices__(Map<String, ServiceImpl> registerServices)","public void initServices(Map<String, ServiceImpl> registerServices) {
    if (registerServices != null) {
        for (Entry<String, ServiceImpl> entry : registerServices.entrySet()) {
            ServiceImpl serv = entry.getValue();
            initService(serv);
            services.put(entry.getKey(), serv);
        }
    }

}"
827,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,"initService__(String serviceName, ServiceImpl registerService)","public void initService(String serviceName, ServiceImpl registerService) {
    if (registerService != null && StringUtil.isNotEmpty(serviceName)) {
        initService(registerService);
        // 对ServiceImpl进行缓存
        services.put(serviceName, registerService);
    }

}"
828,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,initService__(Object service),"protected void initService(Object service) {
    // 每一个ServiceImpl准备执行时，赋值commandExecutor，让ServiceImpl有开始执行的地方
    if (service instanceof ServiceImpl) {
        ((ServiceImpl) service).setCommandExecutor(commandExecutor);
    }
}"
829,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,initDefaultCommandConfig__(),"protected void initDefaultCommandConfig() {
    if (defaultCommandConfig == null) {
        defaultCommandConfig = new CommandConfig();
    }
}"
830,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,initDbSqlSessionFactory__(),"protected void initDbSqlSessionFactory() {
    if (dbSqlSessionFactory == null) {
        dbSqlSessionFactory = new DbSqlSessionFactory(sqlSessionFactory);
    }

}"
831,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,initSessionFactories__(),"protected void initSessionFactories() {
    if (sessionFactories == null) {
        sessionFactories = Maps.newHashMap();
        // 由于dbSqlSessionFactory在此次步骤之前进行了初始化，所以把dbSqlSessionFactory添加到sessionFactories中，用于缓存
        addSessionFactory(dbSqlSessionFactory);
    }
}"
832,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,addSessionFactory__(SessionFactory sessionFactory),"protected void addSessionFactory(SessionFactory sessionFactory) {
    sessionFactories.put(sessionFactory.getSessionType(), sessionFactory);
}"
833,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,initCommandContextFactory__(),"protected void initCommandContextFactory() {
    if (commandContextFactory == null) {
        commandContextFactory = new CommandContextFactory();
        commandContextFactory.setSystemEngineConfig(this);
    }
}"
834,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,initCommandInvoker__(),"protected void initCommandInvoker() {
    if (commandInvoker == null) {
        // CommandInvoker继承自AbstractCommandInterceptor，也是拦截器的一种
        commandInvoker = new CommandInvoker();
    }
}"
835,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,initCommandInterceptors__(),"protected void initCommandInterceptors() {
    if (commandInterceptors == null) {
        commandInterceptors = Lists.newArrayList();
        // 自定义的前置拦截器
        if (customPreCommandInterceptors != null) {
            commandInterceptors.addAll(customPreCommandInterceptors);
        }
        commandInterceptors.addAll(getDefaultCommandInterceptors());
        // 自定义的后置拦截器
        if (customPostCommandInterceptors != null) {
            commandInterceptors.addAll(customPostCommandInterceptors);
        }
        // 命令调用工具也属于拦截器
        commandInterceptors.add(commandInvoker);

        // 当前commandInterceptors顺序为：
        // CommandContextInterceptor 1. 渲染容器上下文环境
        // SpringTransactionInterceptor 2. 为下步操作添加事务环绕
        // CommandInvoker 3. 执行具体的业务命令，该拦截器必须为最后一个，后续不可再增加其他拦截器
    }
}"
836,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,initEventDispatcher__(),"private void initEventDispatcher() {
    if (this.eventDispatcher == null) {
        this.eventDispatcher = new EventDispatcherImpl();
    }

    this.eventDispatcher.setEnabled(enableEventDispatcher);

    if (eventListeners != null) {
        for (EventListener listenerToAdd : eventListeners) {
            this.eventDispatcher.addEventListener(listenerToAdd);
        }
    }

    if (typedEventListeners != null) {
        for (Entry<String, List<EventListener>> listenersToAdd : typedEventListeners
                .entrySet()) {
            // Extract types from the given string
            String[] types = getEventTypeListFromString(listenersToAdd.getKey());

            for (EventListener listenerToAdd : listenersToAdd.getValue()) {
                this.eventDispatcher.addEventListener(listenerToAdd, types);
            }
        }
    }
}"
837,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getEventTypeListFromString__(String types),"private String[] getEventTypeListFromString(String types) {
    String[] emptyArray = new String[] {};
    if (types == null || types.isEmpty()) {
        return emptyArray;
    }
    return Iterables.toArray(Splitter.on(',').omitEmptyStrings().split(types), String.class);
}"
838,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getDefaultCommandInterceptors__(),"protected Collection<? extends CommandInterceptor> getDefaultCommandInterceptors() {
    List<CommandInterceptor> interceptors = Lists.newArrayList();
    interceptors.add(new CommandContextInterceptor(commandContextFactory, this));

    CommandInterceptor transactionInterceptor = createTransactionInterceptor();
    if (transactionInterceptor != null) {
        interceptors.add(transactionInterceptor);
    }
    CommandInterceptor ovalInterceptor = createOvalInterceptor();
    if (ovalInterceptor != null) {
        interceptors.add(ovalInterceptor);
    }
    CommandInterceptor loggerInterceptor = createLoggerInterceptor();
    if (loggerInterceptor != null) {
        interceptors.add(loggerInterceptor);
    }

    return interceptors;
}"
839,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,createTransactionInterceptor__(),"protected CommandInterceptor createTransactionInterceptor() {
    if (transactionManager == null) {
        //transactionManager is required property for SpringProcessEngineConfiguration
        ExceptionHandler.publish(""CORE-000003"");
    }

    return new SpringTransactionInterceptor(transactionManager);
}"
840,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,createLoggerInterceptor__(),"protected CommandInterceptor createLoggerInterceptor() {
    return new LoggerInterceptor();
}"
841,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,createOvalInterceptor__(),"protected CommandInterceptor createOvalInterceptor() {
    return new OvalInterceptor();
}"
842,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,initCommandExecutor__(),"protected void initCommandExecutor() {
    if (commandExecutor == null) {
        // 初始化拦截器调用链，并返回第一个拦截器
        CommandInterceptor first = initInterceptorChain(commandInterceptors);
        // 执行器默认从第一个拦截器开始执行
        commandExecutor = new CommandExecutorImpl(getDefaultCommandConfig(), first);
    }
}"
843,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getCommandInvoker__(),"public CommandInterceptor getCommandInvoker() {
    return commandInvoker;
}"
844,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,setCommandInvoker__(CommandInterceptor commandInvoker),"public void setCommandInvoker(CommandInterceptor commandInvoker) {
    this.commandInvoker = commandInvoker;
}"
845,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getCustomPreCommandInterceptors__(),"public List<CommandInterceptor> getCustomPreCommandInterceptors() {
    return customPreCommandInterceptors;
}"
846,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,"setCustomPreCommandInterceptors__(
            List<CommandInterceptor> customPreCommandInterceptors)","public void setCustomPreCommandInterceptors(
        List<CommandInterceptor> customPreCommandInterceptors) {
    this.customPreCommandInterceptors = customPreCommandInterceptors;
}"
847,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getCustomPostCommandInterceptors__(),"public List<CommandInterceptor> getCustomPostCommandInterceptors() {
    return customPostCommandInterceptors;
}"
848,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,"setCustomPostCommandInterceptors__(
            List<CommandInterceptor> customPostCommandInterceptors)","public void setCustomPostCommandInterceptors(
        List<CommandInterceptor> customPostCommandInterceptors) {
    this.customPostCommandInterceptors = customPostCommandInterceptors;
}"
849,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getCommandInterceptors__(),"public List<CommandInterceptor> getCommandInterceptors() {
    return commandInterceptors;
}"
850,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,setCommandInterceptors__(List<CommandInterceptor> commandInterceptors),"public void setCommandInterceptors(List<CommandInterceptor> commandInterceptors) {
    this.commandInterceptors = commandInterceptors;
}"
851,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getCommandExecutor__(),"public CommandExecutor getCommandExecutor() {
    return commandExecutor;
}"
852,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,setCommandExecutor__(CommandExecutor commandExecutor),"public void setCommandExecutor(CommandExecutor commandExecutor) {
    this.commandExecutor = commandExecutor;
}"
853,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getDefaultCommandConfig__(),"public CommandConfig getDefaultCommandConfig() {
    return defaultCommandConfig;
}"
854,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,setDefaultCommandConfig__(CommandConfig defaultCommandConfig),"public void setDefaultCommandConfig(CommandConfig defaultCommandConfig) {
    this.defaultCommandConfig = defaultCommandConfig;
}"
855,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,initInterceptorChain__(List<CommandInterceptor> chain),"protected CommandInterceptor initInterceptorChain(List<CommandInterceptor> chain) {
    if (CollectionUtil.isEmpty(chain)) {
        ExceptionHandler.publish(""CORE-000004"");
    }
    for (int i = 0; i < chain.size() - 1; i++) {
        chain.get(i).setNext(chain.get(i + 1));
    }
    return chain.get(0);
}"
856,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getService__(String serviceName),"public ServiceImpl getService(String serviceName) {
    return services.get(serviceName);
}"
857,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getService__(Class<? extends ServiceImpl> clazzService),"@SuppressWarnings(""unchecked"")
public <T> T getService(Class<? extends ServiceImpl> clazzService) {
    return (T) clazzServices.get(clazzService);
}"
858,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,"putService__(String serviceName, ServiceImpl service)","public void putService(String serviceName, ServiceImpl service) {
    services.putIfAbsent(serviceName, service);
    clazzServices.putIfAbsent(service.getClass(), service);
}"
859,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,destory__(),"public void destory() {
    //
    //        logger.debug(""do systemEngineConfig destory"");
    //        try {
    //            ZcacheClient.getInstance().destory();
    //        }
    //        catch (BaseAppException e) {
    //            //
    //            logger.error(""systemEngineConfig destory error"", e);
    //        }

}"
860,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getSessionFactories__(),"public Map<Class<?>, SessionFactory> getSessionFactories() {
    return sessionFactories;
}"
861,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,"setSessionFactories__(Map<Class<?>, SessionFactory> sessionFactories)","public SystemEngineConfig setSessionFactories(Map<Class<?>, SessionFactory> sessionFactories) {
    this.sessionFactories = sessionFactories;
    return this;
}"
862,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,getEventDispatcher__(),"public EventDispatcher getEventDispatcher() {
    return eventDispatcher;
}"
863,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,setEventDispatcher__(EventDispatcher eventDispatcher),"public void setEventDispatcher(EventDispatcher eventDispatcher) {
    this.eventDispatcher = eventDispatcher;
}"
864,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,setEnableEventDispatcher__(boolean enableEventDispatcher),"public void setEnableEventDispatcher(boolean enableEventDispatcher) {
    this.enableEventDispatcher = enableEventDispatcher;
}"
865,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,"setTypedEventListeners__(Map<String, List<EventListener>> typedListeners)","public void setTypedEventListeners(Map<String, List<EventListener>> typedListeners) {
    this.typedEventListeners = typedListeners;
}"
866,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,setEventListeners__(List<EventListener> eventListeners),"public void setEventListeners(List<EventListener> eventListeners) {
    this.eventListeners = eventListeners;
}"
867,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SystemEngineConfig.java,SystemEngineConfig,isEnableEventDispatcher__(),"public boolean isEnableEventDispatcher() {
    return enableEventDispatcher;
}"
868,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/StringUtil.java,StringUtil,StringUtil__(),"private StringUtil() {
}"
869,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/DeletePostStateCmd.java,DeletePostStateCmd,DeletePostStateCmd__(String state),"public DeletePostStateCmd(String state) {
    super();
    this.state = state;
}"
870,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/DeletePostStateCmd.java,DeletePostStateCmd,execute__(),"@Override
public Integer execute() {
    PostStateDtoMapper postStateDtoMapper = this.getMapper(PostStateDtoMapper.class);
    return postStateDtoMapper.deleteByPrimaryKey(state);
}"
871,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/AddPostStateCmd.java,AddPostStateCmd,AddPostStateCmd__(PostStateDto postStateDto),"public AddPostStateCmd(PostStateDto postStateDto) {
    super();
    this.postStateDto = postStateDto;
}"
872,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/AddPostStateCmd.java,AddPostStateCmd,execute__(),"@Override
public PostStateDto execute() {
    PostStateDtoMapper postStateDtoMapper = this.getMapper(PostStateDtoMapper.class);
    postStateDtoMapper.insert(postStateDto);
    return postStateDto;
}"
873,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessExpression.java,IProcessExpression,"getResult__(Map<String, Object> variables)","boolean getResult(Map<String, Object> variables);"
874,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/DeletePostByIdCmd.java,DeletePostByIdCmd,DeletePostByIdCmd__(Long postId),"public DeletePostByIdCmd(Long postId) {
    super();
    this.postId = postId;
}"
875,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/DeletePostByIdCmd.java,DeletePostByIdCmd,execute__(),"@Override
public Integer execute() {
    PostDtoMapper postDtoMapper = this.getMapper(PostDtoMapper.class);
    return postDtoMapper.deleteByPrimaryKey(postId);
}"
876,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/UpdateSystemParamCmd.java,UpdateSystemParamCmd,UpdateSystemParamCmd__(SystemParamDto systemParamDto),"public UpdateSystemParamCmd(SystemParamDto systemParamDto) {
    super();
    this.systemParamDto = systemParamDto;
}"
877,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/UpdateSystemParamCmd.java,UpdateSystemParamCmd,execute__(),"@Override
public SystemParamDto execute() {
    SystemParamDtoMapper systemParamDtoMapper = this.getMapper(SystemParamDtoMapper.class);
    systemParamDtoMapper.updateByPrimaryKey(systemParamDto);
    return systemParamDto;
}"
878,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/service/impl/CommentaryStateServiceImpl.java,CommentaryStateServiceImpl,getAllCommentaryState__(),"@Override
public List<CommentaryStateDto> getAllCommentaryState() {
    return this.execute(new GetAllCommentaryStateCmd());
}"
879,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/service/impl/CommentaryStateServiceImpl.java,CommentaryStateServiceImpl,addCommentaryState__(CommentaryStateDto commentaryStateDto),"@Override
public CommentaryStateDto addCommentaryState(CommentaryStateDto commentaryStateDto) {
    return this.execute(new AddCommentaryStateCmd(commentaryStateDto));
}"
880,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/service/impl/CommentaryStateServiceImpl.java,CommentaryStateServiceImpl,updateCommentaryState__(CommentaryStateDto commentaryStateDto),"@Override
public CommentaryStateDto updateCommentaryState(CommentaryStateDto commentaryStateDto) {
    return this.execute(new UpdateCommentaryStateCmd(commentaryStateDto));
}"
881,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/service/impl/CommentaryStateServiceImpl.java,CommentaryStateServiceImpl,deleteCommentaryState__(String state),"@Override
public int deleteCommentaryState(String state) {
    return this.execute(new DeleteCommentaryStateCmd(state));
}"
882,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserStateDto.java,UserStateDto,getState__(),"public String getState() {
    return state;
}"
883,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserStateDto.java,UserStateDto,setState__(String state),"public void setState(String state) {
    this.state = state;
}"
884,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserStateDto.java,UserStateDto,getStateName__(),"public String getStateName() {
    return stateName;
}"
885,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserStateDto.java,UserStateDto,setStateName__(String stateName),"public void setStateName(String stateName) {
    this.stateName = stateName;
}"
886,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserStateDto.java,UserStateDto,getComments__(),"public String getComments() {
    return comments;
}"
887,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserStateDto.java,UserStateDto,setComments__(String comments),"public void setComments(String comments) {
    this.comments = comments;
}"
888,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/UserStateDto.java,UserStateDto,toString__(),"@Override
public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(getClass().getSimpleName());
    sb.append("" ["");
    sb.append(""Hash = "").append(hashCode());
    sb.append("", state="").append(state);
    sb.append("", stateName="").append(stateName);
    sb.append("", comments="").append(comments);
    sb.append("", serialVersionUID="").append(serialVersionUID);
    sb.append(""]"");
    return sb.toString();
}"
889,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,dispatcherOrder__(Long workOrderId),"@Override
public void dispatcherOrder(Long workOrderId) {
    logger.debug(""workOrderId: "" + workOrderId);
    TaskService taskService = processEngine.getTaskService();
    
    Task task = getTaskByWorkOrderId(workOrderId);
    
    // 执行SetProcessDefinitionVersionCmd命令有风险
    changeProcessVersion2Lastest(task);
    
    if (task != null) {
        taskService.complete(task.getId());
    }
}"
890,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,changeProcessVersion2Lastest__(Task task),"private void changeProcessVersion2Lastest(Task task) {
    // 查询当前task对应流程定义
    ProcessDefinition currentProcessDefinition = processEngine.getRepositoryService().createProcessDefinitionQuery()
        .processDefinitionId(task.getProcessDefinitionId()).singleResult();
    // 当前流程定义的版本
    int currentVersion = currentProcessDefinition.getVersion();
    // 查询该流程定义的最新版本
    int lastestVersion = processEngine.getRepositoryService().createProcessDefinitionQuery()
        .processDefinitionKey(currentProcessDefinition.getKey()).latestVersion().singleResult().getVersion();
    
    // 如果当前流程未使用最新版本的流程定义，则切换为最新版本
    if (currentVersion < lastestVersion) {
        ProcessEngineConfigurationImpl processEngineConfigurationImpl = (ProcessEngineConfigurationImpl) processEngine
        .getProcessEngineConfiguration();
        CommandExecutor commandExecutor = processEngineConfigurationImpl.getCommandExecutor();
        // 该SetProcessDefinitionVersionCmd有一些不可使用的情况，暂时不知道具体有哪些
        commandExecutor
            .execute(new SetProcessDefinitionVersionCmd(task.getProcessInstanceId(), lastestVersion));
    }
}"
891,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,getTaskByWorkOrderId__(Long workOrderId),"private Task getTaskByWorkOrderId(Long workOrderId) {
    return processEngine.getTaskService().createTaskQuery()
        .processVariableValueEquals(ActivitiDef.WORK_ORDER_ID, workOrderId).singleResult();
}"
892,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,getInstanceVariables__(Long workOrderId),"@Override
public Map<String, Object> getInstanceVariables(Long workOrderId) {
    Task task = getTaskByWorkOrderId(workOrderId);
    return processEngine.getRuntimeService().getVariables(task.getProcessInstanceId());
}"
893,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,"putInstanceVariables__(Long workOrderId, Map<String, Object> variables)","@Override
public void putInstanceVariables(Long workOrderId, Map<String, Object> variables) {
    Task task = getTaskByWorkOrderId(workOrderId);
    processEngine.getRuntimeService().setVariables(task.getProcessInstanceId(), variables);
    
}"
894,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,"putInstanceVariable__(Long workOrderId, String variableName, Object variableValue)","@Override
public void putInstanceVariable(Long workOrderId, String variableName, Object variableValue) {
    Task task = getTaskByWorkOrderId(workOrderId);
    processEngine.getRuntimeService().setVariable(task.getProcessInstanceId(), variableName, variableValue);
    
}"
895,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,endProcess__(Long workOrderId),"@Override
public void endProcess(Long workOrderId) throws BaseAppException {
    Task task = getTaskByWorkOrderId(workOrderId);
    if (task == null) {
        return;
    }

    ActivityImpl endActivity = findActivitiImpl(task.getId(), ActivitiDef.END_NODE);
    commitProcess(task.getId(), null, endActivity.getId());
}"
896,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,"direct2Activity__(Long workOrderId, String activityId)","@Override
public void direct2Activity(Long workOrderId, String activityId) throws BaseAppException {
    Task task = getTaskByWorkOrderId(workOrderId);
    if (task == null) {
        return;
    }
    
    logger.info(""activityId: "" + activityId);
    ActivityImpl activity = findActivitiImpl(task.getId(), activityId);
    logger.info(""activity: "" + activity);
    commitProcess(task.getId(), null, activity.getId());
    
}"
897,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,getAllTaskActiviti__(Long workOrderId),"@Override
public List<ActivitiStepDto> getAllTaskActiviti(Long workOrderId) throws BaseAppException {
    Task task = getTaskByWorkOrderId(workOrderId);
    if (task == null) {
        return null;
    }
    
    List<ActivitiStepDto> stepList = new ArrayList<>();
    
    ProcessDefinitionEntity processDefinition = findProcessDefinitionEntityByTaskId(task.getId());
    for (ActivityImpl activity : processDefinition.getActivities()) {
        ActivitiStepDto step = new ActivitiStepDto();
        if (ActivitiDef.USER_NODE.equals(activity.getProperty(ActivitiDef.PROPERTY_TYPE))) {
            String name = (String) activity.getProperty(ActivitiDef.PROPERTY_NAME);
            String orderState = name.split("","")[0];
            Long orderNbr = Long.valueOf(name.split("","")[1]);
            String taskName = name.split("","")[2];
            step.setOrderState(orderState);
            step.setTaskName(taskName);
            step.setOrderNbr(orderNbr);
            step.setTaskType(ActivitiDef.USER_NODE);
            stepList.add(step);
        }
        
    }
    
    Collections.sort(stepList);
    return stepList;
    
}"
898,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,"commitProcess__(String taskId, Map<String, Object> variables, String activityId)","private void commitProcess(String taskId, Map<String, Object> variables, String activityId) throws BaseAppException {  
    if (variables == null) {
        // 默认初始化16长度variables
        variables = Maps.newHashMapWithExpectedSize(16);
    }  
    // 跳转节点为空，默认提交操作  
    if (StringUtil.isEmpty(activityId)) {
        processEngine.getTaskService().complete(taskId, variables);  
    } 
    else { // 流程转向操作  
        turnTransition(taskId, activityId, variables);  
    }  
}"
899,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,"turnTransition__(String taskId, String activityId, Map<String, Object> variables)","private void turnTransition(String taskId, String activityId, Map<String, Object> variables) throws BaseAppException {  
    // 当前节点  
    ActivityImpl currActivity = findActivitiImpl(taskId, null);  
    // 清空当前流向  
    List<PvmTransition> oriPvmTransitionList = clearTransition(currActivity);  

    // 创建新流向  
    TransitionImpl newTransition = currActivity.createOutgoingTransition();  
    // 目标节点  
    ActivityImpl pointActivity = findActivitiImpl(taskId, activityId);  
    // 设置新流向的目标节点  
    newTransition.setDestination(pointActivity);  

    // 执行转向任务  
    processEngine.getTaskService().complete(taskId, variables);  
    // 删除目标节点新流入  
    pointActivity.getIncomingTransitions().remove(newTransition);  

    // 还原以前流向  
    restoreTransition(currActivity, oriPvmTransitionList);  
}"
900,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,"restoreTransition__(ActivityImpl activityImpl, List<PvmTransition> oriPvmTransitionList)","private void restoreTransition(ActivityImpl activityImpl, List<PvmTransition> oriPvmTransitionList) {  
    // 清空现有流向  
    List<PvmTransition> pvmTransitionList = activityImpl  
            .getOutgoingTransitions();  
    pvmTransitionList.clear();  
    // 还原以前流向  
    pvmTransitionList.addAll(oriPvmTransitionList);
}"
901,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,clearTransition__(ActivityImpl activityImpl),"private List<PvmTransition> clearTransition(ActivityImpl activityImpl) {  
    // 存储当前节点所有流向临时变量  
    List<PvmTransition> oriPvmTransitionList = new ArrayList<PvmTransition>();  
    // 获取当前节点所有流向，存储到临时变量，然后清空  
    List<PvmTransition> pvmTransitionList = activityImpl  
            .getOutgoingTransitions();  
    for (PvmTransition pvmTransition : pvmTransitionList) {  
        oriPvmTransitionList.add(pvmTransition);  
    }  
    pvmTransitionList.clear();  

    return oriPvmTransitionList;  
}"
902,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,"findActivitiImpl__(String taskId, String activityId)","private ActivityImpl findActivitiImpl(String taskId, String activityId) throws BaseAppException {
    // 取得流程定义
    ProcessDefinitionEntity processDefinition = findProcessDefinitionEntityByTaskId(taskId);

    // 获取当前活动节点ID
    if (StringUtil.isEmpty(activityId)) {
        activityId = findTaskById(taskId).getTaskDefinitionKey();
    }

    // 根据流程定义，获取该流程实例的结束节点
    if (ActivitiDef.END_NODE.equalsIgnoreCase(activityId)) {
        for (ActivityImpl activityImpl : processDefinition.getActivities()) {
            List<PvmTransition> pvmTransitionList = activityImpl.getOutgoingTransitions();
            if (pvmTransitionList.isEmpty()) {
                return activityImpl;
            }
        }
    }
    
    // 根据节点ID，获取对应的活动节点
    ActivityImpl activityImpl = ((ProcessDefinitionImpl) processDefinition).findActivity(activityId);
    
    if (activityImpl == null) {
        activityImpl = this.findActivityByName(processDefinition, activityId);
    }

    return activityImpl;
}"
903,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,"findActivityByName__(ProcessDefinitionEntity processDefinition, String activityId)","private ActivityImpl findActivityByName(ProcessDefinitionEntity processDefinition, String activityId) {
    List<ActivityImpl> activities = ((ProcessDefinitionImpl) processDefinition).getActivities();
    for (ActivityImpl activityImpl : activities) {
        String name = (String) activityImpl.getProperty(ActivitiDef.PROPERTY_NAME);
        String orderState = name.split("","")[0];
        if (activityId.equals(orderState)) {
            return activityImpl;
        }
    }
    return null;
}"
904,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,findProcessDefinitionEntityByTaskId__(String taskId),"private ProcessDefinitionEntity findProcessDefinitionEntityByTaskId(String taskId) throws BaseAppException {
    RepositoryService repositoryService = processEngine.getRepositoryService();
    // 取得流程定义
    ProcessDefinitionEntity processDefinition = (ProcessDefinitionEntity) ((RepositoryServiceImpl) repositoryService)
        .getDeployedProcessDefinition(findTaskById(taskId).getProcessDefinitionId());

    if (processDefinition == null) {
        throw new BaseAppException("""", ""流程定义未找到!"");
    }

    return processDefinition;
}"
905,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/impl/ProcessTaskImpl.java,ProcessTaskImpl,findTaskById__(String taskId),"private TaskEntity findTaskById(String taskId) throws BaseAppException {  
    TaskEntity task = (TaskEntity) processEngine.getTaskService().createTaskQuery().taskId(
            taskId).singleResult();  
    if (task == null) {  
        throw new BaseAppException("""", ""任务实例未找到!"");  
    }  
    return task;  
}"
906,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/post/controller/PostTypeController.java,PostTypeController,getAllPostType__(),"@RequestMapping(method = RequestMethod.GET)
@ApiOperation(""查询所有博文类型"")
public List<PostTypeDto> getAllPostType() {
    return postTypeService.getAllPostType();
}"
907,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/post/controller/PostTypeController.java,PostTypeController,"addPostType__(
            @ApiParam(required = true, value = ""博文类型实体"") @RequestBody PostTypeDto postTypeDto)","@RequestMapping(method = RequestMethod.POST)
@ApiOperation(""新增博文类型"")
public PostTypeDto addPostType(
        @ApiParam(required = true, value = ""博文类型实体"") @RequestBody PostTypeDto postTypeDto) {
    return postTypeService.addPostType(postTypeDto);
}"
908,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/post/controller/PostTypeController.java,PostTypeController,"updatePostType__(
            @ApiParam(required = true, value = ""博文类型实体"") @RequestBody PostTypeDto postTypeDto)","@RequestMapping(method = RequestMethod.PATCH)
@ApiOperation(""修改博文类型"")
public PostTypeDto updatePostType(
        @ApiParam(required = true, value = ""博文类型实体"") @RequestBody PostTypeDto postTypeDto) {
    return postTypeService.updatePostType(postTypeDto);
}"
909,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/post/controller/PostTypeController.java,PostTypeController,"deletePostType__(
            @ApiParam(required = true, value = ""博文类型"") @PathVariable(""type"") String type)","@RequestMapping(value = ""/{type}"", method = RequestMethod.DELETE)
@ApiOperation(""删除博文类型"")
public int deletePostType(
        @ApiParam(required = true, value = ""博文类型"") @PathVariable(""type"") String type) {
    return postTypeService.deletePostType(type);
}"
910,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/UpdateUserCmd.java,UpdateUserCmd,UpdateUserCmd__(UserDto userDto),"public UpdateUserCmd(UserDto userDto) {
    super();
    this.userDto = userDto;
}"
911,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/UpdateUserCmd.java,UpdateUserCmd,execute__(),"@Override
public UserDto execute() {
    UserDtoMapper userDtoMapper = this.getMapper(UserDtoMapper.class);
    userDtoMapper.updateByPrimaryKey(userDto);
    return userDto;
}"
912,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/test/java/com/littlefisher/blog/system/service/TestSystemParamService.java,TestSystemParamService,testGetSystemParamList4PagerByCond__(),"@Test
public void testGetSystemParamList4PagerByCond() throws BaseAppException {
    GetSystemParamList4PagerByCondRequest request = new GetSystemParamList4PagerByCondRequest();
    request.setPageNum(3);
    request.setPageSize(5);
    List<SystemParamDto> systemParamList = systemParamService.getSystemParamList4PagerByCond(request);
    logger.info(""systemParamList: "" + systemParamList);
}"
913,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/service/impl/SystemParamServiceImpl.java,SystemParamServiceImpl,"getSystemParamList4PagerByCond__(
            GetSystemParamList4PagerByCondRequest req)","@Override
public List<SystemParamDto> getSystemParamList4PagerByCond(
        GetSystemParamList4PagerByCondRequest req) {
    return this.execute(new GetSystemParamList4PagerByCondCmd(req));
}"
914,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/service/impl/SystemParamServiceImpl.java,SystemParamServiceImpl,getSystemParamByKey__(String paramKey),"@Override
public SystemParamDto getSystemParamByKey(String paramKey) {
    return this.execute(new GetSystemParamByKeyCmd(paramKey));
}"
915,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/service/impl/SystemParamServiceImpl.java,SystemParamServiceImpl,getSystemParamById__(Long systemParamId),"@Override
public SystemParamDto getSystemParamById(Long systemParamId) {
    return this.execute(new GetSystemParamByIdCmd(systemParamId));
}"
916,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/service/impl/SystemParamServiceImpl.java,SystemParamServiceImpl,addSystemParam__(SystemParamDto systemParamDto),"@Override
public SystemParamDto addSystemParam(SystemParamDto systemParamDto) {
    return this.execute(new AddSystemParamCmd(systemParamDto));
}"
917,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/service/impl/SystemParamServiceImpl.java,SystemParamServiceImpl,deleteSystemParamByKey__(String paramKey),"@Override
public int deleteSystemParamByKey(String paramKey) {
    return this.execute(new DeleteSystemParamByKeyCmd(paramKey));
}"
918,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/service/impl/SystemParamServiceImpl.java,SystemParamServiceImpl,deleteSystemParamById__(Long systemParamId),"@Override
public int deleteSystemParamById(Long systemParamId) {
    return this.execute(new DeleteSystemParamByIdCmd(systemParamId));
}"
919,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/service/impl/SystemParamServiceImpl.java,SystemParamServiceImpl,updateSystemParam__(SystemParamDto systemParamDto),"@Override
public SystemParamDto updateSystemParam(SystemParamDto systemParamDto) {
    return this.execute(new UpdateSystemParamCmd(systemParamDto));
}"
920,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandInvoker.java,CommandInvoker,"execute__(CommandConfig config, Command<U> command)","@Override
public <U> U execute(CommandConfig config, Command<U> command) {
    // Context.getCommandContext()是为了能让业务的command中，调用工具方法
    // 例如commandContext.getSystemEngineConfig().getService()获取其他Service
    // 例如commandContext.getDbSqlSession().getMapper()获取Mapper
    return command.execute(Context.getCommandContext());
}"
921,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandInvoker.java,CommandInvoker,getNext__(),"@Override
public CommandInterceptor getNext() {
    return null;
}"
922,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandInvoker.java,CommandInvoker,setNext__(CommandInterceptor next),"@Override
public void setNext(CommandInterceptor next) {
    throw new UnsupportedOperationException(
            ""CommandInvoker must be the last interceptor in the chain"");
}"
923,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/AddCommentaryStateCmd.java,AddCommentaryStateCmd,AddCommentaryStateCmd__(CommentaryStateDto commentaryStateDto),"public AddCommentaryStateCmd(CommentaryStateDto commentaryStateDto) {
    super();
    this.commentaryStateDto = commentaryStateDto;
}"
924,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/AddCommentaryStateCmd.java,AddCommentaryStateCmd,execute__(),"@Override
public CommentaryStateDto execute() {
    CommentaryStateDtoMapper commentaryStateDtoMapper = this.getMapper(CommentaryStateDtoMapper.class);
    commentaryStateDtoMapper.insert(commentaryStateDto);
    return commentaryStateDto;
}"
925,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/BaseAppException.java,BaseAppException,"BaseAppException__(String errorCode, String message, Throwable cause, String... args)","public BaseAppException(String errorCode, String message, Throwable cause, String... args) {
    super(message, cause);

    args = Iterables.toArray(Iterables.filter(Lists.newArrayList(args), StringUtil::isNotBlank), String.class);

    this.code = errorCode;

    this.localMessage = StringUtil.isNotBlank(code) ?
            new PropertiesFileTextProvider().getText(code) :
            StringUtil.EMPTY;

    this.localMessage = StringUtil.isNotEmpty(this.localMessage) ? this.localMessage : message;

    if (ArrayUtils.isNotEmpty(args)) {
        this.localMessage = this.replaceArgs(localMessage, args);
    }
}"
926,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/BaseAppException.java,BaseAppException,BaseAppException__(String errorCode),"public BaseAppException(String errorCode) {
    this(errorCode, null, null);
}"
927,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/BaseAppException.java,BaseAppException,"BaseAppException__(String errorCode, String message)","public BaseAppException(String errorCode, String message) {
    this(errorCode, message, null);
}"
928,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/BaseAppException.java,BaseAppException,"BaseAppException__(String errorCode, Exception ex)","public BaseAppException(String errorCode, Exception ex) {
    this(errorCode, null, ex);
}"
929,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/BaseAppException.java,BaseAppException,"replaceArgs__(String message, String[] args)","private String replaceArgs(String message, String[] args) {
    int i = 0;
    if (StringUtil.isNotBlank(message) && ArrayUtils.isNotEmpty(args)) {
        StringBuilder sb = new StringBuilder();
        Matcher matcher = Pattern.compile(PLACEHOLDER_PATTERN).matcher(message);
        while (matcher.find()) {
            message = message.replaceFirst(PLACEHOLDER_PATTERN, args[i++]);
        }
        sb.append(message);
        return sb.toString();
    }

    return StringUtil.EMPTY;
}"
930,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/BaseAppException.java,BaseAppException,getCode__(),"public String getCode() {
    return code;
}"
931,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/exception/BaseAppException.java,BaseAppException,getLocalMessage__(),"public String getLocalMessage() {
    return localMessage;
}"
932,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventSupport.java,EventSupport,EventSupport__(),"public EventSupport() {
    eventListeners = Lists.newArrayList();
    typedListeners = Maps.newHashMap();
}"
933,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventSupport.java,EventSupport,addEventListener__(EventListener listenerToAdd),"public synchronized void addEventListener(EventListener listenerToAdd) {
    if (listenerToAdd == null) {
        throw new IllegalArgumentException(""Listener cannot be null."");
    }
    if (!eventListeners.contains(listenerToAdd)) {
        eventListeners.add(listenerToAdd);
    }
}"
934,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventSupport.java,EventSupport,"addEventListener__(EventListener listenerToAdd, String... types)","public synchronized void addEventListener(EventListener listenerToAdd, String... types) {
    if (listenerToAdd == null) {
        throw new IllegalArgumentException(""Listener cannot be null."");
    }

    if (ArrayUtils.isEmpty(types)) {
        addEventListener(listenerToAdd);

    } else {
        for (String type : types) {
            addTypedEventListener(listenerToAdd, type);
        }
    }
}"
935,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventSupport.java,EventSupport,removeEventListener__(EventListener listenerToRemove),"public void removeEventListener(EventListener listenerToRemove) {
    eventListeners.remove(listenerToRemove);

    for (List<EventListener> listeners : typedListeners.values()) {
        listeners.remove(listenerToRemove);
    }
}"
936,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventSupport.java,EventSupport,dispatchEvent__(Event event),"public void dispatchEvent(Event event) throws BaseAppException {
    if (event == null) {
        throw new IllegalArgumentException(""Event cannot be null."");
    }

    if (event.getType() == null) {
        throw new IllegalArgumentException(""Event type cannot be null."");
    }

    // Call global listeners
    if (eventListeners != null && !eventListeners.isEmpty()) {
        for (EventListener listener : eventListeners) {
            dispatchEvent(event, listener);
        }
    }

    // Call typed listeners, if any
    List<EventListener> typed = typedListeners.get(event.getType());
    if (CollectionUtil.isNotEmpty(typed)) {
        for (EventListener listener : typed) {
            dispatchEvent(event, listener);
        }
    }
}"
937,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventSupport.java,EventSupport,"dispatchEvent__(Event event, EventListener listener)","protected void dispatchEvent(Event event, EventListener listener) throws BaseAppException {
    try {
        listener.onEvent(event);
    } catch (Exception ex) {
        if (listener.isFailOnException()) {
            logger.error(ex.getMessage());
            throw new BaseAppException(""S-SYSTEMCOM-004"", ex);
        } else {
            // Ignore the exception and continue notifying remaining listeners. The
            // listener
            // explicitly states that the exception should not bubble up
            logger.warn(""Exception while executing event-listener, which was ignored"", ex);
        }
    }
}"
938,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventSupport.java,EventSupport,"addTypedEventListener__(EventListener listener, String type)","protected synchronized void addTypedEventListener(EventListener listener, String type) {
    List<EventListener> listeners = typedListeners.computeIfAbsent(type, k -> Lists.newArrayList());
    // Add an empty list of listeners for this type

    if (!listeners.contains(listener)) {
        listeners.add(listener);
    }
}"
939,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/CollectionUtil.java,CollectionUtil,CollectionUtil__(),"private CollectionUtil() {

}"
940,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/CollectionUtil.java,CollectionUtil,isEmpty__(final Collection collection),"public static boolean isEmpty(final Collection collection) {
    return (collection == null || collection.isEmpty());
}"
941,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/CollectionUtil.java,CollectionUtil,isNotEmpty__(final Collection collection),"public static boolean isNotEmpty(final Collection collection) {
    return !isEmpty(collection);
}"
942,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/user/controller/UserController.java,UserController,"getUserList4PagerByCond__(
            @ApiParam(required = true, value = ""根据条件查询User入参，分页用"") @ModelAttribute GetUserList4PagerByCondRequest req)","@RequestMapping(value = ""/pager"", method = RequestMethod.GET)
@ApiOperation(value = ""根据条件查询User，分页用"")
public PageInfo<UserDto> getUserList4PagerByCond(
        @ApiParam(required = true, value = ""根据条件查询User入参，分页用"") @ModelAttribute GetUserList4PagerByCondRequest req) {
    List<UserDto> userList = userService.getUserListByCond(req);
    return new PageInfo<>(userList);
}"
943,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/user/controller/UserController.java,UserController,"getUserById__(
            @ApiParam(required = true, value = ""User主键"") @PathVariable(value = ""userId"") Long userId)","@RequestMapping(value = ""/{userId}"", method = RequestMethod.GET)
@ApiOperation(value = ""根据userId查询对应User"")
public UserDto getUserById(
        @ApiParam(required = true, value = ""User主键"") @PathVariable(value = ""userId"") Long userId) {
    return userService.getUserById(userId);
}"
944,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/user/controller/UserController.java,UserController,"addUser__(
            @ApiParam(required = true, value = ""User实体"") @RequestBody UserDto userDto)","@RequestMapping(method = RequestMethod.POST)
@ApiOperation(value = ""新增User"")
public UserDto addUser(
        @ApiParam(required = true, value = ""User实体"") @RequestBody UserDto userDto) {
    return userService.addUser(userDto);
}"
945,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/user/controller/UserController.java,UserController,"updateUser__(
            @ApiParam(required = true, value = ""User实体"") @RequestBody UserDto userDto)","@RequestMapping(method = RequestMethod.PATCH)
@ApiOperation(value = ""修改User"")
public UserDto updateUser(
        @ApiParam(required = true, value = ""User实体"") @RequestBody UserDto userDto) {
    return userService.updateUser(userDto);
}"
946,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-web/src/main/java/com/littlefisher/blog/user/controller/UserController.java,UserController,"deleteUser__(
            @ApiParam(required = true, value = ""User主键"") @PathVariable(""userId"") Long userId)","@RequestMapping(value = ""/{userId}"", method = RequestMethod.DELETE)
@ApiOperation(value = ""删除User"")
public int deleteUser(
        @ApiParam(required = true, value = ""User主键"") @PathVariable(""userId"") Long userId) {
    return userService.deleteUser(userId);
}"
947,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/TransactionManagerConfig.java,TransactionManagerConfig,dataSourceTransactionManager__(),"@Bean
public DataSourceTransactionManager dataSourceTransactionManager() {
    return new DataSourceTransactionManager(dataSource);
}"
948,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/LoggerInterceptor.java,LoggerInterceptor,"execute__(CommandConfig config, Command<U> command)","@Override
public <U> U execute(CommandConfig config, Command<U> command) {
    Class<?> clazz = command.getClass();
    String parameters = this.getCommandParameters(command);
    String methodName = clazz.getSimpleName();
    LittleFisherLogger clazzLogger = LittleFisherLogger.getLogger(clazz);
    U result;
    try {
        clazzLogger.info(""--- starting {} --------------------------------------------------------"", methodName);
        if (StringUtil.isNotEmpty(parameters)) {
            clazzLogger.info(""Parameters:"" + parameters);
        }
        result = next.execute(config, command);
        if (result != null) {
            clazzLogger.debug(""return agrs:"" + result);
        }
        return result;
    } catch (Exception e) {
        clazzLogger.error(""inerror"", e);
        throw new BaseRuntimeException(""inerror"", e);
    } finally {
        clazzLogger.info(""--- {} finished --------------------------------------------------------"", methodName);
    }
}"
949,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/LoggerInterceptor.java,LoggerInterceptor,getCommandParameters__(Command<U> command),"private <U> String getCommandParameters(Command<U> command) {
    Class<?> clazz = command.getClass();
    Field[] fields = clazz.getDeclaredFields();
    if (fields.length == 0) {
        return null;
    }
    Map<Class<?>, Object> fieldMap = Maps.newHashMap();
    for (Field field : fields) {
        fieldMap.put(field.getType(), getFieldVariable(command, field));
    }

    return buildParameterStr(fieldMap, clazz);
}"
950,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/LoggerInterceptor.java,LoggerInterceptor,"buildParameterStr__(Map<Class<?>, Object> fieldMap, Class<?> clazz)","private String buildParameterStr(Map<Class<?>, Object> fieldMap, Class<?> clazz) {
    Constructor<?>[] constructors = clazz.getConstructors();
    // 构造函数有且只有一个，如果后续有变动，再修改
    Constructor<?> constructor = constructors[0];
    Class<?>[] parameterTypes = constructor.getParameterTypes();
    StringBuilder sb = new StringBuilder();

    sb.append("" ["");
    for (int i = 0; i < parameterTypes.length; i++) {
        Class<?> parameterType = parameterTypes[i];
        sb.append(i == 0 ? "" "" : "", "").append(parameterType.getName()).append(""="")
                .append(fieldMap.get(parameterType));
    }
    sb.append("" ]"");
    return sb.toString();
}"
951,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/LoggerInterceptor.java,LoggerInterceptor,"getFieldVariable__(Command<U> command, Field field)","@SuppressWarnings(""Duplicates"")
private <U> Object getFieldVariable(Command<U> command, Field field) {
    try {
        field.setAccessible(true);
        return field.get(command);
    } catch (IllegalArgumentException | IllegalAccessException e) {
        logger.error(""inerror"", e);
        throw new BaseRuntimeException(""inerror"", e);
    }
}"
952,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/DeletePostTypeCmd.java,DeletePostTypeCmd,DeletePostTypeCmd__(String type),"public DeletePostTypeCmd(String type) {
    super();
    this.type = type;
}"
953,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/DeletePostTypeCmd.java,DeletePostTypeCmd,execute__(),"@Override
public Integer execute() {
    PostTypeDtoMapper postTypeDtoMapper = this.getMapper(PostTypeDtoMapper.class);
    return postTypeDtoMapper.deleteByPrimaryKey(type);
}"
954,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventBuilder.java,EventBuilder,createGlobalEvent__(String type),"public static Event createGlobalEvent(String type) {
    return new EventImpl(type);
}"
955,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventBuilder.java,EventBuilder,"createEntityEvent__(String type, Object entity)","public static EntityEvent createEntityEvent(String type, Object entity) throws BaseAppException {
    return new EntityEventImpl(entity, type);
}"
956,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcher.java,EventDispatcher,addEventListener__(EventListener listenerToAdd),void addEventListener(EventListener listenerToAdd);
957,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcher.java,EventDispatcher,"addEventListener__(EventListener listenerToAdd, String... types)","void addEventListener(EventListener listenerToAdd, String... types);"
958,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcher.java,EventDispatcher,removeEventListener__(EventListener listenerToRemove),void removeEventListener(EventListener listenerToRemove);
959,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcher.java,EventDispatcher,dispatchEvent__(Event event),void dispatchEvent(Event event) throws BaseAppException;
960,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcher.java,EventDispatcher,"dispatchEntityEvent__(String type, Object entity)","void dispatchEntityEvent(String type, Object entity) throws BaseAppException;"
961,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcher.java,EventDispatcher,setEnabled__(boolean enabled),void setEnabled(boolean enabled);
962,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcher.java,EventDispatcher,isEnabled__(),boolean isEnabled();
963,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/consumer/MessageRecord.java,MessageRecord,"MessageRecord__(String topic, String key, String value)","public MessageRecord(String topic, String key, String value) {
    this.topic = topic;
    this.key = key;
    this.value = value;
}"
964,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/consumer/MessageRecord.java,MessageRecord,getTopic__(),"public String getTopic() {
    return topic;
}"
965,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/consumer/MessageRecord.java,MessageRecord,setTopic__(String topic),"public void setTopic(String topic) {
    this.topic = topic;
}"
966,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/consumer/MessageRecord.java,MessageRecord,getKey__(),"public String getKey() {
    return key;
}"
967,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/consumer/MessageRecord.java,MessageRecord,setKey__(String key),"public void setKey(String key) {
    this.key = key;
}"
968,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/consumer/MessageRecord.java,MessageRecord,getValue__(),"public String getValue() {
    return value;
}"
969,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/consumer/MessageRecord.java,MessageRecord,setValue__(String value),"public void setValue(String value) {
    this.value = value;
}"
970,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/kafka/consumer/MessageRecord.java,MessageRecord,toString__(),"@Override
public String toString() {
    return ""MessageRecord{"" + ""topic='"" + topic + '\'' + "", key='"" + key + '\'' + "", value='""
           + value + '\'' + '}';
}"
971,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/DeleteUserCmd.java,DeleteUserCmd,DeleteUserCmd__(Long userId),"public DeleteUserCmd(Long userId) {
    this.userId = userId;
}"
972,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/DeleteUserCmd.java,DeleteUserCmd,execute__(),"@Override
public Integer execute() {
    UserDtoMapper userDtoMapper = this.getMapper(UserDtoMapper.class);
    return userDtoMapper.deleteByPrimaryKey(userId);
}"
973,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/QryUserByIdCmd.java,QryUserByIdCmd,QryUserByIdCmd__(Long userId),"public QryUserByIdCmd(Long userId) {
    this.userId = userId;
}"
974,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/QryUserByIdCmd.java,QryUserByIdCmd,execute__(),"@Override
public UserDto execute() {
    UserDtoMapper userDtoMapper = this.getMapper(UserDtoMapper.class);
    return userDtoMapper.selectByPrimaryKey(userId);
}"
975,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessTask.java,IProcessTask,dispatcherOrder__(Long workOrderId),void dispatcherOrder(Long workOrderId);
976,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessTask.java,IProcessTask,getInstanceVariables__(Long workOrderId),"Map<String, Object> getInstanceVariables(Long workOrderId);"
977,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessTask.java,IProcessTask,"putInstanceVariables__(Long workOrderId, Map<String, Object> variables)","void putInstanceVariables(Long workOrderId, Map<String, Object> variables);"
978,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessTask.java,IProcessTask,"putInstanceVariable__(Long workOrderId, String variableName, Object variableValue)","void putInstanceVariable(Long workOrderId, String variableName, Object variableValue);"
979,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessTask.java,IProcessTask,endProcess__(Long workOrderId),void endProcess(Long workOrderId) throws BaseAppException;
980,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessTask.java,IProcessTask,"direct2Activity__(Long workOrderId, String activityId)","void direct2Activity(Long workOrderId, String activityId) throws BaseAppException;"
981,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessTask.java,IProcessTask,getAllTaskActiviti__(Long workOrderId),List<ActivitiStepDto> getAllTaskActiviti(Long workOrderId) throws BaseAppException;
982,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/request/GetSystemParamList4PagerByCondRequest.java,GetSystemParamList4PagerByCondRequest,getPageNum__(),"public int getPageNum() {
    return pageNum;
}"
983,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/request/GetSystemParamList4PagerByCondRequest.java,GetSystemParamList4PagerByCondRequest,setPageNum__(int pageNum),"public void setPageNum(int pageNum) {
    this.pageNum = pageNum;
}"
984,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/request/GetSystemParamList4PagerByCondRequest.java,GetSystemParamList4PagerByCondRequest,getPageSize__(),"public int getPageSize() {
    return pageSize;
}"
985,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/request/GetSystemParamList4PagerByCondRequest.java,GetSystemParamList4PagerByCondRequest,setPageSize__(int pageSize),"public void setPageSize(int pageSize) {
    this.pageSize = pageSize;
}"
986,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/request/GetSystemParamList4PagerByCondRequest.java,GetSystemParamList4PagerByCondRequest,getId__(),"public Long getId() {
    return id;
}"
987,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/request/GetSystemParamList4PagerByCondRequest.java,GetSystemParamList4PagerByCondRequest,setId__(Long id),"public void setId(Long id) {
    this.id = id;
}"
988,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/request/GetSystemParamList4PagerByCondRequest.java,GetSystemParamList4PagerByCondRequest,getParamKey__(),"public String getParamKey() {
    return paramKey;
}"
989,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/request/GetSystemParamList4PagerByCondRequest.java,GetSystemParamList4PagerByCondRequest,setParamKey__(String paramKey),"public void setParamKey(String paramKey) {
    this.paramKey = paramKey;
}"
990,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/request/GetSystemParamList4PagerByCondRequest.java,GetSystemParamList4PagerByCondRequest,getParamValue__(),"public String getParamValue() {
    return paramValue;
}"
991,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/request/GetSystemParamList4PagerByCondRequest.java,GetSystemParamList4PagerByCondRequest,setParamValue__(String paramValue),"public void setParamValue(String paramValue) {
    this.paramValue = paramValue;
}"
992,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/request/GetSystemParamList4PagerByCondRequest.java,GetSystemParamList4PagerByCondRequest,getDefaultValue__(),"public String getDefaultValue() {
    return defaultValue;
}"
993,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/request/GetSystemParamList4PagerByCondRequest.java,GetSystemParamList4PagerByCondRequest,setDefaultValue__(String defaultValue),"public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
}"
994,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/request/GetSystemParamList4PagerByCondRequest.java,GetSystemParamList4PagerByCondRequest,toString__(),"@Override
public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(""GetSystemParamList4PagerByCondRequest [pageNum="");
    builder.append(pageNum);
    builder.append("", pageSize="");
    builder.append(pageSize);
    builder.append("", id="");
    builder.append(id);
    builder.append("", paramKey="");
    builder.append(paramKey);
    builder.append("", paramValue="");
    builder.append(paramValue);
    builder.append("", defaultValue="");
    builder.append(defaultValue);
    builder.append(""]"");
    return builder.toString();
}"
995,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandExecutorImpl.java,CommandExecutorImpl,"CommandExecutorImpl__(CommandConfig defaultConfig, CommandInterceptor first)","public CommandExecutorImpl(CommandConfig defaultConfig, CommandInterceptor first) {
    this.defaultConfig = defaultConfig;
    this.first = first;
}"
996,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandExecutorImpl.java,CommandExecutorImpl,getFirst__(),"public CommandInterceptor getFirst() {
    return first;
}"
997,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandExecutorImpl.java,CommandExecutorImpl,getDefaultConfig__(),"@Override
public CommandConfig getDefaultConfig() {
    return defaultConfig;
}"
998,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandExecutorImpl.java,CommandExecutorImpl,execute__(Command<U> command),"@Override
public <U> U execute(Command<U> command) {
    return execute(defaultConfig, command);
}"
999,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/CommandExecutorImpl.java,CommandExecutorImpl,"execute__(CommandConfig config, Command<U> command)","@Override
public <U> U execute(CommandConfig config, Command<U> command) {
    return first.execute(config, command);
}"
1000,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EntityEventImpl.java,EntityEventImpl,"EntityEventImpl__(Object entity, String type)","public EntityEventImpl(Object entity, String type) throws BaseAppException {
    super(type);
    if (entity == null) {
        //  Entity cannot be null.            
        throw new BaseAppException(""S-SYSTEMCOM-003"");
    }
    this.entity = entity;
}"
1001,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EntityEventImpl.java,EntityEventImpl,getEntity__(),"@Override
public Object getEntity() {
    return entity;
}"
1002,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/service/ServiceImpl.java,ServiceImpl,init__(),"private void init() {
    Class<? extends ServiceImpl> mClass = this.getClass();
    Service service = mClass.getAnnotation(Service.class);
    String value = service.value();
    if (StringUtil.isEmpty(value)) {
        value = StringUtil.uncapitalize(mClass.getSimpleName());
    }
    initService(value, this);
}"
1003,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/service/ServiceImpl.java,ServiceImpl,getCommandExecutor__(),"public CommandExecutor getCommandExecutor() {
    return commandExecutor;
}"
1004,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/service/ServiceImpl.java,ServiceImpl,setCommandExecutor__(CommandExecutor commandExecutor),"public void setCommandExecutor(CommandExecutor commandExecutor) {
    this.commandExecutor = commandExecutor;
}"
1005,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/service/ServiceImpl.java,ServiceImpl,"initService__(String serviceName, ServiceImpl serviceInstance)","public void initService(String serviceName, ServiceImpl serviceInstance) {
    systemEngine.initService(serviceName, serviceInstance);
}"
1006,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/service/ServiceImpl.java,ServiceImpl,execute__(Command<U> command),"protected <U> U execute(Command<U> command) {
    return commandExecutor.execute(command);
}"
1007,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/service/ServiceImpl.java,ServiceImpl,"execute__(CommandConfig config, Command<U> command)","protected <U> U execute(CommandConfig config, Command<U> command) {

    return commandExecutor.execute(config, command);
}"
1008,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/service/ServiceImpl.java,ServiceImpl,afterPropertiesSet__(),"@Override
public void afterPropertiesSet() {
    init();
}"
1009,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,"isNotNull__(T obj, String msg)","public static <T> void isNotNull(T obj, String msg) {
    if (obj == null) {
        throw new IllegalArgumentException(msg);
    }
}"
1010,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,isNotNull__(T obj),"public static <T> void isNotNull(T obj) {
    isNotNull(obj, ""The value is null."");
}"
1011,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,"isNotEmpty__(String str, String msg)","public static void isNotEmpty(String str, String msg) {
    if (StringUtil.isEmpty(str)) {
        throw new IllegalArgumentException(msg);
    }
}"
1012,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,isNotEmpty__(String str),"public static void isNotEmpty(String str) {
    isNotEmpty(str, ""The value is null."");
}"
1013,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,"isFalse__(boolean blVal, String msg)","public static void isFalse(boolean blVal, String msg) {
    if (blVal) {
        throw new IllegalArgumentException(msg);
    }
}"
1014,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,isFalse__(boolean blVal),"public static void isFalse(boolean blVal) {
    isFalse(blVal, ""The value is not false."");
}"
1015,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,"isTrue__(boolean blVal, String msg)","public static void isTrue(boolean blVal, String msg) {
    if (!blVal) {
        throw new IllegalArgumentException(msg);
    }
}"
1016,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,isTrue__(boolean blVal),"public static void isTrue(boolean blVal) {
    isTrue(blVal, ""The value is not true."");
}"
1017,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,"areEqual__(T obj1, V obj2, String msg)","public static <T, V> void areEqual(T obj1, V obj2, String msg) {
    if (!obj1.equals(obj2)) {
        throw new IllegalArgumentException(msg);
    }
}"
1018,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,"areEqual__(T obj1, V obj2)","public static <T, V> void areEqual(T obj1, V obj2) {
    areEqual(obj1, obj2, ""The object is not equal."");
}"
1019,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,"isNotEmpty__(T[] array, String message)","public static <T> void isNotEmpty(T[] array, String message) {
    if (isEmpty(array)) {
        throw new IllegalArgumentException(message);
    }
}"
1020,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,isEmpty__(T[] array),"private static <T> boolean isEmpty(T[] array) {
    return (array == null || array.length == 0);
}"
1021,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,isEmpty__(byte[] array),"private static boolean isEmpty(byte[] array) {
    return (array == null || array.length == 0);
}"
1022,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,"isNotEmpty__(byte[] array, String message)","public static void isNotEmpty(byte[] array, String message) {
    if (isEmpty(array)) {
        throw new IllegalArgumentException(message);
    }
}"
1023,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,isNotEmpty__(byte[] array),"public static void isNotEmpty(byte[] array) {
    isNotEmpty(array, ""[Assertion failed] - this byte array must not be empty: it must contain at least 1 element"");
}"
1024,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,notEmpty__(T[] array),"public static <T> void notEmpty(T[] array) {
    isNotEmpty(array, ""[Assertion failed] - this array must not be empty: it must contain at least 1 element"");
}"
1025,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/AssertUtil.java,AssertUtil,"hasLength__(String str, String msg)","public static void hasLength(String str, String msg) {
    if (str.length() == 0) {
        throw new IllegalArgumentException(msg);
    }
}"
1026,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/test/java/com/littlefisher/core/kafka/KafkaPruducerTest.java,KafkaPruducerTest,testSendMessage__(),"@Test
public void testSendMessage() throws InterruptedException {
    String topic = ""TestTopic"";

    for (int i = 0; i < 100; i++) {
        logger.debug(""开始发送第{}条数据"", i);
        kafkaTemplate.send(topic, ""TestTopic-"" + i);
    }
    logger.debug(""消息发送完毕"");

    while (true) {
        logger.debug(""currentTime: {}"", new Date());
        TimeUnit.SECONDS.sleep(2);
    }
}"
1027,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/AddUserStateCmd.java,AddUserStateCmd,AddUserStateCmd__(UserStateDto userStateDto),"public AddUserStateCmd(UserStateDto userStateDto) {
    super();
    this.userStateDto = userStateDto;
}"
1028,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/user/cmd/AddUserStateCmd.java,AddUserStateCmd,execute__(),"@Override
public UserStateDto execute() {
    UserStateDtoMapper userStateDtoMapper = this.getMapper(UserStateDtoMapper.class);
    userStateDtoMapper.insert(userStateDto);
    return userStateDto;
}"
1029,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessStart.java,IProcessStart,"flowStart__(String processInstanceKey, Map<String, Object> variables)","void flowStart(String processInstanceKey, Map<String, Object> variables);"
1030,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-activiti/src/main/java/com/littlefisher/core/activiti/IProcessStart.java,IProcessStart,flowStart__(String processInstanceKey),void flowStart(String processInstanceKey);
1031,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/request/GetPostList4PagerByCondRequest.java,GetPostList4PagerByCondRequest,getPageNum__(),"public int getPageNum() {
    return pageNum;
}"
1032,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/request/GetPostList4PagerByCondRequest.java,GetPostList4PagerByCondRequest,setPageNum__(int pageNum),"public void setPageNum(int pageNum) {
    this.pageNum = pageNum;
}"
1033,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/request/GetPostList4PagerByCondRequest.java,GetPostList4PagerByCondRequest,getPageSize__(),"public int getPageSize() {
    return pageSize;
}"
1034,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/request/GetPostList4PagerByCondRequest.java,GetPostList4PagerByCondRequest,setPageSize__(int pageSize),"public void setPageSize(int pageSize) {
    this.pageSize = pageSize;
}"
1035,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/request/GetPostList4PagerByCondRequest.java,GetPostList4PagerByCondRequest,getTitle__(),"public String getTitle() {
    return title;
}"
1036,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/request/GetPostList4PagerByCondRequest.java,GetPostList4PagerByCondRequest,setTitle__(String title),"public void setTitle(String title) {
    this.title = title;
}"
1037,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/request/GetPostList4PagerByCondRequest.java,GetPostList4PagerByCondRequest,getKeyword__(),"public String getKeyword() {
    return keyword;
}"
1038,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/request/GetPostList4PagerByCondRequest.java,GetPostList4PagerByCondRequest,setKeyword__(String keyword),"public void setKeyword(String keyword) {
    this.keyword = keyword;
}"
1039,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/request/GetPostList4PagerByCondRequest.java,GetPostList4PagerByCondRequest,getCreatedDateStart__(),"public Date getCreatedDateStart() {
    return createdDateStart;
}"
1040,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/request/GetPostList4PagerByCondRequest.java,GetPostList4PagerByCondRequest,setCreatedDateStart__(Date createdDateStart),"public void setCreatedDateStart(Date createdDateStart) {
    this.createdDateStart = createdDateStart;
}"
1041,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/request/GetPostList4PagerByCondRequest.java,GetPostList4PagerByCondRequest,getCreatedDateEnd__(),"public Date getCreatedDateEnd() {
    return createdDateEnd;
}"
1042,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/request/GetPostList4PagerByCondRequest.java,GetPostList4PagerByCondRequest,setCreatedDateEnd__(Date createdDateEnd),"public void setCreatedDateEnd(Date createdDateEnd) {
    this.createdDateEnd = createdDateEnd;
}"
1043,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/request/GetPostList4PagerByCondRequest.java,GetPostList4PagerByCondRequest,toString__(),"@Override
public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(""GetPostList4PagerByCondRequest [pageNum="");
    builder.append(pageNum);
    builder.append("", pageSize="");
    builder.append(pageSize);
    builder.append("", title="");
    builder.append(title);
    builder.append("", keyword="");
    builder.append(keyword);
    builder.append("", createdDateStart="");
    builder.append(createdDateStart);
    builder.append("", createdDateEnd="");
    builder.append(createdDateEnd);
    builder.append(""]"");
    return builder.toString();
}"
1044,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/swagger/SwaggerConfig.java,SwaggerConfig,customImplementation__(),"@Bean
public SwaggerSpringMvcPlugin customImplementation() {
    return new SwaggerSpringMvcPlugin(springSwaggerConfig)
        .apiInfo(apiInfo())
        .includePatterns("".*?"")
        // 是否展示通用的HTTP 返回码的含义
        .useDefaultResponseMessages(false);
}"
1045,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/swagger/SwaggerConfig.java,SwaggerConfig,apiInfo__(),"private ApiInfo apiInfo() {
    return new ApiInfo(""Littlefisher REST API"", ""API Description"", ""API terms of service"", ""jinyanan@room1000.com"",
        ""Version 1.0"", ""No License URL"");
}"
1046,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/UpdateCommentaryCmd.java,UpdateCommentaryCmd,UpdateCommentaryCmd__(CommentaryDto commentaryDto),"public UpdateCommentaryCmd(CommentaryDto commentaryDto) {
    super();
    this.commentaryDto = commentaryDto;
}"
1047,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/UpdateCommentaryCmd.java,UpdateCommentaryCmd,execute__(),"@Override
public CommentaryDto execute() {
    CommentaryDtoMapper commentaryDtoMapper = this.getMapper(CommentaryDtoMapper.class);
    commentaryDtoMapper.updateByPrimaryKey(commentaryDto);
    return commentaryDto;
}"
1048,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/SortImportTypesJavaFormatter.java,SortImportTypesJavaFormatter,getFormattedContent__(CompilationUnit compilationUnit),"@Override
public String getFormattedContent(CompilationUnit compilationUnit) {
    if (compilationUnit instanceof TopLevelClass) {
        return this.getClassFormattedContent(compilationUnit);
    } else if (compilationUnit instanceof Interface) {
        return this.getInterfaceFormattedContent(compilationUnit);
    } else {
        return compilationUnit.getFormattedContent();
    }
}"
1049,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/SortImportTypesJavaFormatter.java,SortImportTypesJavaFormatter,setContext__(Context context),"@Override
public void setContext(Context context) {
    this.context = context;
}"
1050,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/SortImportTypesJavaFormatter.java,SortImportTypesJavaFormatter,getInterfaceFormattedContent__(CompilationUnit compilationUnit),"private String getInterfaceFormattedContent(CompilationUnit compilationUnit) {
    StringBuilder sb = new StringBuilder();

    Interface interfaceClazz = (Interface) compilationUnit;

    for (String commentLine : interfaceClazz.getFileCommentLines()) {
        sb.append(commentLine);
        newLine(sb);
    }

    formatPackage(sb, interfaceClazz.getType().getPackageName());

    formatStaticImports(sb, interfaceClazz.getStaticImports());

    if (interfaceClazz.getStaticImports().size() > 0) {
        newLine(sb);
    }

    Set<String> importStrings = calculateImports(interfaceClazz.getImportedTypes());
    this.sortImportTypes(sb, importStrings);

    if (CollectionUtil.isNotEmpty(importStrings)) {
        newLine(sb);
    }

    int indentLevel = 0;

    interfaceClazz.addFormattedJavadoc(sb, indentLevel);
    interfaceClazz.addFormattedAnnotations(sb, indentLevel);

    sb.append(interfaceClazz.getVisibility().getValue());

    if (interfaceClazz.isStatic()) {
        sb.append(""static "");
    }

    if (interfaceClazz.isFinal()) {
        sb.append(""final "");
    }

    sb.append(""interface "");
    sb.append(interfaceClazz.getType().getShortName());

    if (interfaceClazz.getSuperInterfaceTypes().size() > 0) {
        sb.append("" extends "");

        boolean comma = false;
        for (FullyQualifiedJavaType fqjt : interfaceClazz.getSuperInterfaceTypes()) {
            if (comma) {
                sb.append("", "");
            } else {
                comma = true;
            }

            sb.append(JavaDomUtils.calculateTypeName(interfaceClazz, fqjt));
        }
    }

    sb.append("" {"");
    indentLevel++;

    Iterator<Method> mtdIter = interfaceClazz.getMethods().iterator();
    while (mtdIter.hasNext()) {
        newLine(sb);
        Method method = mtdIter.next();
        sb.append(method.getFormattedContent(indentLevel, true, interfaceClazz));
        if (mtdIter.hasNext()) {
            newLine(sb);
        }
    }

    indentLevel--;
    newLine(sb);
    javaIndent(sb, indentLevel);
    sb.append('}');

    return sb.toString();
}"
1051,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/SortImportTypesJavaFormatter.java,SortImportTypesJavaFormatter,"formatStaticImports__(StringBuilder sb, Set<String> staticImports)","private void formatStaticImports(StringBuilder sb, Set<String> staticImports) {
    for (String staticImport : staticImports) {
        sb.append(""import static "");
        sb.append(staticImport);
        sb.append(';');
        newLine(sb);
    }
}"
1052,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/SortImportTypesJavaFormatter.java,SortImportTypesJavaFormatter,getClassFormattedContent__(CompilationUnit compilationUnit),"private String getClassFormattedContent(CompilationUnit compilationUnit) {
    StringBuilder sb = new StringBuilder();

    TopLevelClass topLevelClass = (TopLevelClass) compilationUnit;

    for (String fileCommentLine : topLevelClass.getFileCommentLines()) {
        sb.append(fileCommentLine);
        newLine(sb);
    }

    formatPackage(sb, topLevelClass.getType().getPackageName());

    formatStaticImports(sb, topLevelClass.getStaticImports());

    if (topLevelClass.getStaticImports().size() > 0) {
        newLine(sb);
    }

    Set<String> importStrings = calculateImports(topLevelClass.getImportedTypes());

    sortImportTypes(sb, importStrings);

    if (importStrings.size() > 0) {
        newLine(sb);
    }

    sb.append(topLevelClass.getFormattedContent(0, compilationUnit));

    return sb.toString();
}"
1053,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/SortImportTypesJavaFormatter.java,SortImportTypesJavaFormatter,"formatPackage__(StringBuilder sb, String packageName)","private void formatPackage(StringBuilder sb, String packageName) {
    if (stringHasValue(packageName)) {
        sb.append(""package "");
        sb.append(packageName);
        sb.append(';');
        newLine(sb);
        newLine(sb);
    }
}"
1054,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/mybatis/SortImportTypesJavaFormatter.java,SortImportTypesJavaFormatter,"sortImportTypes__(StringBuilder sb, Set<String> importStrings)","private void sortImportTypes(StringBuilder sb, Set<String> importStrings) {
    Set<String> javaTypes = new TreeSet<>();
    Set<String> javaxTypes = new TreeSet<>();
    Set<String> orgTypes = new TreeSet<>();
    Set<String> otherTypes = new TreeSet<>();
    Set<String> comTypes = new TreeSet<>();

    for (String importType : importStrings) {
        if (importType.startsWith(""import javax"")) {
            javaxTypes.add(importType);
        } else if (importType.startsWith(""import java"")) {
            javaTypes.add(importType);
        } else if (importType.startsWith(""import org"")) {
            orgTypes.add(importType);
        } else if (importType.startsWith(""import com"")) {
            comTypes.add(importType);
        } else {
            otherTypes.add(importType);
        }
    }

    for (String importType : javaTypes) {
        sb.append(importType);
        newLine(sb);
    }

    if (javaTypes.size() > 0) {
        newLine(sb);
    }

    for (String importType : javaxTypes) {
        sb.append(importType);
        newLine(sb);
    }

    if (javaxTypes.size() > 0) {
        newLine(sb);
    }

    for (String importType : orgTypes) {
        sb.append(importType);
        newLine(sb);
    }

    if (orgTypes.size() > 0) {
        newLine(sb);
    }

    for (String importType : comTypes) {
        sb.append(importType);
        newLine(sb);
    }

    if (comTypes.size() > 0) {
        newLine(sb);
    }

    for (String importType : otherTypes) {
        sb.append(importType);
        newLine(sb);
    }

    if (otherTypes.size() > 0) {
        newLine(sb);
    }
}"
1055,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcherImpl.java,EventDispatcherImpl,EventDispatcherImpl__(),"public EventDispatcherImpl() {
    eventSupport = new EventSupport();
}"
1056,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcherImpl.java,EventDispatcherImpl,setEnabled__(boolean enabled),"@Override
public void setEnabled(boolean enabled) {
    this.enabled = enabled;
}"
1057,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcherImpl.java,EventDispatcherImpl,isEnabled__(),"@Override
public boolean isEnabled() {
    return enabled;
}"
1058,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcherImpl.java,EventDispatcherImpl,addEventListener__(EventListener listenerToAdd),"@Override
public void addEventListener(EventListener listenerToAdd) {
    eventSupport.addEventListener(listenerToAdd);
}"
1059,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcherImpl.java,EventDispatcherImpl,"addEventListener__(EventListener listenerToAdd, String... types)","@Override
public void addEventListener(EventListener listenerToAdd, String... types) {
    eventSupport.addEventListener(listenerToAdd, types);
}"
1060,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcherImpl.java,EventDispatcherImpl,removeEventListener__(EventListener listenerToRemove),"@Override
public void removeEventListener(EventListener listenerToRemove) {
    eventSupport.removeEventListener(listenerToRemove);
}"
1061,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcherImpl.java,EventDispatcherImpl,dispatchEvent__(Event event),"@Override
public void dispatchEvent(Event event) throws BaseAppException {
    if (enabled) {
        eventSupport.dispatchEvent(event);
    }

}"
1062,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/event/EventDispatcherImpl.java,EventDispatcherImpl,"dispatchEntityEvent__(String type, Object entity)","@Override
public void dispatchEntityEvent(String type, Object entity) throws BaseAppException {
    EntityEvent event = EventBuilder.createEntityEvent(type, entity);
    dispatchEvent(event);

}"
1063,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/SpringTransactionInterceptor.java,SpringTransactionInterceptor,SpringTransactionInterceptor__(PlatformTransactionManager transactionManager),"public SpringTransactionInterceptor(PlatformTransactionManager transactionManager) {
    this.transactionManager = transactionManager;
}"
1064,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/SpringTransactionInterceptor.java,SpringTransactionInterceptor,getPropagation__(CommandConfig config),"private Integer getPropagation(CommandConfig config) {
    switch (config.getTransactionPropagation()) {
        case NOT_SUPPORTED:
            return TransactionTemplate.PROPAGATION_NOT_SUPPORTED;
        case REQUIRED:
            return TransactionTemplate.PROPAGATION_REQUIRED;
        case REQUIRES_NEW:
            return TransactionTemplate.PROPAGATION_REQUIRES_NEW;
        default:
            ExceptionHandler.publish(""CORE-000006"", null, config.getTransactionPropagation().toString());
            return TransactionTemplate.TIMEOUT_DEFAULT;
    }
}"
1065,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/SpringTransactionInterceptor.java,SpringTransactionInterceptor,"execute__(final CommandConfig config, final Command<U> command)","@Override
public <U> U execute(final CommandConfig config, final Command<U> command) {
    logger.debug(""Running command with propagation {}"", config.getTransactionPropagation());

    TransactionTemplate transactionTemplate = new TransactionTemplate(transactionManager);
    try {
        transactionTemplate.setPropagationBehavior(getPropagation(config));
    } catch (Exception e) {
        transactionTemplate.setPropagationBehavior(TransactionTemplate.PROPAGATION_REQUIRED);
    }

    return transactionTemplate.execute(status -> {
        U result = null;
        try {
            result = next.execute(config, command);
        } catch (Exception e) {
            ExceptionHandler.publish(""CORE-000007"", null, e);
        }
        return result;
    });
}"
1066,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/DeleteCommentaryCmd.java,DeleteCommentaryCmd,DeleteCommentaryCmd__(Long commentaryId),"public DeleteCommentaryCmd(Long commentaryId) {
    super();
    this.commentaryId = commentaryId;
}"
1067,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/commentary/cmd/DeleteCommentaryCmd.java,DeleteCommentaryCmd,execute__(),"@Override
public Integer execute() {
    CommentaryDtoMapper commentaryDtoMapper = this.getMapper(CommentaryDtoMapper.class);
    return commentaryDtoMapper.deleteByPrimaryKey(commentaryId);
}"
1068,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/UpdatePostStateCmd.java,UpdatePostStateCmd,UpdatePostStateCmd__(PostStateDto postStateDto),"public UpdatePostStateCmd(PostStateDto postStateDto) {
    super();
    this.postStateDto = postStateDto;
}"
1069,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/post/cmd/UpdatePostStateCmd.java,UpdatePostStateCmd,execute__(),"@Override
public PostStateDto execute() {
    PostStateDtoMapper postStateDtoMapper = this.getMapper(PostStateDtoMapper.class);
    postStateDtoMapper.updateByPrimaryKey(postStateDto);
    return postStateDto;
}"
1070,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/Session.java,Session,flush__(),void flush();
1071,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/Session.java,Session,close__(),void close();
1072,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostTypeDto.java,PostTypeDto,getType__(),"public String getType() {
    return type;
}"
1073,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostTypeDto.java,PostTypeDto,setType__(String type),"public void setType(String type) {
    this.type = type;
}"
1074,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostTypeDto.java,PostTypeDto,getTypeName__(),"public String getTypeName() {
    return typeName;
}"
1075,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostTypeDto.java,PostTypeDto,setTypeName__(String typeName),"public void setTypeName(String typeName) {
    this.typeName = typeName;
}"
1076,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostTypeDto.java,PostTypeDto,getComments__(),"public String getComments() {
    return comments;
}"
1077,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostTypeDto.java,PostTypeDto,setComments__(String comments),"public void setComments(String comments) {
    this.comments = comments;
}"
1078,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/post/model/PostTypeDto.java,PostTypeDto,toString__(),"@Override
public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(getClass().getSimpleName());
    sb.append("" ["");
    sb.append(""Hash = "").append(hashCode());
    sb.append("", type="").append(type);
    sb.append("", typeName="").append(typeName);
    sb.append("", comments="").append(comments);
    sb.append("", serialVersionUID="").append(serialVersionUID);
    sb.append(""]"");
    return sb.toString();
}"
1079,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/context/Context.java,Context,getCommandContext__(),"public static CommandContext getCommandContext() {
    // 栈 特点是后进先出
    Stack<CommandContext> stack = getStack(commandContextThreadLocal);
    if (stack.isEmpty()) {
        return null;
    }
    return stack.peek();
}"
1080,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/context/Context.java,Context,setCommandContext__(CommandContext commandContext),"public static void setCommandContext(CommandContext commandContext) {
    getStack(commandContextThreadLocal).push(commandContext);
}"
1081,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/context/Context.java,Context,getCommandContextStackSize__(),"public static int getCommandContextStackSize() {
    return getStack(commandContextThreadLocal).size();
    
}"
1082,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/context/Context.java,Context,removeCommandContext__(),"public static void removeCommandContext() {
    getStack(commandContextThreadLocal).pop();
}"
1083,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/context/Context.java,Context,clearCommandContext__(),"public static void clearCommandContext() {
    commandContextThreadLocal.remove();
}"
1084,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/context/Context.java,Context,getSystemEngineConfig__(),"public static SystemEngineConfig getSystemEngineConfig() {
    Stack<SystemEngineConfig> stack = getStack(systemEngineConfigStackThreadLocal);
    if (stack.isEmpty()) {
        return null;
    }
    return stack.peek();
    
}"
1085,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/context/Context.java,Context,setSystemEngineConfig__(SystemEngineConfig systemEngineConfig),"public static void setSystemEngineConfig(SystemEngineConfig systemEngineConfig) {
    getStack(systemEngineConfigStackThreadLocal).push(systemEngineConfig);
}"
1086,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/context/Context.java,Context,removeSystemEngineConfig__(),"public static void removeSystemEngineConfig() {
    getStack(systemEngineConfigStackThreadLocal).pop();        
}"
1087,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/context/Context.java,Context,clearSystemEngineConfig__(),"public static void clearSystemEngineConfig() {
    systemEngineConfigStackThreadLocal.remove();
}"
1088,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/interceptor/context/Context.java,Context,getStack__(ThreadLocal<Stack<T>> threadLocal),"protected static <T> Stack<T> getStack(ThreadLocal<Stack<T>> threadLocal) {
    Stack<T> stack = threadLocal.get();
    if (stack == null) {
        stack = new Stack<>();
        threadLocal.set(stack);            
    }
    return stack;
}"
1089,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,getPageNum__(),"public int getPageNum() {
    return pageNum;
}"
1090,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,setPageNum__(int pageNum),"public void setPageNum(int pageNum) {
    this.pageNum = pageNum;
}"
1091,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,getPageSize__(),"public int getPageSize() {
    return pageSize;
}"
1092,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,setPageSize__(int pageSize),"public void setPageSize(int pageSize) {
    this.pageSize = pageSize;
}"
1093,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,getAccNbr__(),"public String getAccNbr() {
    return accNbr;
}"
1094,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,setAccNbr__(String accNbr),"public void setAccNbr(String accNbr) {
    this.accNbr = accNbr;
}"
1095,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,getEmail__(),"public String getEmail() {
    return email;
}"
1096,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,setEmail__(String email),"public void setEmail(String email) {
    this.email = email;
}"
1097,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,getRealName__(),"public String getRealName() {
    return realName;
}"
1098,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,setRealName__(String realName),"public void setRealName(String realName) {
    this.realName = realName;
}"
1099,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,getNickName__(),"public String getNickName() {
    return nickName;
}"
1100,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,setNickName__(String nickName),"public void setNickName(String nickName) {
    this.nickName = nickName;
}"
1101,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,getEnName__(),"public String getEnName() {
    return enName;
}"
1102,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,setEnName__(String enName),"public void setEnName(String enName) {
    this.enName = enName;
}"
1103,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,getQq__(),"public String getQq() {
    return qq;
}"
1104,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,setQq__(String qq),"public void setQq(String qq) {
    this.qq = qq;
}"
1105,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,getPhoneNbr__(),"public String getPhoneNbr() {
    return phoneNbr;
}"
1106,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,setPhoneNbr__(String phoneNbr),"public void setPhoneNbr(String phoneNbr) {
    this.phoneNbr = phoneNbr;
}"
1107,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,getState__(),"public String getState() {
    return state;
}"
1108,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,setState__(String state),"public void setState(String state) {
    this.state = state;
}"
1109,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,getRegDateStart__(),"public Date getRegDateStart() {
    return regDateStart;
}"
1110,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,setRegDateStart__(Date regDateStart),"public void setRegDateStart(Date regDateStart) {
    this.regDateStart = regDateStart;
}"
1111,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,getRegDateEnd__(),"public Date getRegDateEnd() {
    return regDateEnd;
}"
1112,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,setRegDateEnd__(Date regDateEnd),"public void setRegDateEnd(Date regDateEnd) {
    this.regDateEnd = regDateEnd;
}"
1113,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/user/model/request/GetUserList4PagerByCondRequest.java,GetUserList4PagerByCondRequest,toString__(),"@Override
public String toString() {
    StringBuilder builder = new StringBuilder();
    builder.append(""GetUserList4PagerByCondRequest [pageNum="");
    builder.append(pageNum);
    builder.append("", pageSize="");
    builder.append(pageSize);
    builder.append("", accNbr="");
    builder.append(accNbr);
    builder.append("", email="");
    builder.append(email);
    builder.append("", realName="");
    builder.append(realName);
    builder.append("", nickName="");
    builder.append(nickName);
    builder.append("", enName="");
    builder.append(enName);
    builder.append("", qq="");
    builder.append(qq);
    builder.append("", phoneNbr="");
    builder.append(phoneNbr);
    builder.append("", state="");
    builder.append(state);
    builder.append("", regDateStart="");
    builder.append(regDateStart);
    builder.append("", regDateEnd="");
    builder.append(regDateEnd);
    builder.append(""]"");
    return builder.toString();
}"
1114,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/AddSystemParamCmd.java,AddSystemParamCmd,AddSystemParamCmd__(SystemParamDto systemParamDto),"public AddSystemParamCmd(SystemParamDto systemParamDto) {
    super();
    this.systemParamDto = systemParamDto;
}"
1115,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-impl/src/main/java/com/littlefisher/blog/system/cmd/AddSystemParamCmd.java,AddSystemParamCmd,execute__(),"@Override
public SystemParamDto execute() {
    SystemParamDtoMapper systemParamDtoMapper = this.getMapper(SystemParamDtoMapper.class);
    systemParamDtoMapper.insert(systemParamDto);
    return systemParamDto;
}"
1116,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/SystemParamDto.java,SystemParamDto,getId__(),"public Long getId() {
    return id;
}"
1117,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/SystemParamDto.java,SystemParamDto,setId__(Long id),"public void setId(Long id) {
    this.id = id;
}"
1118,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/SystemParamDto.java,SystemParamDto,getParamKey__(),"public String getParamKey() {
    return paramKey;
}"
1119,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/SystemParamDto.java,SystemParamDto,setParamKey__(String paramKey),"public void setParamKey(String paramKey) {
    this.paramKey = paramKey;
}"
1120,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/SystemParamDto.java,SystemParamDto,getParamValue__(),"public String getParamValue() {
    return paramValue;
}"
1121,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/SystemParamDto.java,SystemParamDto,setParamValue__(String paramValue),"public void setParamValue(String paramValue) {
    this.paramValue = paramValue;
}"
1122,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/SystemParamDto.java,SystemParamDto,getDefaultValue__(),"public String getDefaultValue() {
    return defaultValue;
}"
1123,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/SystemParamDto.java,SystemParamDto,setDefaultValue__(String defaultValue),"public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
}"
1124,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/SystemParamDto.java,SystemParamDto,getParamDesc__(),"public String getParamDesc() {
    return paramDesc;
}"
1125,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/SystemParamDto.java,SystemParamDto,setParamDesc__(String paramDesc),"public void setParamDesc(String paramDesc) {
    this.paramDesc = paramDesc;
}"
1126,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/blog-intf/src/main/java/com/littlefisher/blog/system/model/SystemParamDto.java,SystemParamDto,toString__(),"@Override
public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(getClass().getSimpleName());
    sb.append("" ["");
    sb.append(""Hash = "").append(hashCode());
    sb.append("", id="").append(id);
    sb.append("", paramKey="").append(paramKey);
    sb.append("", paramValue="").append(paramValue);
    sb.append("", defaultValue="").append(defaultValue);
    sb.append("", paramDesc="").append(paramDesc);
    sb.append("", serialVersionUID="").append(serialVersionUID);
    sb.append(""]"");
    return sb.toString();
}"
1127,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,ExceptionHandler__(),"private ExceptionHandler() {
}"
1128,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,publish__(String errorCode),"public static void publish(String errorCode) {
    publish(errorCode, null, null, null, null, null, null, null);
}"
1129,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,"publish__(String errorCode, String message)","public static void publish(String errorCode, String message) {
    publish(errorCode, message, null, null, null, null, null, null);
}"
1130,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,"publish__(String errorCode, String message, String param1)","public static void publish(String errorCode, String message, String param1) {
    publish(errorCode, message, null, param1, null, null, null, null);
}"
1131,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,"publish__(String errorCode, String message, String param1, String param2)","public static void publish(String errorCode, String message, String param1, String param2) {
    publish(errorCode, message, null, param1, param2, null, null, null);
}"
1132,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,"publish__(String errorCode, String message, String param1, String param2, String param3)","public static void publish(String errorCode, String message, String param1, String param2, String param3) {
    publish(errorCode, message, null, param1, param2, param3, null, null);
}"
1133,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,"publish__(String errorCode, String message, String param1, String param2, String param3,
                               String param4)","public static void publish(String errorCode, String message, String param1, String param2, String param3,
                           String param4) {
    publish(errorCode, message, null, param1, param2, param3, param4, null);
}"
1134,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,"publish__(String errorCode, String message, String param1, String param2, String param3,
                               String param4, String param5)","public static void publish(String errorCode, String message, String param1, String param2, String param3,
                           String param4, String param5) {
    publish(errorCode, message, null, param1, param2, param3, param4, param5);
}"
1135,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,"publish__(String errorCode, String message, Throwable t)","public static void publish(String errorCode, String message, Throwable t) {
    publish(errorCode, message, t, null, null, null, null, null);
}"
1136,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,"publish__(String errorCode, String message, Throwable t, String param1)","public static void publish(String errorCode, String message, Throwable t, String param1) {
    publish(errorCode, message, t, param1, null, null, null, null);
}"
1137,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,"publish__(String errorCode, String message, Throwable t, String param1, String param2)","public static void publish(String errorCode, String message, Throwable t, String param1, String param2) {
    publish(errorCode, message, t, param1, param2, null, null, null);
}"
1138,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,"publish__(String errorCode, String message, Throwable t, String param1, String param2,
                               String param3)","public static void publish(String errorCode, String message, Throwable t, String param1, String param2,
                           String param3) {
    publish(errorCode, message, t, param1, param2, param3, null, null);
}"
1139,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,"publish__(String errorCode, String message, Throwable t, String param1, String param2,
                               String param3, String param4)","public static void publish(String errorCode, String message, Throwable t, String param1, String param2,
                           String param3, String param4) {
    publish(errorCode, message, t, param1, param2, param3, param4, null);
}"
1140,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,"publish__(String errorCode, String message, Throwable t, String param1, String param2,
                               String param3, String param4, String param5)","public static void publish(String errorCode, String message, Throwable t, String param1, String param2,
                           String param3, String param4, String param5) {
    BaseAppException baseAppException;
    if (t != null && t instanceof BaseAppException) {
        baseAppException = (BaseAppException) t;
    } else if (t != null && t instanceof InvocationTargetException) {
        // 仅仅对此情况进行处理，不能进行深层检查！
        Throwable cause = t.getCause();
        if (cause instanceof BaseAppException) {
            baseAppException = (BaseAppException) cause;
        } else {
            baseAppException = new BaseAppException(errorCode, message, t, param1, param2, param3, param4, param5);
        }
    } else {
        baseAppException = new BaseAppException(errorCode, message, t, param1, param2, param3, param4, param5);
    }

    logErrorInfo(baseAppException);
    throw baseAppException;
}"
1141,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/utils/ExceptionHandler.java,ExceptionHandler,logErrorInfo__(BaseAppException baseAppException),"private static void logErrorInfo(BaseAppException baseAppException) {

    StringBuilder sb = new StringBuilder();

    sb.append(baseAppException.toString());

    StackTraceElement[] trace = baseAppException.getStackTrace();
    for (StackTraceElement aTrace : trace) {
        sb.append(""\r\n\tat "");
        sb.append(aTrace);
    }
    Throwable cause = baseAppException.getCause();

    while (cause != null) {
        sb.append(""\r\nCause by: "");

        sb.append(cause.toString());

        for (int i = 0; i < cause.getStackTrace().length; i++) {
            sb.append(""\r\n\tat "");
            sb.append(cause.getStackTrace()[i]);
        }

        cause = cause.getCause();

        if (cause != null) {
            sb.append(""\r\nCaused by: "");
        }
    }

    logger.error(sb.toString());
}"
1142,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/DataSourceConfig.java,DataSourceConfig,dataSource__(),"@Bean(initMethod = ""init"", destroyMethod = ""close"")
public DruidDataSource dataSource() throws SQLException {
    DruidDataSource dataSource = new DruidDataSource();
    // 基本属性 url、user、password
    dataSource.setUrl(url);
    dataSource.setUsername(userName);
    dataSource.setPassword(password);
    // 配置初始化大小、最小、最大
    dataSource.setInitialSize(initialSize);
    dataSource.setMaxActive(maxActive);
    // 最小连接池数量
    dataSource.setMinIdle(minIdle);
    // 配置获取连接等待超时的时间
    dataSource.setMaxWait(maxWait);
    // 用来检测连接是否有效的sql，要求是一个查询语句。
    // 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
    dataSource.setValidationQuery(validationQuerySQL);
    // 申请连接时执行validationQuery检测连接是否有效
    // 做了这个配置会降低性能
    dataSource.setTestOnBorrow(testOnBorrow);
    // 归还连接时执行validationQuery检测连接是否有效
    // 做了这个配置会降低性能
    dataSource.setTestOnReturn(testOnReturn);
    // 建议配置为true，不影响性能，并且保证安全性
    // 申请连接的时候检测，如果空闲时间大于
    // timeBetweenEvictionRunsMillis
    // 执行validationQuery检测连接是否有效
    dataSource.setTestWhileIdle(testWhileIdle);
    // 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    dataSource.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);
    // 配置一个连接在池中最小生存的时间，单位是毫秒
    dataSource.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);
    // 对于长时间不使用的连接强制关闭
    dataSource.setRemoveAbandoned(removeAbandoned);
    // 超过30分钟开始关闭空闲连接
    dataSource.setRemoveAbandonedTimeout(removeAbandonedTimeout);
    // 将当前关闭动作记录到日志
    dataSource.setLogAbandoned(logAbandoned);
    // druid filters的别名保存在下面的地址中
    // druid-xxx.jar!/META-INF/druid-filter.properties
    dataSource.setFilters(filters);
    // 配置log相关的信息
    dataSource.setProxyFilters(Lists.newArrayList(
            log4j2Filter()
    ));
    return dataSource;
}"
1143,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/config/DataSourceConfig.java,DataSourceConfig,log4j2Filter__(),"@Bean
public Filter log4j2Filter() {
    Log4j2Filter filter = new Log4j2Filter();
    // 打印可执行sql
    filter.setStatementExecutableSqlLogEnable(true);
    return filter;
}"
1144,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SessionFactory.java,SessionFactory,getSessionType__(),Class<?> getSessionType();
1145,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/engine/SessionFactory.java,SessionFactory,openSession__(),Session openSession();
1146,frenchc_jetm__2770a0899dff042abec0d9afe8141a1b5eff9d69__2770a0899dff042abec0d9afe8141a1b5eff9d69,modules/jetm-console/src/test/java/etm/contrib/console/ConsoleTests.java,ConsoleTests,"dumpTraces__(ThreadMXBean mxBean, Map threadInfoMap, Writer writer)","private void dumpTraces(ThreadMXBean mxBean, Map threadInfoMap, Writer writer)
                throws IOException {
        Map stacks = Thread.getAllStackTraces();
        writer.write(""Dump of "" + stacks.size() + "" thread at ""
                        + new SimpleDateFormat(""yyyy/MM/dd HH:mm:ss z"").format(new Date(System.currentTimeMillis())) + ""\n\n"");

  for (Iterator iterator = stacks.entrySet().iterator(); iterator.hasNext(); ) {
    Map.Entry entry = (Map.Entry) iterator.next();

    Thread thread = (Thread) entry.getKey();
    writer.write(""\"""" + thread.getName() + ""\"" prio="" + thread.getPriority() + "" tid="" + thread.getId() + "" ""
      + thread.getState() + "" "" + (thread.isDaemon() ? ""deamon"" : ""worker"") + ""\n"");
    ThreadInfo threadInfo = (ThreadInfo) threadInfoMap.get(new Long(thread.getId()));
    if (threadInfo != null) {
      writer.write(""    native="" + threadInfo.isInNative() + "", suspended="" + threadInfo.isSuspended()
        + "", block="" + threadInfo.getBlockedCount() + "", wait="" + threadInfo.getWaitedCount() + ""\n"");
      writer.write(""    lock="" + threadInfo.getLockName() + "" owned by "" + threadInfo.getLockOwnerName()
        + "" ("" + threadInfo.getLockOwnerId() + ""), cpu=""
        + (mxBean.getThreadCpuTime(threadInfo.getThreadId()) / 1000000L) + "", user=""
        + (mxBean.getThreadUserTime(threadInfo.getThreadId()) / 1000000L) + ""\n"");
    }

    StackTraceElement[] elements = (StackTraceElement[]) entry.getValue();

    for (int i = 0; i < elements.length; i++) {
      writer.write(""        "");
      writer.write(elements[i].toString());
      writer.write(""\n"");
    }
    writer.write(""\n"");
  }
}"
1147,apache_storm__3503dcea62c9bb9d004388773705ad362e7cc5dd__3503dcea62c9bb9d004388773705ad362e7cc5dd,storm-client/test/jvm/org/apache/storm/windowing/persistence/WindowStateTest.java,WindowStateTest,setUp__(),"@Before
public void setUp() throws Exception {
    MockitoAnnotations.initMocks(this);
}"
1148,apache_storm__3503dcea62c9bb9d004388773705ad362e7cc5dd__3503dcea62c9bb9d004388773705ad362e7cc5dd,sql/storm-sql-external/storm-sql-mongodb/src/test/org/apache/storm/sql/mongodb/TestMongoDataSourcesProvider.java,TestMongoDataSourcesProvider.MongoArgMatcher,matches__(Object o),"@SuppressWarnings(""unchecked"")
@Override
public boolean matches(Object o) {
  Document doc = ((List<Document>)o).get(0);
  ByteBuffer buf = ByteBuffer.wrap((byte[])doc.get(TBL_PROPERTIES.getProperty(""trident.ser.field"")));
  ByteBuffer b = SERIALIZER.write(tuple.getValues(), null);
  return b.equals(buf);
}"
1149,apache_storm__3503dcea62c9bb9d004388773705ad362e7cc5dd__3503dcea62c9bb9d004388773705ad362e7cc5dd,sql/storm-sql-external/storm-sql-kafka/src/test/org/apache/storm/sql/kafka/TestKafkaDataSourcesProvider.java,TestKafkaDataSourcesProvider.KafkaMessageMatcher,matches__(Object o),"@SuppressWarnings(""unchecked"")
@Override
public boolean matches(Object o) {
  ProducerRecord<Object, ByteBuffer> m = (ProducerRecord<Object,ByteBuffer>)o;
  if (m.key() != tuple.get(PRIMARY_INDEX)) {
    return false;
  }
  ByteBuffer buf = m.value();
  ByteBuffer b = SERIALIZER.write(tuple.getValues(), null);
  return b.equals(buf);
}"
