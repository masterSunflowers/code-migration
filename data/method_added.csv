,migration_id,ver2_file_path,ver2_tree_path,ver2_signature,method_ver2
0,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/exception/HttpClientException.java,HttpClientException,"HttpClientException__(String message, Throwable cause)","public HttpClientException(String message, Throwable cause) {
    super(message, cause);
}"
1,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpDelete.java,HttpDelete,getMethod__(),"public String getMethod() {
    return METHOD_NAME;
}"
2,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpDelete.java,HttpDelete,HttpDelete__(final String uri),"public HttpDelete(final String uri) {
    super();
    setURI(URI.create(uri));
}"
3,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"get__(String url, Class<T> responseType)","public <T> T get(String url, Class<T> responseType) {
    CloseableHttpClient httpClient = HttpClients.createDefault();
    HttpGet httpGet = new HttpGet(url);
    CloseableHttpResponse response = null;
    try {
        response = httpClient.execute(httpGet);
        HttpEntity httpEntity = response.getEntity();
        T result = new Gson().fromJson(EntityUtils.toString(httpEntity, DEFAULT_CHARSET), responseType);
        EntityUtils.consume(httpEntity);
        return result;
    } catch (IOException e) {
        throw new HttpClientException(e.getMessage(), e);
    } finally {
        try {
            if (response != null) {
                response.close();
            }
        } catch (IOException e) {
            //ignore
        }
    }
}"
4,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"post__(String url, List<Header> headers, Object request, Class<T> responseType)","public <T> T post(String url, List<Header> headers, Object request, Class<T> responseType) {
    HttpPost httpPost = new HttpPost(url);
    for (Header header : headers) {
        httpPost.addHeader(header);
    }
    return this.exchange(httpPost, request, responseType);
}"
5,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"put__(String url, List<Header> headers, Object request, Class<T> responseType)","public <T> T put(String url, List<Header> headers, Object request, Class<T> responseType) {
    HttpPut httpPut = new HttpPut(url);
    for (Header header : headers) {
        httpPut.addHeader(header);
    }
    return this.exchange(httpPut, request, responseType);
}"
6,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"delete__(String url, List<Header> headers, Object request, Class<T> responseType)","public <T> T delete(String url, List<Header> headers, Object request, Class<T> responseType) {
    HttpDelete httpDelete = new HttpDelete(url);
    for (Header header : headers) {
        httpDelete.addHeader(header);
    }
    return this.exchange(httpDelete, request, responseType);
}"
7,iyzico_iyzipay-java__4cb3ff7df2a0e21bfbaf942bd96e18318c619311__4cb3ff7df2a0e21bfbaf942bd96e18318c619311,src/main/java/com/iyzipay/HttpClient.java,HttpClient,"exchange__(HttpEntityEnclosingRequestBase httpMethod, Object request, Class<T> responseType)","private <T> T exchange(HttpEntityEnclosingRequestBase httpMethod, Object request, Class<T> responseType) {
    CloseableHttpClient httpClient = HttpClients.createDefault();
    Gson gson = new Gson();
    CloseableHttpResponse response = null;
    String body = gson.toJson(request);
    try {
        StringEntity requestEntity = new StringEntity(body, ContentType.APPLICATION_JSON);
        requestEntity.setContentEncoding(DEFAULT_CHARSET);
        httpMethod.setEntity(requestEntity);
        response = httpClient.execute(httpMethod);
        HttpEntity responseEntity = response.getEntity();
        T result = gson.fromJson(EntityUtils.toString(responseEntity, DEFAULT_CHARSET), responseType);
        EntityUtils.consume(responseEntity);
        return result;
    } catch (UnsupportedEncodingException e) {
        throw new HttpClientException(e.getMessage(), e);
    } catch (ClientProtocolException e) {
        throw new HttpClientException(e.getMessage(), e);
    } catch (IOException e) {
        throw new HttpClientException(e.getMessage(), e);
    } finally {
        try {
            if (response != null) {
                response.close();
            }
        } catch (IOException e) {
            //ignore
        }
    }
}"
8,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,"InteractiveObjectSetService__(final Thread parent, BundleContext context, CommandSession session)","public InteractiveObjectSetService(final Thread parent, BundleContext context, CommandSession session) {
    this.parent = parent;
    this.context = context;
    this.session = session;
    ServiceReference ref = context.getServiceReference(ROUTER_SERVICE_FILTER);
    if (null != ref) {
        router = (ObjectSet) context.getService(ref);
    }
    //TODO block the console read
    this.console = session.getConsole();
    this.keyboard = session.getKeyboard();
}"
9,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,"create__(String id, Map<String, Object> object)","public void create(String id, Map<String, Object> object) throws ObjectSetException {
    console.append(""CALL: create("").append(id).append("","");
    if (null == object) {
        console.println(""null)"");
    } else {
        try {
            mapper.writerWithDefaultPrettyPrinter().writeValue(console, object);
            console.println("")"");
        } catch (IOException e) {
            console.append(""Input object serialization exception: "").println(e.getMessage());
        }
    }

    console.println(""Available commands:"");
    console.println(""input:router"");
    console.println(""input:file"");
    console.println(""input:console"");

}"
10,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,read__(String id),"public Map<String, Object> read(String id) throws ObjectSetException {
    //TODO the parent thread should read the exit command
    if (""exit"".equals(id)) {
        parent.interrupt();
        return new HashMap<String, Object>();
    }
    console.append(""CALL: read("").append(id).println("")"");
    try {
        return readConsole().asMap();
    } catch (Exception e) {
        throw new ObjectSetException(e);
    }
}"
11,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,"update__(String id, String rev, Map<String, Object> object)","public void update(String id, String rev, Map<String, Object> object) throws ObjectSetException {
    console.append(""CALL: update("").append(id).append("","").append(rev).append("","");
    if (null == object) {
        console.println(""null)"");
    } else {
        try {
            mapper.writerWithDefaultPrettyPrinter().writeValue(console, object);
            console.println("")"");
        } catch (IOException e) {
            console.append(""Input object serialization exception: "").println(e.getMessage());
        }
    }
}"
12,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,"delete__(String id, String rev)","public void delete(String id, String rev) throws ObjectSetException {
    console.append(""CALL: delete("").append(id).append("","").append(rev).println("")"");
}"
13,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,"patch__(String id, String rev, Patch patch)","public void patch(String id, String rev, Patch patch) throws ObjectSetException {
    console.append(""CALL: patch("").append(id).append("","").append(rev).println("",patch)"");
}"
14,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,"query__(String id, Map<String, Object> params)","public Map<String, Object> query(String id, Map<String, Object> params) throws ObjectSetException {
    console.append(""CALL: query("").append(id).append("","");
    if (null == params) {
        console.println(""null)"");
    } else {
        try {
            mapper.writerWithDefaultPrettyPrinter().writeValue(console, params);
            console.println("")"");
        } catch (IOException e) {
            console.append(""Input object serialization exception: "").println(e.getMessage());
        }
    }
    return null;
}"
15,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,"action__(String id, Map<String, Object> params)","public Map<String, Object> action(String id, Map<String, Object> params) throws ObjectSetException {
    console.append(""CALL: action("").append(id).append("","");
    if (null == params) {
        console.println(""null)"");
    } else {
        try {
            mapper.writerWithDefaultPrettyPrinter().writeValue(console, params);
            console.println("")"");
        } catch (IOException e) {
            console.append(""Input object serialization exception: "").println(e.getMessage());
        }
    }
    return null;
}"
16,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,getRouter__(),"private ObjectSet getRouter() {
    return router;
}"
17,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,readCommand__(),"private void readCommand() {
    Scanner in = new Scanner(keyboard);
    String command = in.nextLine();

}"
18,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,printInputHelp__(),"private void printInputHelp() {
    PrintWriter out = new PrintWriter(console);
    out.append(""router"");
    out.append(""file"");
    out.append(""console"");
    out.append(""exception"");
    out.flush();
}"
19,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,readFile__(File inputFile),"private JsonValue readFile(File inputFile) throws Exception {
    try {
        if (inputFile.exists()) {
            Object map = mapper.readValue(inputFile, Map.class);
            return new JsonValue(map);
        }
    } catch (Exception e) {
        console.format(""Error reading file: %s. Exception: %s"", inputFile.getAbsolutePath(), e.getMessage());
    }
    return new JsonValue(new HashMap());
}"
20,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,readConsole__(),"private JsonValue readConsole() throws Exception {
    StringBuilder input = new StringBuilder();
    Scanner in = new Scanner(keyboard);
    boolean dataLine = true;
    do {
        String data = in.nextLine();
        dataLine = !""."".equalsIgnoreCase(data);
        if (dataLine) {
            input.append(data);
        }
    } while (dataLine);
    Object map = mapper.readValue(input.toString(), Map.class);
    return new JsonValue(map);
}"
21,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,printExceptionHelp__(),"private void printExceptionHelp() {
    console.println(""Throw exception:"");
    console.println(""exception:BadRequestException <error message>"");
    console.println(""exception:ConflictException <error message>"");
    console.println(""exception:ForbiddenException <error message>"");
    console.println(""exception:InternalServerErrorException <error message>"");
    console.println(""exception:NotFoundException <error message>"");
    console.println(""exception:ObjectSetException <error message>"");
    console.println(""exception:PreconditionFailedException <error message>"");
    console.println(""exception:ServiceUnavailableException <error message>"");
}"
22,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,throwException__(String cmd),"private void throwException(String cmd) {
    int firstSpace = cmd.indexOf("" "");
    String exception;
    String msg = ""Default Error Message"";
    if (firstSpace > 0) {
        exception = cmd.substring(10, firstSpace);
        msg = cmd.substring(firstSpace);
    } else {
        exception = cmd.substring(10);
    }

}"
23,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/InteractiveObjectSetService.java,InteractiveObjectSetService,serviceChanged__(ServiceEvent event),"@Override
public void serviceChanged(ServiceEvent event) {
    ServiceReference sr = event.getServiceReference();
    switch (event.getType()) {
        case ServiceEvent.REGISTERED: {
            router = (ObjectSet) context.getService(sr);
            break;
        }
        case ServiceEvent.MODIFIED: {
            router = (ObjectSet) context.getService(sr);
            break;
        }
        case ServiceEvent.UNREGISTERING: {
            router = null;
            break;
        }
        default:
            break;
    }
}"
24,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/RemoteObjectSetRouterService.java,RemoteObjectSetRouterService,RemoteObjectSetRouterService__(),"public RemoteObjectSetRouterService() throws Exception {
    //TODO load properties and create ClientResource
    clientResource = RestService.createClientResource(null);
    openidmUri = new URI(""http://localhost:8080/openidm/"");
}"
25,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/RemoteObjectSetRouterService.java,RemoteObjectSetRouterService,"create__(String id, Map<String, Object> object)","public void create(String id, Map<String, Object> object) throws ObjectSetException {
    //TODO fix URL and response
    clientResource.setReference(getReference(id));
    JacksonRepresentation entity = new JacksonRepresentation(object);
    //TODO Validate HeaderConstants.HEADER_IF_NONE_MATCH = ""\""*\"""";
    entity.setTag(Tag.ALL);
    Representation response = clientResource.put(entity);
    clientResource.setConditions(new Conditions());
    JacksonRepresentation<Map> _response = null;
    if (response instanceof JacksonRepresentation) {
        _response = (JacksonRepresentation<Map>) response;
    } else if (response instanceof EmptyRepresentation == false) {
        _response = new JacksonRepresentation<Map>(response, Map.class);
    }
}"
26,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/RemoteObjectSetRouterService.java,RemoteObjectSetRouterService,read__(String id),"public Map<String, Object> read(String id) throws ObjectSetException {
    //TODO fix URL and response
    clientResource.setReference(getReference(id));
    Representation response = clientResource.get();
    JacksonRepresentation<Map> _response = null;
    if (response instanceof JacksonRepresentation) {
        _response = (JacksonRepresentation<Map>) response;
    } else if (response instanceof EmptyRepresentation == false) {
        _response = new JacksonRepresentation<Map>(response, Map.class);
    }
    return _response == null ? null : _response.getObject();
}"
27,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/RemoteObjectSetRouterService.java,RemoteObjectSetRouterService,"update__(String id, String rev, Map<String, Object> object)","public void update(String id, String rev, Map<String, Object> object) throws ObjectSetException {
    //TODO fix URL and response
    clientResource.setReference(getReference(id));
    JacksonRepresentation entity = new JacksonRepresentation(object);
    //TODO Validate HeaderConstants.HEADER_IF_MATCH = rev
    entity.setTag(new Tag(rev));
    Representation response = clientResource.put(entity);
    JacksonRepresentation<Map> _response = null;
    if (response instanceof JacksonRepresentation) {
        _response = (JacksonRepresentation<Map>) response;
    } else if (response instanceof EmptyRepresentation == false) {
        _response = new JacksonRepresentation<Map>(response, Map.class);
    }
}"
28,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/RemoteObjectSetRouterService.java,RemoteObjectSetRouterService,"delete__(String id, String rev)","public void delete(String id, String rev) throws ObjectSetException {
    //TODO fix URL and response
    clientResource.setReference(getReference(id));
    Object o = clientResource.getRequest().getAttributes().get(HeaderConstants.ATTRIBUTE_HEADERS);
    Form headers = o instanceof Form ? (Form) o : new Form();
    headers.add(HeaderConstants.HEADER_IF_MATCH, rev);
    clientResource.getRequest().getAttributes().put(HeaderConstants.ATTRIBUTE_HEADERS, headers);
    Representation response = clientResource.delete();
    clientResource.setConditions(new Conditions());
    JacksonRepresentation<Map> _response = null;
    if (response instanceof JacksonRepresentation) {
        _response = (JacksonRepresentation<Map>) response;
    } else if (response instanceof EmptyRepresentation == false) {
        _response = new JacksonRepresentation<Map>(response, Map.class);
    }
}"
29,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/RemoteObjectSetRouterService.java,RemoteObjectSetRouterService,"patch__(String id, String rev, Patch patch)","public void patch(String id, String rev, Patch patch) throws ObjectSetException {
    //To change body of implemented methods use File | Settings | File Templates.
}"
30,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/RemoteObjectSetRouterService.java,RemoteObjectSetRouterService,"query__(String id, Map<String, Object> params)","public Map<String, Object> query(String id, Map<String, Object> params) throws ObjectSetException {
    //TODO fix URL and response
    Reference reference = getReference(id);
    if (params.get(""_query-id"") == null) {
        throw new BadRequestException(""Required _query-id parameter is missing"");
    }
    for (Map.Entry<String, Object> entry : params.entrySet()) {
        if (entry.getValue() instanceof String) {
            reference.addQueryParameter(entry.getKey(), (String) entry.getValue());
        }
    }
    clientResource.setReference(reference);
    Representation response = clientResource.get();
    JacksonRepresentation<Map> _response = null;
    if (response instanceof JacksonRepresentation) {
        _response = (JacksonRepresentation<Map>) response;
    } else if (response instanceof EmptyRepresentation == false) {
        _response = new JacksonRepresentation<Map>(response, Map.class);
    }
    return _response == null ? null : _response.getObject();
}"
31,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/RemoteObjectSetRouterService.java,RemoteObjectSetRouterService,"action__(String id, Map<String, Object> params)","public Map<String, Object> action(String id, Map<String, Object> params) throws ObjectSetException {
    //TODO fix URL and response
    clientResource.setReference(getReference(id));
    JacksonRepresentation entity = new JacksonRepresentation(params);
    Representation response = clientResource.post(entity);
    JacksonRepresentation<Map> _response = null;
    if (response instanceof JacksonRepresentation) {
        _response = (JacksonRepresentation<Map>) response;
    } else if (response instanceof EmptyRepresentation == false) {
        _response = new JacksonRepresentation<Map>(response, Map.class);
    }
    return _response == null ? null : _response.getObject();
}"
32,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/RemoteObjectSetRouterService.java,RemoteObjectSetRouterService,getReference__(String id),"private Reference getReference(String id) {
    return new Reference(openidmUri.resolve(id));
}"
33,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/FelixGogoCommandsServiceGenerator.java,FelixGogoCommandsServiceGenerator,"generate__(CustomCommandScope service, Map<String, String> commands, String suffix)","public static Object generate(CustomCommandScope service, Map<String, String> commands, String suffix) throws Exception {
    // generate class with unique name
    //javassist.CtClass ctClass = POOL.makeClass(AbstractFelixCommandsService.class.getName() + suffix);

    try {
        ClassWriter cw = new ClassWriter(0);
        MethodVisitor mv;
        AnnotationVisitor av0;
        String className = AbstractFelixCommandsService.class.getName().replace('.', '/') + suffix;
        cw.visit(V1_5, ACC_PUBLIC + ACC_SUPER, className, null, AbstractFelixCommandsService.class.getName().replace('.', '/'), null);

        //cw.visitSource(""AbstractFelixCommandsServiceSample.java"", null);

        {
            mv = cw.visitMethod(ACC_PUBLIC, ""<init>"", ""(Ljava/lang/Object;)V"", null, null);
            mv.visitCode();
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitLineNumber(10, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESPECIAL, AbstractFelixCommandsService.class.getName().replace('.', '/'), ""<init>"", ""(Ljava/lang/Object;)V"");
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitLineNumber(11, l1);
            mv.visitInsn(RETURN);
            Label l2 = new Label();
            mv.visitLabel(l2);
            mv.visitLocalVariable(""this"", ""L"" + className + "";"", null, l0, l2, 0);
            mv.visitLocalVariable(""service"", ""Ljava/lang/Object;"", null, l0, l2, 1);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }

        /*javassist.bytecode.ClassFile ccFile = ctClass.getClassFile();
        ccFile.setVersionToJava5();
        javassist.bytecode.ConstPool constPool = ccFile.getConstPool();

        // set superclass
        javassist.CtClass abstractCtClass = POOL.getCtClass(AbstractFelixCommandsService.class.getName());
        ctClass.setSuperclass(abstractCtClass);

        // add constructor
        javassist.CtClass serviceCtClass = POOL.getCtClass(Object.class.getName());
        javassist.CtConstructor ctConstructor = new javassist.CtConstructor(new javassist.CtClass[]{serviceCtClass}, ctClass);
        ctConstructor.setModifiers(javassist.Modifier.PUBLIC);
        ctConstructor.setBody(""super($1);"");
        ctClass.addConstructor(ctConstructor);

        // add method for each command
        javassist.CtClass sessionCtClass = POOL.getCtClass(CommandSession.class.getName());
        javassist.CtClass stringArrayCtClass = POOL.getCtClass(String[].class.getName());*/
        Set<String> names = commands.keySet();
        for (String name : names) {
            if (isMethodAvailable(service, name)) {
                mv = cw.visitMethod(ACC_PUBLIC, name, ""(Lorg/apache/felix/service/command/CommandSession;[Ljava/lang/String;)V"", null, null);
                {
                    av0 = mv.visitAnnotation(""Lorg/apache/felix/service/command/Descriptor;"", true);
                    av0.visit(""value"", commands.get(name));
                    av0.visitEnd();
                }
                mv.visitCode();
                Label l0 = new Label();
                mv.visitLabel(l0);
                mv.visitLineNumber(15, l0);
                mv.visitVarInsn(ALOAD, 0);
                mv.visitLdcInsn(name);
                mv.visitVarInsn(ALOAD, 1);
                mv.visitVarInsn(ALOAD, 2);
                mv.visitMethodInsn(INVOKEVIRTUAL, className, ""runCommand"", ""(Ljava/lang/String;Lorg/apache/felix/service/command/CommandSession;[Ljava/lang/String;)V"");
                Label l1 = new Label();
                mv.visitLabel(l1);
                mv.visitLineNumber(16, l1);
                mv.visitInsn(RETURN);
                Label l2 = new Label();
                mv.visitLabel(l2);
                mv.visitLocalVariable(""this"", ""L"" + className + "";"", null, l0, l2, 0);
                mv.visitLocalVariable(""session"", ""Lorg/apache/felix/service/command/CommandSession;"", null, l0, l2, 1);
                mv.visitLocalVariable(""args"", ""[Ljava/lang/String;"", null, l0, l2, 2);
                mv.visitMaxs(4, 3);
                mv.visitEnd();

                /*javassist.CtMethod ctMethod = new javassist.CtMethod(javassist.CtClass.voidType, name, new javassist.CtClass[]{
                        sessionCtClass, stringArrayCtClass
                }, ctClass);
                ctMethod.setModifiers(javassist.Modifier.PUBLIC);
                ctMethod.setBody(""runCommand(\"""" + name + ""\"", $1, $2);"");
                ctClass.addMethod(ctMethod);

                // add GoGo descriptor for this shell command
                javassist.bytecode.AnnotationsAttribute annotationsAttribute = new javassist.bytecode.AnnotationsAttribute(constPool, javassist.bytecode.AnnotationsAttribute.visibleTag);
                javassist.bytecode.annotation.Annotation annotation = new javassist.bytecode.annotation.Annotation(Descriptor.class.getName(), constPool);
                annotation.addMemberValue(""value"", new javassist.bytecode.annotation.StringMemberValue(commands.get(name), constPool));
                annotationsAttribute.addAnnotation(annotation);
                ctMethod.getMethodInfo().addAttribute(annotationsAttribute);*/
            }
        }

        cw.visitEnd();
        // create new instance
        /*Class<?> aClass = ctClass.toClass(FelixGogoCommandsServiceGenerator.class.getClassLoader(), null);
        */
        Class<?> aClass = classLoader.defineClass(className, cw.toByteArray());
        Constructor<?> constructor = aClass.getConstructor(Object.class);
        return constructor.newInstance(service);
    } catch (Exception e) {
        //ctClass.detach();
        throw e;
    }
}"
34,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/FelixGogoCommandsServiceGenerator.java,FelixGogoCommandsServiceGenerator,"isMethodAvailable__(CustomCommandScope commandsProvider, String methodName)","private static boolean isMethodAvailable(CustomCommandScope commandsProvider, String methodName) {
    return null != Main.findCommandMethod(commandsProvider.getClass(), methodName);
}"
35,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/FelixGogoCommandsServiceGenerator.java,FelixGogoCommandsServiceGenerator.StubClassLoader,"defineClass__(String name, byte[] b)","public Class defineClass(String name, byte[] b) {
    return defineClass(name.replace('/', '.'), b, 0, b.length);
}"
36,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-external-rest/src/main/java/org/forgerock/openidm/external/rest/RestService.java,RestService,createClientResource__(JsonValue params),"public static ClientResource createClientResource(JsonValue params) {
    //TODO use the https://wikis.forgerock.org/confluence/display/json/http-request
    String url = params.get(ARG_URL).required().asString();
    Context context = new Context();

    context.getParameters().set(""maxTotalConnections"", ""16"");
    context.getParameters().set(""maxConnectionsPerHost"", ""8"");

    ClientResource cr = new ClientResource(context, url);
    JsonValue _authenticate = params.get(ARG_AUTHENTICATE);

    if (!_authenticate.isNull()) {
        ChallengeScheme authType = ChallengeScheme.valueOf(_authenticate.get(""type"").asString());
        if (authType == null) {
            authType = ChallengeScheme.HTTP_BASIC;
        }
        if (ChallengeScheme.HTTP_BASIC.equals(authType)) {
            String identifier = _authenticate.get(""user"").required().asString();
            String secret = _authenticate.get(""password"").asString();
            logger.debug(""Using basic authentication for {} secret supplied: {}"", identifier, (secret != null));
            ChallengeResponse challengeResponse = new ChallengeResponse(authType, identifier, secret);
            cr.setChallengeResponse(challengeResponse);
            cr.getRequest().setChallengeResponse(challengeResponse);
        }
        if (ChallengeScheme.HTTP_COOKIE.equals(authType)) {

            String authenticationTokenPath = ""openidm/j_security_check"";

            // Prepare the request
            Request request = new Request(Method.POST, authenticationTokenPath
                    + authenticationTokenPath);

            Form loginForm = new Form();
            loginForm.add(""j_username"", ""admin"");
            loginForm.add(""j_password"", ""admin"");
            Representation repEnt = loginForm.getWebRepresentation();

            request.setEntity(repEnt);

            Client client = new Client(Protocol.HTTP);

            request.setEntity(repEnt);
            Response res = client.handle(request);

            String identifier = _authenticate.get(""user"").required().asString();
            String secret = _authenticate.get(""password"").asString();
            logger.debug(""Using cookie authentication for {} secret supplied: {}"", identifier, (secret != null));
            ChallengeResponse challengeResponse = new ChallengeResponse(authType, identifier, secret);
            cr.setChallengeResponse(challengeResponse);
            cr.getRequest().setChallengeResponse(challengeResponse);
        }
    }

    return cr;
}"
37,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/CustomCommandScope.java,CustomCommandScope,getFunctionMap__(),"public Map<String, String> getFunctionMap();"
38,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/CustomCommandScope.java,CustomCommandScope,getScope__(),public String getScope();
39,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/CustomCommandScope.java,CustomCommandScope,execute__(String[] args),public void execute(String[] args);
40,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/DebugCommands.java,DebugCommands,DebugCommands__(BundleContext context),"public DebugCommands(BundleContext context) {
    this.context = context;
}"
41,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/DebugCommands.java,DebugCommands,"mockservice__(CommandSession session, @Descriptor(""URL Prefix"") String[] params)","@Descriptor(""Start a new object service and register into the router service"")
public void mockservice(CommandSession session, @Descriptor(""URL Prefix"") String[] params) {
    try {
        InteractiveObjectSetService debugRouter = new InteractiveObjectSetService(Thread.currentThread(), context, session);
        context.addServiceListener(debugRouter, InteractiveObjectSetService.ROUTER_SERVICE_FILTER);
        Dictionary<String, Object> props = new Hashtable<String, Object>();
        props.put(ServerConstants.ROUTER_PREFIX, params.length > 0 ? params[0] : ""debugrouter"");
        ServiceRegistration srv = context.registerService(ObjectSet.class.getName(), debugRouter, props);
        boolean run = true;
        while (run) {
            try {
                Thread.sleep(1000000000);
            } catch (InterruptedException e) {
                run = false;
                session.getConsole().println(""Interrupt debug server."");
            }
        }
        context.removeServiceListener(debugRouter);
        srv.unregister();
        session.getConsole().println(""Unregister debug server."");
    } catch (InvalidSyntaxException e) {
        //This should never happen
    }
}"
42,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/felixgogo/debug/DebugCommands.java,DebugCommands,help__(),"@Descriptor(""Display help messages"")
public String help() {
    return ""mockservice\t Start new service"";
}"
43,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/RemoteCommandScope.java,RemoteCommandScope,getFunctionMap__(),"public Map<String, String> getFunctionMap() {
    Map<String, String> help = new HashMap<String, String>();
    help.put(""export"", ""Exports all the objects"");
    return help;

}"
44,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/RemoteCommandScope.java,RemoteCommandScope,getScope__(),"public String getScope() {
    return ""remote"";
}"
45,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/RemoteCommandScope.java,RemoteCommandScope,execute__(String[] args),"public void execute(String[] args) {
}"
46,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/RemoteCommandScope.java,RemoteCommandScope,"export__(InputStream console, PrintStream out, String[] args)","public void export(InputStream console, PrintStream out, String[] args) {
    out.println(""Exported"");
}"
47,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/Main.java,Main,main__(String[] args),"public static void main(String[] args) throws Exception {
    String[] cmd = parseCommandName(args);
    String[] parameters = Arrays.copyOfRange(args, 1, Math.max(args.length, 1));
    CustomCommandScope scope = findCommandScope(cmd[0]);
    switch (cmd.length) {
        case 2:
            Method cmdMethod = findCommandMethod(scope.getClass(), cmd[1]);
            if (null != cmdMethod) {
                cmdMethod.invoke(scope, System.in, System.out, parameters);
                System.exit(0);
            }
            throw new UnsupportedOperationException(cmd[1]);
        case 1:
            scope.execute(parameters);
    }
}"
48,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/Main.java,Main,parseCommandName__(String[] args),"private static String[] parseCommandName(String[] args) {
    if (args.length > 0) {
        String[] cmd = null;
        String[] clauses = args[0].split("":"");
        if (0 == clauses.length || clauses.length > 2) {
            throw new IllegalArgumentException(""The passed command identifier has more then one ':'"");
        }
        switch (clauses.length) {
            case 2: {
                cmd = new String[2];
                // Do blank check StringUtils.isBlank()
                if ((null != clauses[1]) && (!"""".equals(clauses[1].trim()))) {
                    cmd[1] = clauses[1].trim();
                }
            }
            case 1: {
                if ((null == clauses[0]) || ("""".equals(clauses[0].trim()))) {
                    throw new IllegalArgumentException(""The passed scope identifier has no command"");
                } else {
                    if (cmd == null) cmd = new String[1];
                    cmd[0] = clauses[0].trim();
                }
            }
        }

        return cmd;
    } else {
        throw new IllegalArgumentException(""Command required"");
    }
}"
49,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/Main.java,Main,findCommandScope__(String groupId),"private static CustomCommandScope findCommandScope(String groupId) throws NoSuchFieldException, IllegalAccessException {
    CustomCommandScope scope = null;
    ServiceLoader<CustomCommandScope> ldr = ServiceLoader.load(CustomCommandScope.class);
    for (CustomCommandScope cmdScope : ldr) {
        if (cmdScope.getScope().equals(groupId)) {
            if (cmdScope instanceof AbstractRemoteCommandScope) {
                Field bind = AbstractRemoteCommandScope.class.getDeclaredField(""router"");
                if (null != bind) {
                    bind.setAccessible(true);
                    bind.set(cmdScope, getRouter());
                }
            }
            scope = cmdScope;
            break;
        }
    }
    if (null == scope) {
        throw new UnsupportedOperationException(groupId);
    }
    return scope;
}"
50,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/Main.java,Main,getRouter__(),"private static ObjectSet getRouter() {
    if (null == router) {
        //TODO init RemoteObjectSetRouterService router
    }
    return router;
}"
51,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/Main.java,Main,"findCommandMethod__(Class<? extends CustomCommandScope> commandsProvider, String methodName)","public static Method findCommandMethod(Class<? extends CustomCommandScope> commandsProvider, String methodName) {
    try {
        return commandsProvider.getMethod(methodName, InputStream.class, PrintStream.class, String[].class);
    } catch (NoSuchMethodException e) {
        return null;
    }
}"
52,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/LocalCommandScope.java,LocalCommandScope,getFunctionMap__(),"public Map<String, String> getFunctionMap() {
    Map<String, String> help = new HashMap<String, String>();
    help.put(""validate"", ""Validates all json configuration file in /conf folder."");
    return help;

}"
53,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/LocalCommandScope.java,LocalCommandScope,getScope__(),"public String getScope() {
    return ""local"";
}"
54,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/LocalCommandScope.java,LocalCommandScope,execute__(String[] args),"public void execute(String[] args) {
}"
55,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/LocalCommandScope.java,LocalCommandScope,"validate__(InputStream console, PrintStream out, String[] args)","public void validate(InputStream console, PrintStream out, String[] args) {
    File file = IdentityServer.getFileForPath(""conf"");
    out.println(""..................................................................."");
    if (file.isDirectory()) {
        out.println(""[Validating] Load JSON configuration files from:"");
        out.append(""[Validating] \t"").println(file.getAbsolutePath());
        FileFilter filter = new FileFilter() {
            public boolean accept(File f) {
                return (f.isDirectory()) || (f.getName().endsWith("".json""));
            }
        };
        ObjectMapper mapper = new ObjectMapper();
        File[] files = file.listFiles(filter);
        for (File subFile : files) {
            if (subFile.isDirectory()) continue;
            //TODO pretty print
            try {
                mapper.readValue(subFile, Object.class);
                prettyPrint(out, subFile.getName(), null);
            } catch (Exception e) {
                prettyPrint(out, subFile.getName(), e);
            }
        }
    } else {
        out.append(""[Validating] "").append(""Configuration directory not found at: "").println(file.getAbsolutePath());
    }
}"
56,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/LocalCommandScope.java,LocalCommandScope,"prettyPrint__(PrintStream out, String name, Exception reason)","private void prettyPrint(PrintStream out, String name, Exception reason) {
    out.append(""[Validating] "").append(name).append("" "").append(DOTTED_PLACEHOLDER.substring(Math.min(name.length(), DOTTED_PLACEHOLDER.length())));
    if (null == reason) {
        out.println("" SUCCESS"");
    } else {
        out.println("" FAILED"");
        out.append(""\t["").append(reason.getMessage()).println(""]"");
    }
}"
57,ForgeRock_openidm-community-edition__43689602ee8a67deb29ea8412c48410dcaa6b30a__43689602ee8a67deb29ea8412c48410dcaa6b30a,openidm-shell/src/main/java/org/forgerock/openidm/shell/impl/AbstractRemoteCommandScope.java,AbstractRemoteCommandScope,getRouter__(),"protected ObjectSet getRouter() {
    return router;
}"
58,JakduK_jakduk-api__e586faf9633439ea6bd46006612574a33d1010e9__e586faf9633439ea6bd46006612574a33d1010e9,src/com/jakduk/authentication/common/OAuthPrincipal.java,OAuthPrincipal,getAddInfoStatus__(),"public String getAddInfoStatus() {
	return addInfoStatus;
}"
59,JakduK_jakduk-api__e586faf9633439ea6bd46006612574a33d1010e9__e586faf9633439ea6bd46006612574a33d1010e9,src/com/jakduk/authentication/common/OAuthPrincipal.java,OAuthPrincipal,setAddInfoStatus__(String addInfoStatus),"public void setAddInfoStatus(String addInfoStatus) {
	this.addInfoStatus = addInfoStatus;
}"
60,JakduK_jakduk-api__e586faf9633439ea6bd46006612574a33d1010e9__e586faf9633439ea6bd46006612574a33d1010e9,src/com/jakduk/authentication/common/OAuthSuccessHandler.java,OAuthSuccessHandler,"onAuthenticationSuccess__(HttpServletRequest request, HttpServletResponse response,
			Authentication authentication)","@Override
public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response,
		Authentication authentication) throws ServletException, IOException {
	SavedRequest savedRequest = requestCache.getRequest(request, response);

	if (savedRequest == null) {
		super.onAuthenticationSuccess(request, response, authentication);

		return;
	}
	String targetUrlParameter = getTargetUrlParameter();
	if (isAlwaysUseDefaultTargetUrl() || (targetUrlParameter != null && StringUtils.hasText(request.getParameter(targetUrlParameter)))) {
		requestCache.removeRequest(request, response);
		super.onAuthenticationSuccess(request, response, authentication);

		return;
	}

	clearAuthenticationAttributes(request);

	// Use the DefaultSavedRequest URL
	
	String targetUrl = ""/"";
	
	if (authentication.getPrincipal() instanceof OAuthPrincipal) {
		OAuthPrincipal principal = (OAuthPrincipal) authentication.getPrincipal();
		String addInfoStatus = principal.getAddInfoStatus();
		
		this.setDefaultTargetUrl(""/oauth/write"");

		if (addInfoStatus.equals(CommonConst.OAUTH_ADDITIONAL_INFO_STATUS_BLANK)) {
			if (logger.isDebugEnabled()) {
				logger.debug(""Didn't input your additional infomation. Redrict input form."");
			}
			
			targetUrl = ""/oauth/write"";
		} else {
			if (logger.isDebugEnabled()) {
				logger.debug(""Redirecting to DefaultSavedRequest Url: "" + targetUrl);
			}
			
			targetUrl = savedRequest.getRedirectUrl();
		}
	}
	getRedirectStrategy().sendRedirect(request, response, targetUrl);
	
}"
61,JakduK_jakduk-api__e586faf9633439ea6bd46006612574a33d1010e9__e586faf9633439ea6bd46006612574a33d1010e9,src/com/jakduk/authentication/common/OAuthSuccessHandler.java,OAuthSuccessHandler,setRequestCache__(RequestCache requestCache),"public void setRequestCache(RequestCache requestCache) {
	this.requestCache = requestCache;
}"
62,JakduK_jakduk-api__e586faf9633439ea6bd46006612574a33d1010e9__e586faf9633439ea6bd46006612574a33d1010e9,src/com/jakduk/authentication/common/OAuthFailureHandler.java,OAuthFailureHandler,"onAuthenticationFailure__(HttpServletRequest request,
			HttpServletResponse response, AuthenticationException exception)","@Override
public void onAuthenticationFailure(HttpServletRequest request,
		HttpServletResponse response, AuthenticationException exception)
		throws IOException, ServletException {
	
}"
63,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-junit/src/test/java/net/jadler/junit/rule/JadlerRuleIntegrationTest.java,JadlerRuleIntegrationTest,cleanup__(),"@AfterClass
public static void cleanup() {
    Executor.closeIdleConnections();
}"
64,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-junit/src/test/java/net/jadler/junit/rule/JadlerRuleIntegrationTest.java,JadlerRuleIntegrationTest,jadlerUri__(),"private String jadlerUri() {
    return ""http://localhost:"" + port();
}"
65,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-junit/src/test/java/net/jadler/junit/rule/JadlerRuleIntegrationTest.java,JadlerRuleIntegrationTest,"header__(final String name, final String value)","private static HeaderMatcher header(final String name, final String value) {
    return new HeaderMatcher(name, value);
}"
66,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-junit/src/test/java/net/jadler/junit/rule/JadlerRuleIntegrationTest.java,JadlerRuleIntegrationTest.HeaderMatcher,"HeaderMatcher__(final String expectedName, final String expectedValue)","public HeaderMatcher(final String expectedName, final String expectedValue) {
    this.expectedName = expectedName;
    this.expectedValue = expectedValue;
}"
67,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-junit/src/test/java/net/jadler/junit/rule/JadlerRuleIntegrationTest.java,JadlerRuleIntegrationTest.HeaderMatcher,matches__(final Object item),"@Override
public boolean matches(final Object item) {
    if (item == null) {
        return false;
    }
    
    final Header actual = (Header) item;
    
    return this.expectedName.equals(actual.getName()) && this.expectedValue.equals(expectedValue);
}"
68,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-junit/src/test/java/net/jadler/junit/rule/JadlerRuleIntegrationTest.java,JadlerRuleIntegrationTest.HeaderMatcher,describeTo__(Description description),"@Override
public void describeTo(Description description) {
    description.appendText('<' + this.expectedName + "": "" + this.expectedValue + '>');
}"
69,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/utils/TestUtils.java,TestUtils,jadlerUri__(),"public static String jadlerUri() {
    return ""http://localhost:"" + port();
}"
70,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/utils/TestUtils.java,TestUtils,stringBodyOf__(final HttpResponse response),"public static String stringBodyOf(final HttpResponse response) throws IOException {
    final HttpEntity body = response.getEntity();
    final String charset = body.getContentType().getElements()[0].getParameterByName(""charset"").getValue();
    
    return IOUtils.toString(body.getContent(), charset);
}"
71,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/utils/TestUtils.java,TestUtils,rawBodyOf__(final HttpResponse response),"public static byte[] rawBodyOf(final HttpResponse response) throws IOException {
    return IOUtils.toByteArray(response.getEntity().getContent());
}"
72,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/utils/TestUtils.java,TestUtils.StatusRetriever,handleResponse__(final HttpResponse response),"@Override
public Integer handleResponse(final HttpResponse response) {
    return response.getStatusLine().getStatusCode();
}"
73,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/deprecated/DeprecatedDefaultsConfigurationTest.java,DeprecatedDefaultsConfigurationTest,cleanup__(),"@AfterClass
public static void cleanup() {
    Executor.closeIdleConnections();
}"
74,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/SuperDefaultsIntegrationTest.java,SuperDefaultsIntegrationTest,cleanup__(),"@AfterClass
public static void cleanup() {
    Executor.closeIdleConnections();
}"
75,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/StubbingResponseHeadersTest.java,StubbingResponseHeadersTest,cleanup__(),"@AfterClass
public static void cleanup() {
    Executor.closeIdleConnections();
}"
76,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/FacadeIntegrationTest.java,FacadeIntegrationTest,cleanup__(),"@AfterClass
public static void cleanup() {
    Executor.closeIdleConnections();
}"
77,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/TimeoutIntegrationTest.java,TimeoutIntegrationTest,cleanup__(),"@AfterClass
public static void cleanup() {
    Executor.closeIdleConnections();
}"
78,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/StubbingIntegrationTest.java,StubbingIntegrationTest,cleanup__(),"@AfterClass
public static void cleanup() {
    Executor.closeIdleConnections();
}"
79,jadler-mocking_jadler__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e__2d6d47d2f90174e874511dfc3e2f1f85d521cb8e,jadler-all/src/test/java/net/jadler/VerificationIntegrationTest.java,VerificationIntegrationTest,cleanup__(),"@AfterClass
public static void cleanup() {
    Executor.closeIdleConnections();
}"
80,codenvy_codenvy__8a0a2026919db64ed2a49c73f7950a1195c0efd7__8a0a2026919db64ed2a49c73f7950a1195c0efd7,preferences/impl/src/test/java/com/codenvy/cli/preferences/file/FilePreferencesTest.java,FilePreferencesTest,getPreferencesFile__(String resourceName),"protected FilePreferences getPreferencesFile(String resourceName) throws IOException {

    File tempPreferencesFile = File.createTempFile(""preferencesTest"", "".json"");
    tempPreferencesFile.deleteOnExit();
    try (InputStream is = FilePreferencesTest.class.getResourceAsStream(resourceName)) {
        if (is == null) {
            throw new IllegalStateException(""Unable to find the resource '"" + resourceName + ""'."");
        }
        Files.copy(is, tempPreferencesFile.toPath(), REPLACE_EXISTING);
    }

    // disable the save
    return new FilePreferences(tempPreferencesFile).setDisableSaveOnChanges();
}"
81,apache_helix__308c2cc6f45d9c942d9b4a8f52e4cf534528e2d5__308c2cc6f45d9c942d9b4a8f52e4cf534528e2d5,helix-core/src/test/java/org/apache/helix/manager/zk/TestZkFlapping.java,TestZkFlapping.ZkStateCountListener,handleSessionEstablishmentError__(Throwable var1),"@Override
public void handleSessionEstablishmentError(Throwable var1) throws Exception {
}"
82,apache_helix__308c2cc6f45d9c942d9b4a8f52e4cf534528e2d5__308c2cc6f45d9c942d9b4a8f52e4cf534528e2d5,helix-core/src/main/java/org/apache/helix/manager/zk/ZkCallbackCache.java,ZkCallbackCache,handleSessionEstablishmentError__(Throwable var1),"@Override
public void handleSessionEstablishmentError(Throwable var1) throws Exception {
}"
83,apache_helix__308c2cc6f45d9c942d9b4a8f52e4cf534528e2d5__308c2cc6f45d9c942d9b4a8f52e4cf534528e2d5,helix-core/src/main/java/org/apache/helix/manager/zk/ZKHelixManager.java,ZKHelixManager,handleSessionEstablishmentError__(Throwable var1),"@Override
public void handleSessionEstablishmentError(Throwable var1) throws Exception {
}"
84,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/authoriser/AuthorisationProvider.java,FACTORY,create__(Path keyFile),"public static AuthorisationProvider create(Path keyFile) throws IOException {
    return new OneDriveAuthorisationProvider(keyFile);
}"
85,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/RWOneDriveProvider.java,RWOneDriveProvider,RWOneDriveProvider__(AuthorisationProvider authoriser),"public RWOneDriveProvider(AuthorisationProvider authoriser) {
    super(authoriser);
}"
86,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/RWOneDriveProvider.java,RWOneDriveProvider.WriteItemFacet,"WriteItemFacet__(String name, FileSystemInfoFacet fileSystemInfo, boolean multipart)","public WriteItemFacet(String name, FileSystemInfoFacet fileSystemInfo, boolean multipart) {
    this.name = name;
    this.fileSystemInfo = fileSystemInfo;
    this.multipart = multipart ? ""cid:content"" : null;
}"
87,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/RWOneDriveProvider.java,RWOneDriveProvider.UploadSessionFacet,UploadSessionFacet__(String name),"private UploadSessionFacet(String name) {
    this.item = new FileDetail(name);
}"
88,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/RWOneDriveProvider.java,RWOneDriveProvider.UploadSessionFacet.FileDetail,FileDetail__(String name),"public FileDetail(String name) {
    this.name = name;
}"
89,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/ROOneDriveProvider.java,ROOneDriveProvider,ROOneDriveProvider__(final AuthorisationProvider authoriser),"public ROOneDriveProvider(final AuthorisationProvider authoriser) {
    requestFactory =
            HTTP_TRANSPORT.createRequestFactory(new HttpRequestInitializer() {
                @Override
                public void initialize(HttpRequest request) {
                    request.setParser(new JsonObjectParser(JSON_FACTORY));
                    try {
                        request.getHeaders().setAuthorization(""bearer "" + authoriser.getAccessToken());
                    } catch (IOException e) {
                        throw Throwables.propagate(e);
                    }

                    request.setUnsuccessfulResponseHandler(new OneDriveResponseHandler(authoriser));
                }
            });
}"
90,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/serialization/JsonDateSerializer.java,JsonDateSerializer,serialize__(Date value),"public synchronized String serialize(Date value) {
    return df.format(value);
}"
91,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/serialization/JsonDateSerializer.java,JsonDateSerializer,deserialize__(String value),"public synchronized Date deserialize(String value) {
    try {
        return df.parse(value);
    } catch (ParseException e) {
        try {
            return df2.parse(value);
        } catch (ParseException e1) {
            throw Throwables.propagate(e);
        }

    }
}"
92,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveResponseHandler.java,OneDriveResponseHandler,OneDriveResponseHandler__(AuthorisationProvider authoriser),"public OneDriveResponseHandler(AuthorisationProvider authoriser) {
    this.authoriser = authoriser;
}"
93,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveResponseHandler.java,OneDriveResponseHandler,"handleResponse__(HttpRequest request, HttpResponse response, boolean supportsRetry)","@Override
public boolean handleResponse(HttpRequest request, HttpResponse response, boolean supportsRetry) throws IOException {

    if (!supportsRetry) {
        return false;
    }

    if (response.getStatusCode() == HttpStatusCodes.STATUS_CODE_UNAUTHORIZED) {
        authoriser.refresh();
        return true;
    }

    // check if back-off is required for this response
    if (isRequired(response)) {
        try {
            return BackOffUtils.next(sleeper, backOff);
        } catch (InterruptedException exception) {
            // ignore
        }
    }

    return false;
}"
94,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveResponseHandler.java,OneDriveResponseHandler,isRequired__(HttpResponse httpResponse),"public boolean isRequired(HttpResponse httpResponse) {
    return httpResponse.getStatusCode() / 100 == 5 || httpResponse.getStatusCode() == 429;
}"
95,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/authoriser/OneDriveAuthorisationProvider.java,OneDriveAuthorisationProvider,getTokenFromCode__(final String code),"private void getTokenFromCode(final String code) throws IOException {

    log.debug(""Fetching authorisation token using authorisation code"");
    HttpRequest request =
            HTTP_TRANSPORT.createRequestFactory().buildGetRequest(new GenericUrl(""https://login.live.com/oauth20_token.srf"") {
                @Key(""client_id"")
                private String id = clientId;
                @Key(""client_secret"")
                private String secret = clientSecret;
                @Key
                private String authCode = code;
                @Key(""grant_type"")
                private String grantType = ""authorization_code"";
                @Key(""redirect_uri"")
                private String redirect = ""https://login.live.com/oauth20_desktop.srf"";
            });

    request.setParser(new JsonObjectParser(JSON_FACTORY));

    processResponse(request.execute());
}"
96,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/authoriser/OneDriveAuthorisationProvider.java,OneDriveAuthorisationProvider,getTokenFromRefreshToken__(final String refreshToken),"private void getTokenFromRefreshToken(final String refreshToken) throws IOException {

    log.debug(""Fetching authorisation token using refresh token"");

    HttpRequest request =
            HTTP_TRANSPORT.createRequestFactory().buildGetRequest(new GenericUrl(""https://login.live.com/oauth20_token.srf"") {
                @Key(""client_id"")
                private String id = clientId;
                @Key(""client_secret"")
                private String secret = clientSecret;
                @Key(""refresh_token"")
                private String token = refreshToken;
                @Key(""grant_type"")
                private String grantType = ""refresh_token"";
                @Key(""redirect_uri"")
                private String redirect = ""https://login.live.com/oauth20_desktop.srf"";
            });

    request.setParser(new JsonObjectParser(JSON_FACTORY));

    processResponse(request.execute());
}"
97,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveUrl.java,OneDriveUrl,OneDriveUrl__(String encodedUrl),"public OneDriveUrl(String encodedUrl) {
    super(encodedUrl);
}"
98,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveUrl.java,OneDriveUrl,defaultDrive__(),"public static OneDriveUrl defaultDrive() {
    return new OneDriveUrl(rootUrl + ""/drive"");
}"
99,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveUrl.java,OneDriveUrl,driveRoot__(),"public static OneDriveUrl driveRoot() {
    return new OneDriveUrl(rootUrl + ""/drive/root"");
}"
100,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveUrl.java,OneDriveUrl,children__(String id),"public static OneDriveUrl children(String id) {
    return new OneDriveUrl(rootUrl + ""/drive/items/"" + id + ""/children"");
}"
101,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveUrl.java,OneDriveUrl,"putContent__(String id, String name)","public static OneDriveUrl putContent(String id, String name) {
    return new OneDriveUrl(rootUrl + ""/drive/items/"" + id + "":/"" + name + "":/content"");
}"
102,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveUrl.java,OneDriveUrl,postMultiPart__(String id),"public static OneDriveUrl postMultiPart(String id) {
    return new OneDriveUrl(rootUrl + ""/drive/items/"" + id + ""/children"");
}"
103,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveUrl.java,OneDriveUrl,"createUploadSession__(String id, String name)","public static OneDriveUrl createUploadSession(String id, String name) {
    return new OneDriveUrl(rootUrl + ""/drive/items/"" + id + "":/"" + name + "":/upload.createSession"");
}"
104,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveUrl.java,OneDriveUrl,getPath__(String path),"public static OneDriveUrl getPath(String path) {
    return new OneDriveUrl(rootUrl + ""/drive/root:/"" + path);
}"
105,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveUrl.java,OneDriveUrl,item__(String id),"public static GenericUrl item(String id) {
    return new OneDriveUrl(rootUrl + ""/drive/items/"" + id);
}"
106,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveUrl.java,OneDriveUrl,content__(String id),"public static GenericUrl content(String id) {
    return new OneDriveUrl(rootUrl + ""/drive/items/"" + id + ""/content"");
}"
107,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveUrl.java,OneDriveUrl,setToken__(String token),"public void setToken(String token) {
    this.token = token;
}"
108,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveProvider.java,FACTORY,readOnlyApi__(AuthorisationProvider authoriser),"public static OneDriveProvider readOnlyApi(AuthorisationProvider authoriser) {
    return new ROOneDriveProvider(authoriser);
}"
109,wooti_onedrive-java-client__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d__0b7ee1a476e4a315bfb18842b1978cc6cc450b6d,src/main/java/com/wouterbreukink/onedrive/client/OneDriveProvider.java,FACTORY,readWriteApi__(AuthorisationProvider authoriser),"public static OneDriveProvider readWriteApi(AuthorisationProvider authoriser) {
    return new RWOneDriveProvider(authoriser);
}"
110,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4jRolesResourceFilterFactory.java,FF4jRolesResourceFilterFactory,create__(AbstractMethod am),"@Override
public List<ResourceFilter> create(AbstractMethod am) {        
    
    // Enable authorization through RolesAllowed and JSR250 annotation
    List<ResourceFilter> rolesFilters = super.create(am);
    if (null == rolesFilters) {
        rolesFilters = new ArrayList<ResourceFilter>();
    }

    // Convert ionto mutable List, so as to add more filters that we need
    // (RolesAllowedResourceFilterFactory generates immutable list of filters)
    List<ResourceFilter> filters = new ArrayList<ResourceFilter>(rolesFilters);
    
    // As Authorization is enable, authenticate is mandator and came first
    filters.add(0, new FF4jSecurityContextFilter());

    return filters;
}"
111,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/EventRepositoryApiBean.java,EventRepositoryApiBean,EventRepositoryApiBean__(),"public EventRepositoryApiBean() {
}"
112,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/EventRepositoryApiBean.java,EventRepositoryApiBean,"EventRepositoryApiBean__(EventRepository evtRepository, Long start, Long end)","public EventRepositoryApiBean(EventRepository evtRepository, Long start, Long end) {
    type = evtRepository.getClass().getCanonicalName();
    // Today
    if (start == null) {
        Calendar c = Calendar.getInstance();
        c.set(Calendar.HOUR_OF_DAY, 0);
        c.set(Calendar.MINUTE, 0);
        c.set(Calendar.SECOND, 0);
        start = c.getTimeInMillis();
    }
    // Tomorrow 00:00
    if (end == null) {
        Calendar c2 = Calendar.getInstance();
        c2.setTime(new Date(System.currentTimeMillis() + 1000 * 3600 * 24));
        c2.set(Calendar.HOUR_OF_DAY, 0);
        c2.set(Calendar.MINUTE, 0);
        c2.set(Calendar.SECOND, 0);
        end = c2.getTimeInMillis();
    }
    // Create PIE
    PieChart pie = evtRepository.getHitsPieChart(start, end);
    eventsPie = new PieChartApiBean(pie);
    // Create BARCHART
    BarChart bc = evtRepository.getHitsBarChart(start, end, 24);
    barChart = new BarChartApiBean(bc);
    // Total Count
    for(PieSector sector : pie.getSectors()) {
        hitCount += sector.getValue();
    }
}"
113,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/EventRepositoryApiBean.java,EventRepositoryApiBean,getType__(),"public String getType() {
    return type;
}"
114,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/EventRepositoryApiBean.java,EventRepositoryApiBean,setType__(String type),"public void setType(String type) {
    this.type = type;
}"
115,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/EventRepositoryApiBean.java,EventRepositoryApiBean,getHitCount__(),"public int getHitCount() {
    return hitCount;
}"
116,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/EventRepositoryApiBean.java,EventRepositoryApiBean,setHitCount__(int hitCount),"public void setHitCount(int hitCount) {
    this.hitCount = hitCount;
}"
117,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/EventRepositoryApiBean.java,EventRepositoryApiBean,getEventsPie__(),"public PieChartApiBean getEventsPie() {
    return eventsPie;
}"
118,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/EventRepositoryApiBean.java,EventRepositoryApiBean,setEventsPie__(PieChartApiBean eventsPie),"public void setEventsPie(PieChartApiBean eventsPie) {
    this.eventsPie = eventsPie;
}"
119,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/EventRepositoryApiBean.java,EventRepositoryApiBean,getBarChart__(),"public BarChartApiBean getBarChart() {
    return barChart;
}"
120,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/EventRepositoryApiBean.java,EventRepositoryApiBean,setBarChart__(BarChartApiBean barChart),"public void setBarChart(BarChartApiBean barChart) {
    this.barChart = barChart;
}"
121,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/AuthorizationsManagerApiBean.java,AuthorizationsManagerApiBean,AuthorizationsManagerApiBean__(),"public AuthorizationsManagerApiBean() {
}"
122,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/AuthorizationsManagerApiBean.java,AuthorizationsManagerApiBean,AuthorizationsManagerApiBean__(AuthorizationsManager authMger),"public AuthorizationsManagerApiBean(AuthorizationsManager authMger) {
    type = authMger.getClass().getCanonicalName();
    permissions = new ArrayList<String>(authMger.listAllPermissions());
}"
123,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/AuthorizationsManagerApiBean.java,AuthorizationsManagerApiBean,getType__(),"public String getType() {
    return type;
}"
124,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/AuthorizationsManagerApiBean.java,AuthorizationsManagerApiBean,setType__(String type),"public void setType(String type) {
    this.type = type;
}"
125,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/AuthorizationsManagerApiBean.java,AuthorizationsManagerApiBean,getPermissions__(),"public List<String> getPermissions() {
    return permissions;
}"
126,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/AuthorizationsManagerApiBean.java,AuthorizationsManagerApiBean,setPermissions__(List<String> permissions),"public void setPermissions(List<String> permissions) {
    this.permissions = permissions;
}"
127,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,FeatureStoreApiBean__(),"public FeatureStoreApiBean() {
}"
128,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,FeatureStoreApiBean__(FeatureStore featureStore),"public FeatureStoreApiBean(FeatureStore featureStore) {
    type = featureStore.getClass().getCanonicalName();
    if (featureStore.isCached()) {
        cache = new CacheApiBean(featureStore);
    }
    features = new ArrayList<String>(featureStore.readAll().keySet());
    groups   = new ArrayList<String>(featureStore.readAllGroups());
    numberOfFeatures = features.size();
    numberOfGroups = groups.size();
}"
129,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,getType__(),"public String getType() {
    return type;
}"
130,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,setType__(String type),"public void setType(String type) {
    this.type = type;
}"
131,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,getNumberOfFeatures__(),"public int getNumberOfFeatures() {
    return numberOfFeatures;
}"
132,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,setNumberOfFeatures__(int numberOfFeatures),"public void setNumberOfFeatures(int numberOfFeatures) {
    this.numberOfFeatures = numberOfFeatures;
}"
133,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,getNumberOfGroups__(),"public int getNumberOfGroups() {
    return numberOfGroups;
}"
134,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,setNumberOfGroups__(int numberOfGroups),"public void setNumberOfGroups(int numberOfGroups) {
    this.numberOfGroups = numberOfGroups;
}"
135,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,getFeatures__(),"public List<String> getFeatures() {
    return features;
}"
136,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,setFeatures__(List<String> features),"public void setFeatures(List<String> features) {
    this.features = features;
}"
137,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,getGroups__(),"public List<String> getGroups() {
    return groups;
}"
138,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,setGroups__(List<String> groups),"public void setGroups(List<String> groups) {
    this.groups = groups;
}"
139,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,getCache__(),"public CacheApiBean getCache() {
    return cache;
}"
140,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureStoreApiBean.java,FeatureStoreApiBean,setCache__(CacheApiBean cache),"public void setCache(CacheApiBean cache) {
    this.cache = cache;
}"
141,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/RuntimeExceptionMapper.java,RuntimeExceptionMapper,toResponse__(RuntimeException rex),"@Override
public Response toResponse(RuntimeException rex) {
    return Response.status(getStatus(rex)).entity(rex.getMessage()).type(CONTENT_TYPE).build();
}"
142,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/RuntimeExceptionMapper.java,RuntimeExceptionMapper,getStatus__(RuntimeException rex),"public Status getStatus(RuntimeException rex) {
    if ((rex instanceof FeatureNotFoundException) || (rex instanceof GroupNotFoundException)) {
        return Status.NOT_FOUND;
    }
    if (rex instanceof FeatureAlreadyExistException) {
        return Status.CONFLICT;
    }
    if (rex instanceof FeatureAccessException) {
        return Status.SERVICE_UNAVAILABLE;
    }
    return Status.INTERNAL_SERVER_ERROR;
}"
143,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FF4jResource.java,FF4jResource,getStatus__(),"@GET
@ApiOperation(
        value= ""Display <b>ff4j</b> status overview"",
        notes= ""Display informations related to <b>Monitoring</b>, <b>Security</b>, <b>Cache</b> and <b>Store</b>"")
@ApiResponses(
            @ApiResponse(code = 200, message= ""Success, return status of ff4j instance"", response=FF4jStatusApiBean.class))
@Produces(MediaType.APPLICATION_JSON)
public FF4jStatusApiBean getStatus() {
   return new FF4jStatusApiBean(ff4j);
}"
144,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FF4jResource.java,FF4jResource,getSecurityStatus__(),"@GET
@Path(""/"" + RESOURCE_SECURITY)
@Produces(MediaType.APPLICATION_JSON)
@ApiOperation(value= ""Display <b>Security</b> informations (permissions manager)"", 
notes=""Security is implemented through dedicated <b>AuthorizationsManager</b> but it's not mandatory"")
@ApiResponses({ @ApiResponse(code = 200, message= ""Status of current ff4j security bean"", response=AuthorizationsManagerApiBean.class),
                @ApiResponse(code = 404, message= ""No security defined, no response"") })
public Response getSecurityStatus() {
    AuthorizationsManager authMgner = ff4j.getAuthorizationsManager();
    if (null == authMgner) {
        return Response.status(Status.NOT_FOUND).entity(""No security has been defined"").build();
    }
    return Response.ok(new AuthorizationsManagerApiBean(authMgner)).build();
}"
145,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FF4jResource.java,FF4jResource,"check__(@Context HttpHeaders headers, @PathParam(""uid"") String uid)","@GET
@Path(""/"" + OPERATION_CHECK + ""/{uid}"") 
@Produces(MediaType.TEXT_PLAIN)
@ApiOperation(value= ""<b>Simple check</b> feature toggle"", response=Boolean.class)
@ApiResponses({
    @ApiResponse(code = 200, message= ""if feature is flipped""),
    @ApiResponse(code = 404, message= ""feature has not been found"")})
public Response check(@Context HttpHeaders headers, @PathParam(""uid"") String uid) {
    // HoldSecurity Context
    holdSecurityContext();
    
    // Expected Custom FlipStrategy (JSON)
    if (!ff4j.getFeatureStore().exist(uid)) {
        String errMsg = new FeatureNotFoundException(uid).getMessage();
        return Response.status(Response.Status.NOT_FOUND).entity(errMsg).build();
    }
    return Response.ok(String.valueOf(ff4j.check(uid))).build();
}"
146,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FF4jResource.java,FF4jResource,"checkPOST__(@Context HttpHeaders headers, @PathParam(""uid"") String uid, MultivaluedMap<String, String> formParams)","@POST
@Path(""/"" + OPERATION_CHECK + ""/{uid}"") 
@Produces(MediaType.TEXT_PLAIN)
@Consumes(MediaType.APPLICATION_FORM_URLENCODED)
@ApiOperation(value= ""<b>Advanced check</b> feature toggle (parameterized)"", response=Boolean.class)
@ApiResponses(@ApiResponse(code = 200, message= ""if feature is flipped""))
public Response checkPOST(@Context HttpHeaders headers, @PathParam(""uid"") String uid, MultivaluedMap<String, String> formParams) {
    // HoldSecurity Context
    holdSecurityContext();
    
    if (!ff4j.getFeatureStore().exist(uid)) {
        String errMsg = new FeatureNotFoundException(uid).getMessage();
        return Response.status(Response.Status.NOT_FOUND).entity(errMsg).build();
   }

   // Flipping Strategy may expected some dedicated parameters if not present, will return 400
   FlippingExecutionContext flipExecCtx = new FlippingExecutionContext();
   for (String key : formParams.keySet()) {
       flipExecCtx.putString(key, formParams.getFirst(key));
   }
   try {
       boolean flipped = ff4j.check(uid, flipExecCtx);
       return Response.ok(String.valueOf(flipped)).build();
   } catch(IllegalArgumentException iae) {
       String errMsg = ""Invalid parameter "" + iae.getMessage();
       return Response.status(Response.Status.BAD_REQUEST).entity(errMsg).build();
   }
   
}"
147,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,FeatureApiBean__(),"public FeatureApiBean() {
}"
148,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,FeatureApiBean__(Feature f),"public FeatureApiBean(Feature f) {
    this.uid         = f.getUid();
    this.enable      = f.isEnable();
    this.description = f.getDescription();
    this.group       = f.getGroup();
    this.permissions = new ArrayList<String>(f.getPermissions());
    if (f.getFlippingStrategy() != null) {
        this.flippingStrategy = new FlippingStrategyApiBean(f.getFlippingStrategy());
    }
}"
149,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,getUid__(),"public String getUid() {
    return uid;
}"
150,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,setUid__(String uid),"public void setUid(String uid) {
    this.uid = uid;
}"
151,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,isEnable__(),"public boolean isEnable() {
    return enable;
}"
152,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,setEnable__(boolean enable),"public void setEnable(boolean enable) {
    this.enable = enable;
}"
153,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,getDescription__(),"public String getDescription() {
    return description;
}"
154,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,setDescription__(String description),"public void setDescription(String description) {
    this.description = description;
}"
155,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,getGroup__(),"public String getGroup() {
    return group;
}"
156,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,setGroup__(String group),"public void setGroup(String group) {
    this.group = group;
}"
157,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,getPermissions__(),"public List<String> getPermissions() {
    return permissions;
}"
158,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,setPermissions__(List<String> permissions),"public void setPermissions(List<String> permissions) {
    this.permissions = permissions;
}"
159,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,getFlippingStrategy__(),"public FlippingStrategyApiBean getFlippingStrategy() {
    return flippingStrategy;
}"
160,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureApiBean.java,FeatureApiBean,setFlippingStrategy__(FlippingStrategyApiBean flippingStrategy),"public void setFlippingStrategy(FlippingStrategyApiBean flippingStrategy) {
    this.flippingStrategy = flippingStrategy;
}"
161,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/GroupApiBean.java,GroupApiBean,getGroupName__(),"public String getGroupName() {
    return groupName;
}"
162,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/GroupApiBean.java,GroupApiBean,setGroupName__(String groupName),"public void setGroupName(String groupName) {
    this.groupName = groupName;
}"
163,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/GroupApiBean.java,GroupApiBean,getFeatures__(),"public List<FeatureApiBean> getFeatures() {
    return features;
}"
164,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/GroupApiBean.java,GroupApiBean,setFeatures__(List<FeatureApiBean> features),"public void setFeatures(List<FeatureApiBean> features) {
    this.features = features;
}"
165,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/GroupDescApiBean.java,GroupDescApiBean,GroupDescApiBean__(),"public GroupDescApiBean() {
}"
166,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/GroupDescApiBean.java,GroupDescApiBean,"GroupDescApiBean__(String groupName, List < String > names)","public GroupDescApiBean(String groupName, List < String > names) {
    this.groupName = groupName;
    this.features = names;
}"
167,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/GroupDescApiBean.java,GroupDescApiBean,getGroupName__(),"public String getGroupName() {
    return groupName;
}"
168,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/GroupDescApiBean.java,GroupDescApiBean,setGroupName__(String groupName),"public void setGroupName(String groupName) {
    this.groupName = groupName;
}"
169,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/GroupDescApiBean.java,GroupDescApiBean,getFeatures__(),"public List<String> getFeatures() {
    return features;
}"
170,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/GroupDescApiBean.java,GroupDescApiBean,setFeatures__(List<String> features),"public void setFeatures(List<String> features) {
    this.features = features;
}"
171,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarChartApiBean.java,BarChartApiBean,BarChartApiBean__(BarChart barChart),"public BarChartApiBean(BarChart barChart) {
    this.title = barChart.getTitle();
    this.labels = barChart.getLabels();
    for(BarSeries bs : barChart.getSeries().values()) {
        series.add(new BarSeriesApiBean(bs));
    }
}"
172,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarChartApiBean.java,BarChartApiBean,getTitle__(),"public String getTitle() {
    return title;
}"
173,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarChartApiBean.java,BarChartApiBean,setTitle__(String title),"public void setTitle(String title) {
    this.title = title;
}"
174,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarChartApiBean.java,BarChartApiBean,getLabels__(),"public List<String> getLabels() {
    return labels;
}"
175,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarChartApiBean.java,BarChartApiBean,setLabels__(List<String> labels),"public void setLabels(List<String> labels) {
    this.labels = labels;
}"
176,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarChartApiBean.java,BarChartApiBean,getSeries__(),"public List<BarSeriesApiBean> getSeries() {
    return series;
}"
177,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarChartApiBean.java,BarChartApiBean,setSeries__(List<BarSeriesApiBean> series),"public void setSeries(List<BarSeriesApiBean> series) {
    this.series = series;
}"
178,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/PieChartApiBean.java,PieChartApiBean,PieChartApiBean__(PieChart pie),"public PieChartApiBean(PieChart pie) {
    title = pie.getTitle();
    for (PieSector pieSector : pie.getSectors()) {
        sectors.add(new PieSectorApiBean(pieSector));
    }
}"
179,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/PieChartApiBean.java,PieChartApiBean,getTitle__(),"public String getTitle() {
    return title;
}"
180,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/PieChartApiBean.java,PieChartApiBean,setTitle__(String title),"public void setTitle(String title) {
    this.title = title;
}"
181,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/PieChartApiBean.java,PieChartApiBean,getSectors__(),"public List<PieSectorApiBean> getSectors() {
    return sectors;
}"
182,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/PieChartApiBean.java,PieChartApiBean,setSectors__(List<PieSectorApiBean> sectors),"public void setSectors(List<PieSectorApiBean> sectors) {
    this.sectors = sectors;
}"
183,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarSeriesApiBean.java,BarSeriesApiBean,BarSeriesApiBean__(BarSeries barSeries),"public BarSeriesApiBean(BarSeries barSeries) {
    this.label = barSeries.getLabel();
    this.color = barSeries.getColor();
    this.values = barSeries.getValues();
}"
184,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarSeriesApiBean.java,BarSeriesApiBean,getLabel__(),"public String getLabel() {
    return label;
}"
185,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarSeriesApiBean.java,BarSeriesApiBean,setLabel__(String label),"public void setLabel(String label) {
    this.label = label;
}"
186,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarSeriesApiBean.java,BarSeriesApiBean,getColor__(),"public String getColor() {
    return color;
}"
187,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarSeriesApiBean.java,BarSeriesApiBean,setColor__(String color),"public void setColor(String color) {
    this.color = color;
}"
188,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarSeriesApiBean.java,BarSeriesApiBean,getValues__(),"public List<Double> getValues() {
    return values;
}"
189,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/BarSeriesApiBean.java,BarSeriesApiBean,setValues__(List<Double> values),"public void setValues(List<Double> values) {
    this.values = values;
}"
190,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FlippingStrategyApiBean.java,FlippingStrategyApiBean,FlippingStrategyApiBean__(),"public FlippingStrategyApiBean() {
}"
191,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FlippingStrategyApiBean.java,FlippingStrategyApiBean,FlippingStrategyApiBean__(FlippingStrategy fs),"public FlippingStrategyApiBean(FlippingStrategy fs) {
    this.type = fs.getClass().getCanonicalName();
    this.initParams = fs.getInitParams();
}"
192,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FlippingStrategyApiBean.java,FlippingStrategyApiBean,getType__(),"public String getType() {
    return type;
}"
193,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FlippingStrategyApiBean.java,FlippingStrategyApiBean,setType__(String type),"public void setType(String type) {
    this.type = type;
}"
194,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FlippingStrategyApiBean.java,FlippingStrategyApiBean,getInitParams__(),"public Map<String, String> getInitParams() {
    return initParams;
}"
195,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FlippingStrategyApiBean.java,FlippingStrategyApiBean,"setInitParams__(Map<String, String> initParams)","public void setInitParams(Map<String, String> initParams) {
    this.initParams = initParams;
}"
196,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/CacheApiBean.java,CacheApiBean,CacheApiBean__(FeatureStore featureStore),"public CacheApiBean(FeatureStore featureStore) {
    if (featureStore.isCached()) {
        cacheStore    = featureStore.getCachedTargetStore();
        cacheProvider = featureStore.getCacheProvider();
        featureNames  = ((FF4jCacheProxy) featureStore).getCacheManager().listCachedFeatureNames();
    }
}"
197,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/CacheApiBean.java,CacheApiBean,getCacheProvider__(),"public String getCacheProvider() {
    return cacheProvider;
}"
198,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/CacheApiBean.java,CacheApiBean,setCacheProvider__(String cacheProvider),"public void setCacheProvider(String cacheProvider) {
    this.cacheProvider = cacheProvider;
}"
199,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/CacheApiBean.java,CacheApiBean,getCacheStore__(),"public String getCacheStore() {
    return cacheStore;
}"
200,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/CacheApiBean.java,CacheApiBean,setCacheStore__(String cacheStore),"public void setCacheStore(String cacheStore) {
    this.cacheStore = cacheStore;
}"
201,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/CacheApiBean.java,CacheApiBean,getFeatureNames__(),"public Set<String> getFeatureNames() {
    return featureNames;
}"
202,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/CacheApiBean.java,CacheApiBean,setFeatureNames__(Set<String> featureNames),"public void setFeatureNames(Set<String> featureNames) {
    this.featureNames = featureNames;
}"
203,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/AbstractResource.java,AbstractResource,getRepo__(),"public EventRepository getRepo() {
    if (repo == null) {
        repo = ff4j.getEventRepository();
    }
    return repo;
}"
204,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/AbstractResource.java,AbstractResource,getFeatureStore__(),"public FeatureStore getFeatureStore() {
    if (store == null) {
        store = ff4j.getFeatureStore();
    }
    return store;
}"
205,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/AbstractResource.java,AbstractResource,holdSecurityContext__(),"public void holdSecurityContext() {
    if (securityContext != null) {
        if (securityContext instanceof FF4jSecurityContext) {
            securityContextHolder.set((FF4jSecurityContext) securityContext);
        }
    }
}"
206,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureResource.java,FeatureResource,FeatureResource__(),public FeatureResource() {}
207,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureResource.java,FeatureResource,"read__(@PathParam(""uid"") String id)","@GET
@RolesAllowed({ROLE_READ})
@Produces(MediaType.APPLICATION_JSON)
@ApiOperation(value= ""Read information about a feature"", response=FeatureApiBean.class)
@ApiResponses({
    @ApiResponse(code = 200, message= ""Information about features""), 
    @ApiResponse(code = 404, message= ""Feature not found"") })
public Response read(@PathParam(""uid"") String id) {
   if (!ff4j.getFeatureStore().exist(id)) {
        String errMsg = new FeatureNotFoundException(id).getMessage();
        return Response.status(Response.Status.NOT_FOUND).entity(errMsg).build();
   }
   return  Response.ok(new FeatureApiBean(ff4j.getFeatureStore().read(id))).build();
}"
208,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureResource.java,FeatureResource,"upsertFeature__(@Context HttpHeaders headers, @PathParam(""uid"") String id, FeatureApiBean fApiBean)","@PUT
@RolesAllowed({ROLE_WRITE})
@ApiOperation(value= ""Create of update a feature"", response=Response.class)
@Consumes(MediaType.APPLICATION_JSON)
@Produces(MediaType.APPLICATION_JSON)
@ApiResponses({
    @ApiResponse(code = 201, message= ""Feature has been created""), 
    @ApiResponse(code = 204, message= ""No content, feature is updated"") })
public Response upsertFeature(@Context HttpHeaders headers, @PathParam(""uid"") String id, FeatureApiBean fApiBean) {
    // Parameter validations
    if ("""".equals(id) || !id.equals(fApiBean.getUid())) {
        String errMsg = ""Invalid identifier expected "" + id;
        return Response.status(Response.Status.BAD_REQUEST).entity(errMsg).build();
    }
    
    // Building feature
    Feature feat = new Feature(id);
    feat.setDescription(fApiBean.getDescription());
    feat.setEnable(fApiBean.isEnable());
    feat.setGroup(fApiBean.getGroup());
    feat.setPermissions(new HashSet<String>(fApiBean.getPermissions()));
    FlippingStrategyApiBean flipApiBean = fApiBean.getFlippingStrategy();
        if (flipApiBean != null) {
        FlippingStrategy strategy = null;
        try {
            strategy = (FlippingStrategy) Class.forName(flipApiBean.getType()).newInstance();
            Map<String, String> initparams = flipApiBean.getInitParams();
            strategy.init(id, initparams);
        } catch (InstantiationException e) {
            String errMsg = ""Cannot read Flipping Strategy, does not seems to have a DEFAULT constructor, "" + e.getMessage();
            return Response.status(Response.Status.BAD_REQUEST).entity(errMsg).build();
        } catch (IllegalAccessException e) {
            String errMsg = ""Cannot read Flipping Strategy,does not seems to have a PUBLIC constructor, "" + e.getMessage();
            return Response.status(Response.Status.BAD_REQUEST).entity(errMsg).build();
        } catch (ClassNotFoundException e) {
            String errMsg = ""Cannot read Flipping Strategy, className has not been found within classpath, check syntax, "" + e.getMessage();
            return Response.status(Response.Status.BAD_REQUEST).entity(errMsg).build();
        }
        feat.setFlippingStrategy(strategy);
    }
    
    // Update or create ? 
    if (!getFeatureStore().exist(feat.getUid())) {
        getFeatureStore().create(feat);
        String location = String.format(""%s"", uriInfo.getAbsolutePath().toString());
        try {
            return Response.created(new URI(location)).build();
        } catch (URISyntaxException e) {
            return Response.status(Response.Status.CREATED).header(LOCATION, location).entity(id).build();
        }
    }
    
    // Create
    getFeatureStore().update(feat);
    return Response.noContent().build();
}"
209,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureResource.java,FeatureResource,"deleteFeature__(@PathParam(""uid"") String id)","@DELETE
@RolesAllowed({ROLE_WRITE})
@Produces(MediaType.TEXT_PLAIN)
@ApiOperation(value= ""Delete a feature"", response=Response.class)
@ApiResponses({
    @ApiResponse(code = 404, message= ""Feature has not been found""), 
    @ApiResponse(code = 204, message= ""No content, feature is deleted""),
    @ApiResponse(code = 400, message= ""Bad identifier""),
    })
public Response deleteFeature(@PathParam(""uid"") String id) {
    if (id == null || """".equals(id)) {
        String errMsg = ""Invalid URL : Must be '/features/{uid}' with {uid} not null nor empty"";
        return Response.status(Response.Status.BAD_REQUEST).entity(errMsg).build();
    }
    if (!ff4j.getFeatureStore().exist(id)) {
        String errMsg = new FeatureNotFoundException(id).getMessage();
        return Response.status(Response.Status.NOT_FOUND).entity(errMsg).build();
    }
    getFeatureStore().delete(id);
    return Response.noContent().build();
}"
210,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureResource.java,FeatureResource,"operationEnable__(@PathParam(""uid"") String id)","@POST
@Path(""/"" + OPERATION_ENABLE)
@RolesAllowed({ROLE_WRITE})
@ApiOperation(value= ""Enable a feature"", response=Response.class)
@ApiResponses({
    @ApiResponse(code = 204, message= ""Features has been enabled""), 
    @ApiResponse(code = 404, message= ""Feature not found"") })
public Response operationEnable(@PathParam(""uid"") String id) {
    if (!ff4j.getFeatureStore().exist(id)) {
        String errMsg = new FeatureNotFoundException(id).getMessage();
        return Response.status(Response.Status.NOT_FOUND).entity(errMsg).build();
    }
    getFeatureStore().enable(id);
    return Response.noContent().build();
}"
211,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureResource.java,FeatureResource,"operationDisable__(@PathParam(""uid"") String id)","@POST
@Path(""/"" + OPERATION_DISABLE)
@RolesAllowed({ROLE_WRITE})
@ApiOperation(value= ""Disable a feature"", response=Response.class)
@ApiResponses({
    @ApiResponse(code = 204, message= ""Features has been disabled""), 
    @ApiResponse(code = 404, message= ""Feature not found"") })
public Response operationDisable(@PathParam(""uid"") String id) {
    if (!ff4j.getFeatureStore().exist(id)) {
        String errMsg = new FeatureNotFoundException(id).getMessage();
        return Response.status(Response.Status.NOT_FOUND).entity(errMsg).build();
    }
    getFeatureStore().disable(id);
    return Response.noContent().build();
}"
212,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureResource.java,FeatureResource,"operationGrantRole__(@PathParam(""uid"") String id, @PathParam(""role"") String role)","@POST
@RolesAllowed({ROLE_WRITE})
@Path(""/"" + OPERATION_GRANTROLE + ""/{role}"" )
@ApiOperation(value= ""Grant a permission on a feature"", response=Response.class)
@ApiResponses({
    @ApiResponse(code = 204, message= ""Permission has been granted""), 
    @ApiResponse(code = 404, message= ""Feature not found""),
    @ApiResponse(code = 400, message= ""Invalid RoleName"") })
public Response operationGrantRole(@PathParam(""uid"") String id, @PathParam(""role"") String role) {
    if (!ff4j.getFeatureStore().exist(id)) {
        String errMsg = new FeatureNotFoundException(id).getMessage();
        return Response.status(Response.Status.NOT_FOUND).entity(errMsg).build();
    }
    if ("""".equals(role)) {
        String errMsg = ""Invalid role should not be null nor empty"";
        return Response.status(Response.Status.BAD_REQUEST).entity(errMsg).build();
    }
    getFeatureStore().grantRoleOnFeature(id, role);
    return Response.noContent().build();
}"
213,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureResource.java,FeatureResource,"operationRemoveRole__(@PathParam(""uid"") String id, @PathParam(""role"") String role)","@POST
@RolesAllowed({ROLE_WRITE})
@Path(""/"" + OPERATION_REMOVEROLE + ""/{role}"" )
@ApiOperation(value= ""Remove a permission on a feature"", response=Response.class)
@ApiResponses({
    @ApiResponse(code = 204, message= ""Permission has been granted""), 
    @ApiResponse(code = 404, message= ""Feature not found""),
    @ApiResponse(code = 400, message= ""Invalid RoleName"") })
public Response operationRemoveRole(@PathParam(""uid"") String id, @PathParam(""role"") String role) {
    if (!ff4j.getFeatureStore().exist(id)) {
        String errMsg = new FeatureNotFoundException(id).getMessage();
        return Response.status(Response.Status.NOT_FOUND).entity(errMsg).build();
    }
    Set < String > permissions = ff4j.getFeatureStore().read(id).getPermissions();
    if (!permissions.contains(role)) {
        String errMsg = ""Invalid role should be within "" + permissions;
        return Response.status(Response.Status.BAD_REQUEST).entity(errMsg).build();
    }
    getFeatureStore().removeRoleFromFeature(id, role);
    return Response.noContent().build();
}"
214,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureResource.java,FeatureResource,"operationAddGroup__(@PathParam(""uid"") String id, @PathParam(""groupName"") String groupName)","@POST
@RolesAllowed({ROLE_WRITE})
@Path(""/"" + OPERATION_ADDGROUP  + ""/{groupName}"" )
@ApiOperation(value= ""Define the group of the feature"", response=Response.class)
@ApiResponses({
    @ApiResponse(code = 204, message= ""Group has been defined""), 
    @ApiResponse(code = 404, message= ""Feature not found""),
    @ApiResponse(code = 400, message= ""Invalid GroupName"") })
public Response operationAddGroup(@PathParam(""uid"") String id, @PathParam(""groupName"") String groupName) {
    if (!ff4j.getFeatureStore().exist(id)) {
        String errMsg = new FeatureNotFoundException(id).getMessage();
        return Response.status(Response.Status.NOT_FOUND).entity(errMsg).build();
    }
    if ("""".equals(groupName)) {
        String errMsg = ""Invalid groupName should not be null nor empty"";
        return Response.status(Response.Status.BAD_REQUEST).entity(errMsg).build();
    }
    getFeatureStore().addToGroup(id, groupName);
    return Response.noContent().build();
}"
215,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureResource.java,FeatureResource,"operationRemoveGroup__(@PathParam(""uid"") String id,  @PathParam(""groupName"") String groupName)","@POST
@RolesAllowed({ROLE_WRITE})
@Path(""/"" + OPERATION_REMOVEGROUP  + ""/{groupName}"")
@ApiOperation(value= ""Remove the group of the feature"", response=Response.class)
@ApiResponses({
    @ApiResponse(code = 204, message= ""Group has been removed""), 
    @ApiResponse(code = 404, message= ""Feature not found""),
    @ApiResponse(code = 400, message= ""Invalid GroupName"") })
public Response operationRemoveGroup(@PathParam(""uid"") String id,  @PathParam(""groupName"") String groupName) {
    if (!ff4j.getFeatureStore().exist(id)) {
        String errMsg = new FeatureNotFoundException(id).getMessage();
        return Response.status(Response.Status.NOT_FOUND).entity(errMsg).build();
    }
    // Expected behaviour is no error even if invalid groupname
    // .. but invalid if group does not exist... 
    if (!ff4j.getFeatureStore().existGroup(groupName)) {
        String errMsg = ""Invalid groupName should be "" + groupName;
        return Response.status(Response.Status.BAD_REQUEST).entity(errMsg).build();
    }
    getFeatureStore().removeFromGroup(id, groupName);
    return Response.noContent().build();
}"
216,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/MonitoringResource.java,MonitoringResource,"getMonitoringStatus__(
            @ApiParam(required=false, name=""start"", value=""Start of window <br>(default is today 00:00)"")
            @QueryParam(PARAM_START) Long start,
            @ApiParam(required=false, name=""end"", value=""End  of window <br>(default is tomorrow 00:00)"")
            @QueryParam(PARAM_END) Long end)","@GET
@Produces(MediaType.APPLICATION_JSON)
@ApiOperation(value= ""Display <b>Monitoring</b> information for <b><u>all</u></b> features"",
              notes= ""The <b>EventRepository</b> handle to store audit events is not required"", 
              response=EventRepositoryApiBean.class)
@ApiResponses({ 
    @ApiResponse(code = 200, message= ""Status of event repository bean"", response=EventRepositoryApiBean.class),
    @ApiResponse(code = 404, message= ""No event repository defined"",     response=String.class)
})
public Response getMonitoringStatus(
        @ApiParam(required=false, name=""start"", value=""Start of window <br>(default is today 00:00)"")
        @QueryParam(PARAM_START) Long start,
        @ApiParam(required=false, name=""end"", value=""End  of window <br>(default is tomorrow 00:00)"")
        @QueryParam(PARAM_END) Long end) {
    if (null == getRepo()) {
        return Response.status(Status.NOT_FOUND).entity(""No monitoring has been defined"").build();
    }
    return Response.ok(new EventRepositoryApiBean(getRepo(), start, end)).build();
}"
217,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/MonitoringResource.java,MonitoringResource,"getFeatureMonitoring__(
            @ApiParam(required=true, name=""uid"", value=""Unique identifier of feature"")
            @PathParam(""uid"") String uid, 
            @ApiParam(required=false, name=""start"", value=""Start of window <br>(default is today 00:00)"")
            @QueryParam(PARAM_START) Long start,
            @ApiParam(required=false, name=""end"", value=""End  of window <br>(default is tomorrow 00:00)"")
            @QueryParam(PARAM_END) Long end)","@GET
@Path(""/{uid}"")
@Produces(MediaType.APPLICATION_JSON)
@ApiOperation(value= ""Display <b>Monitoring</b> for a <b><u>single</u></b> feature"",
              notes= ""Each feature will display a pieChart and a barChart for hits"",
              response=FeatureMonitoringApiBean.class)
@ApiResponses({
    @ApiResponse(code = 200, message= ""Status of current ff4j monitoring bean"", response=FeatureMonitoringApiBean.class), 
    @ApiResponse(code = 404, message= ""Feature not found"", response=String.class) })
public Response getFeatureMonitoring(
        @ApiParam(required=true, name=""uid"", value=""Unique identifier of feature"")
        @PathParam(""uid"") String uid, 
        @ApiParam(required=false, name=""start"", value=""Start of window <br>(default is today 00:00)"")
        @QueryParam(PARAM_START) Long start,
        @ApiParam(required=false, name=""end"", value=""End  of window <br>(default is tomorrow 00:00)"")
        @QueryParam(PARAM_END) Long end) {
    if (!ff4j.getFeatureStore().exist(uid)) {
        String errMsg = new FeatureNotFoundException(uid).getMessage();
        return Response.status(Response.Status.NOT_FOUND).entity(errMsg).build();
    }
    // Today
    Calendar c = Calendar.getInstance();
    c.set(Calendar.HOUR_OF_DAY, 0);
    c.set(Calendar.MINUTE, 0);
    c.set(Calendar.SECOND, 0);
    if (start == null) {
        start = c.getTimeInMillis();
    }
    // Tomorrow 00:00
    Calendar c2 = Calendar.getInstance();
    c2.setTime(new Date(System.currentTimeMillis() + 1000 * 3600 * 24));
    c2.set(Calendar.HOUR_OF_DAY, 0);
    c2.set(Calendar.MINUTE, 0);
    c2.set(Calendar.SECOND, 0);
    if (end == null) {
        end = c2.getTimeInMillis();
    }
    // Build response
    FeatureMonitoringApiBean fmab = new FeatureMonitoringApiBean(uid);
    fmab.setEventsPie(new PieChartApiBean(getRepo().getFeatureHitsPie(uid, start, end)));
    fmab.setBarChart(new BarChartApiBean(getRepo().getHitsBarChart(Util.set(uid), start, end, 24)));
    int hitcount = 0;
    for (PieSectorApiBean sec : fmab.getEventsPie().getSectors()) {
        hitcount+= sec.getValue();
    }
    fmab.setHitCount(hitcount);
    return Response.ok().entity(fmab).build();
}"
218,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4jSecurityContextFilter.java,FF4jSecurityContextFilter,filter__(ContainerRequest containerRequest),"@Override
public ContainerRequest filter(ContainerRequest containerRequest) throws WebApplicationException {
    String method = containerRequest.getMethod();
    String path = containerRequest.getPath(true);
    log.debug(""Entering security filter for <"" + path + "">"");

    //We do allow wadl to be retrieve
    if (method.equals(""GET"") && (path.equals(""application.wadl"") || path.equals(""application.wadl/xsd0.xsd""))) {
        log.info(""Accessing schema and wadl ok"");
        return containerRequest;
    }

    // Get the authentification passed in HTTP headers parameters
    String auth = containerRequest.getHeaderValue(HEADER_AUTHORIZATION);

    if (auth == null) {
        handleUnAuthorized(""<p>'authorization' parameter is required in header  for authentication (HTTP-Basic or ApiKey)</p>"");
    }

    // Identification of an Application with its api key
    if (auth.contains(PARAM_AUTHKEY)) {
        auth = auth.replaceFirst(PARAM_AUTHKEY + ""="", """");
        // Checking api Key
        if (!securityConfig.getApiKeys().contains(auth)) {
            handleUnAuthorized(""The api key provided '"" + auth + ""' is invalid "");
        }

        // Positionning Roles
        Set<String> perms = securityConfig.getPermissions().get(auth);
        SecurityContext sc = new FF4jSecurityContext(auth, PARAM_AUTHKEY, perms);
        containerRequest.setSecurityContext(sc);
        log.info(""Client successfully logged with an ApiKey"");
        return containerRequest;
    }

    // Identification of a final user in HTTP-BASIC MODE
    if (auth.toUpperCase().contains(""BASIC"")) {
        byte[] decodedBytes = Base64.decode(auth.replaceFirst(""[B|b]asic "", """"));
        String[] lap = new String(decodedBytes).split("":"", 2);
        if (lap == null || lap.length != 2) {
            handleUnAuthorized(""Invalid BASIC Token, cannot parse"");
        }

        // Validation login/password
        String expectedPassword = securityConfig.getUsers().get(lap[0]);
        if (expectedPassword == null || !(lap[1].equals(expectedPassword))) {
            handleUnAuthorized(""<p>Invalid username or password.</p>"");
        }
        
        // Positionning Roles
        Set<String> perms = securityConfig.getPermissions().get(lap[0]);
        SecurityContext sc = new FF4jSecurityContext(lap[0], ""BASIC"", perms);
        containerRequest.setSecurityContext(sc);
        log.info(""Client successfully logged with a user/pasword pair "");
        return containerRequest;
    }

    handleUnAuthorized(""Cannot parse authorisation header attribute, valid are basic and apiKey"");
    return null;
}"
219,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4jSecurityContextFilter.java,FF4jSecurityContextFilter,handleUnAuthorized__(String message),"private void handleUnAuthorized(String message) {
    StringBuilder msg = new StringBuilder(""<p style=\""color:#880000\"">"");
    msg.append(""<H1>ERROR HTTP 401 : Unauthorized</H1>"");
    msg.append(""<p>"" + message + ""</p>"");
    log.error(""Authentication error :"" + message);
    throw new WebApplicationException(Response.status(Status.UNAUTHORIZED).entity(msg.toString())
            .type(MediaType.TEXT_HTML_TYPE).build());
}"
220,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4jSecurityContextFilter.java,FF4jSecurityContextFilter,getRequestFilter__(),"@Override
public ContainerRequestFilter getRequestFilter() {
    return this;
}"
221,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4jSecurityContextFilter.java,FF4jSecurityContextFilter,getResponseFilter__(),"@Override
public ContainerResponseFilter getResponseFilter() {
    // No response filter
    return null;
}"
222,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/FF4jJacksonMapper.java,FF4jJacksonMapper,FF4jJacksonMapper__(),"public FF4jJacksonMapper() {
    super();
}"
223,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/FF4jJacksonMapper.java,FF4jJacksonMapper,getContext__(Class<?> type),"@Override
public ObjectMapper getContext(Class<?> type) {
    return defaultObjectMapper;
}"
224,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/GroupResource.java,GroupResource,GroupResource__(),public GroupResource() {}
225,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/GroupResource.java,GroupResource,"read__(@PathParam(""groupName"") String groupName)","@GET
@Produces(MediaType.APPLICATION_JSON)
@ApiOperation(value= ""Read information about a group"", response=Response.class)
@ApiResponses({
    @ApiResponse(code = 200, message= ""Information about target group""), 
    @ApiResponse(code = 404, message= ""Group not found"") })
public Response read(@PathParam(""groupName"") String groupName) {
    Feature[] storeContent = getFeatureStore().readGroup(groupName).values().toArray(new Feature[0]);
    return Response.ok(featureArrayToJson(storeContent)).build();
}"
226,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/GroupResource.java,GroupResource,"operationEnable__(@PathParam(""groupName"") String groupName)","@POST
@Path(""/"" + OPERATION_ENABLE)
@RolesAllowed({ROLE_WRITE})
@ApiOperation(value= ""Enable a group"", response=Response.class)
@ApiResponses(@ApiResponse(code = 204, message= ""Group has been updated""))
public Response operationEnable(@PathParam(""groupName"") String groupName) {
    getFeatureStore().enableGroup(groupName);
    return Response.noContent().build();
}"
227,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/GroupResource.java,GroupResource,"operationDisableGroup__(@PathParam(""groupName"") String groupName)","@POST
@Path(""/"" + OPERATION_DISABLE)
@RolesAllowed({ROLE_WRITE})
@ApiOperation(value= ""Disable a group"", response=Response.class)
@ApiResponses(@ApiResponse(code = 204, message= ""Group has been disabled""))
public Response operationDisableGroup(@PathParam(""groupName"") String groupName) {
    getFeatureStore().disableGroup(groupName);
    return Response.noContent().build();
}"
228,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4jSecurityContext.java,FF4jSecurityContext,"FF4jSecurityContext__(String userName, String authSchem, Set < String > perm)","public FF4jSecurityContext(String userName, String authSchem, Set < String > perm) {
    this.userName = userName;
    this.userRoles = perm;
}"
229,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4jSecurityContext.java,FF4jSecurityContext,getUserPrincipal__(),"@Override
public Principal getUserPrincipal() {
    return new Principal() {
        /** {@inheritDoc} */
        @Override
        public String getName() {
            return userName;
        }
    };
}"
230,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4jSecurityContext.java,FF4jSecurityContext,isUserInRole__(String role),"@Override
public boolean isUserInRole(String role) {
    return userRoles.contains(role);
}"
231,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4jSecurityContext.java,FF4jSecurityContext,isSecure__(),"@Override
public boolean isSecure() {
    return true;
}"
232,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4jSecurityContext.java,FF4jSecurityContext,getAuthenticationScheme__(),"@Override
public String getAuthenticationScheme() {
    return authScheme;
}"
233,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4jSecurityContext.java,FF4jSecurityContext,getUserRoles__(),"public Set<String> getUserRoles() {
    return userRoles;
}"
234,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4jSecurityContext.java,FF4jSecurityContext,setUserRoles__(Set<String> userRoles),"public void setUserRoles(Set<String> userRoles) {
    this.userRoles = userRoles;
}"
235,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4jSecurityContext.java,FF4jSecurityContext,getUserName__(),"public String getUserName() {
    return userName;
}"
236,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureStoreResource.java,FeatureStoreResource,FeatureStoreResource__(),"public FeatureStoreResource() {
}"
237,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureStoreResource.java,FeatureStoreResource,get__(),"@GET
@ApiOperation(
        value= ""Display information regarding to <b>Features</b>"",
        notes= ""other sub resources to be displayed"",
        response=FeatureStoreApiBean.class)
@ApiResponses(@ApiResponse(code = 200, message= ""status of current ff4j bean""))
@Produces(MediaType.APPLICATION_JSON)
public FeatureStoreApiBean get() {
    return new FeatureStoreApiBean(ff4j.getFeatureStore());
}"
238,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureStoreResource.java,FeatureStoreResource,readFeatures__(),"@GET
@Path(""/"" + RESOURCE_FEATURES)
@Produces(MediaType.APPLICATION_JSON)
@ApiOperation(value= ""Display information regarding <b>Features</b>"", response=EventRepositoryApiBean.class)
@ApiResponses(@ApiResponse(code = 200, message= ""get all features""))
public List < FeatureApiBean> readFeatures() {
    Feature[] storeContent = getFeatureStore().readAll().values().toArray(new Feature[0]);
    List < FeatureApiBean > apiBean = new ArrayList<FeatureApiBean>();
    for (Feature feature : storeContent) {
        apiBean.add(new FeatureApiBean(feature));
    }
    return apiBean;
}"
239,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureStoreResource.java,FeatureStoreResource,readGroups__(),"@GET
@Path(""/"" + RESOURCE_GROUPS)
@Produces(MediaType.APPLICATION_JSON)
@ApiOperation(value= ""Display information regarding <b>Groups</b>"", response=GroupDescApiBean.class)
@ApiResponses({@ApiResponse(code = 200, message=""Groups resource"", response=GroupDescApiBean.class)})
public List < GroupDescApiBean > readGroups() {
    Map< String, Feature > features = getFeatureStore().readAll();
    Map< String , GroupDescApiBean > groups = new HashMap<String, GroupDescApiBean>();
    if (features != null && !features.isEmpty()) {
        // Build groups from features
        for (String featureName : features.keySet()) {
            String groupName = features.get(featureName).getGroup();
            // Add current group to list
            if (groupName != null && !groupName.isEmpty()) {
                if (!groups.containsKey(groupName)) {
                    groups.put(groupName, new GroupDescApiBean(groupName, new ArrayList<String>()));
                }
                groups.get(groupName).getFeatures().add(featureName);
            }
        }
    }
    return new ArrayList<GroupDescApiBean>(groups.values());
}"
240,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureStoreResource.java,FeatureStoreResource,getStatus__(),"@GET
@Path(""/"" + RESOURCE_CACHE)
@Produces(MediaType.APPLICATION_JSON)
@ApiOperation(value= ""Display information related to <b>Cache</b>"")
@ApiResponses({ @ApiResponse(code = 200, message= ""status of current ff4j monitoring bean"", response=CacheApiBean.class),
                @ApiResponse(code = 404, message= ""no cache content provided"") })
public Response getStatus() {
    if (!getFeatureStore().isCached()) {
        return Response.status(Response.Status.NOT_FOUND).entity(""Current Store is not cached"").build();
    }
    return Response.ok(new CacheApiBean(getFeatureStore())).build();
}"
241,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/FeatureStoreResource.java,FeatureStoreResource,clear__(),"@POST
@Path(""/"" + RESOURCE_CACHE)
@Produces(MediaType.TEXT_PLAIN)
@ApiOperation(value= ""Clear Cache"", response=Response.class)
@ApiResponses({ @ApiResponse(code = 200, message= ""cache is cleard""),
                @ApiResponse(code = 404, message= ""no cache content provided"") })
public Response clear() {
    if (!getFeatureStore().isCached()) {
        return Response.status(Response.Status.NOT_FOUND).entity(""Current Store is not cached"").build();
    }
    ((FF4jCacheProxy) getFeatureStore()).getCacheManager().clearFeatures();
    return Response.ok(""Cache has been cleared"").build();
}"
242,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4JSecurityContextAuthenticationManager.java,FF4JSecurityContextAuthenticationManager,getCurrentUserPermissions__(),"@Override
public Set<String> getCurrentUserPermissions() {
    FF4jSecurityContext secCtx = FF4jResource.securityContextHolder.get();
    if (secCtx != null) {
        return secCtx.getUserRoles();
    }
    return new HashSet<String>();
}"
243,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/security/FF4JSecurityContextAuthenticationManager.java,FF4JSecurityContextAuthenticationManager,listAllPermissions__(),"@Override
public Set<String> listAllPermissions() {
    Set < String > vars = new HashSet<String>();
    if (FF4jSecurityContextFilter.securityConfig != null) {
        Map < String, Set<String > > perms = FF4jSecurityContextFilter.securityConfig.getPermissions();
        for (String var : perms.keySet()) {
            perms.get(var).addAll(perms.get(var));
        }
    }
    return vars;
}"
244,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,FF4jStatusApiBean__(),"public FF4jStatusApiBean() {
}"
245,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,FF4jStatusApiBean__(FF4j ff4j),"public FF4jStatusApiBean(FF4j ff4j) {
    // UpTime
    long up = System.currentTimeMillis() - ff4j.getStartTime();
    long daynumber = new Double(Math.floor(up / (1000 * 3600 * 24))).longValue();
    up = up - (daynumber * 1000 * 3600 * 24);
    long hourNumber = new Double(Math.floor(up / (1000 * 3600))).longValue();
    up = up - (hourNumber * 1000 * 3600);
    long minutenumber = new Double(Math.floor(up / (1000 * 60))).longValue();
    up = up - (minutenumber * 1000 * 60);
    long secondnumber = new Double(Math.floor(up / 1000)).longValue();
    uptime =  daynumber + "" day(s) "";
    uptime += hourNumber + "" hours(s) "";
    uptime += minutenumber + "" minute(s) "";
    uptime += secondnumber + "" seconds\"""";
    autocreate = ff4j.isAutocreate();
    version = ff4j.getVersion();
    if (null != ff4j.getFeatureStore()) {
        featuresStore = new FeatureStoreApiBean(ff4j.getFeatureStore());
    }
    if (null != ff4j.getEventRepository()) {
        eventRepository = new EventRepositoryApiBean(ff4j.getEventRepository(), null, null);
    }
    if (null != ff4j.getAuthorizationsManager()) {
        authorizationsManager = new AuthorizationsManagerApiBean(ff4j.getAuthorizationsManager());
    }
}"
246,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,getUptime__(),"public String getUptime() {
    return uptime;
}"
247,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,setUptime__(String uptime),"public void setUptime(String uptime) {
    this.uptime = uptime;
}"
248,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,isAutocreate__(),"public boolean isAutocreate() {
    return autocreate;
}"
249,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,setAutocreate__(boolean autocreate),"public void setAutocreate(boolean autocreate) {
    this.autocreate = autocreate;
}"
250,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,getVersion__(),"public String getVersion() {
    return version;
}"
251,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,setVersion__(String version),"public void setVersion(String version) {
    this.version = version;
}"
252,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,getFeaturesStore__(),"public FeatureStoreApiBean getFeaturesStore() {
    return featuresStore;
}"
253,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,setFeaturesStore__(FeatureStoreApiBean featuresStore),"public void setFeaturesStore(FeatureStoreApiBean featuresStore) {
    this.featuresStore = featuresStore;
}"
254,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,getEventRepository__(),"public EventRepositoryApiBean getEventRepository() {
    return eventRepository;
}"
255,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,setEventRepository__(EventRepositoryApiBean eventRepository),"public void setEventRepository(EventRepositoryApiBean eventRepository) {
    this.eventRepository = eventRepository;
}"
256,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,getAuthorizationsManager__(),"public AuthorizationsManagerApiBean getAuthorizationsManager() {
    return authorizationsManager;
}"
257,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FF4jStatusApiBean.java,FF4jStatusApiBean,setAuthorizationsManager__(AuthorizationsManagerApiBean authorizationsManager),"public void setAuthorizationsManager(AuthorizationsManagerApiBean authorizationsManager) {
    this.authorizationsManager = authorizationsManager;
}"
258,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/PieSectorApiBean.java,PieSectorApiBean,PieSectorApiBean__(PieSector sector),"public PieSectorApiBean(PieSector sector) {
    this.label = sector.getLabel();
    this.value = sector.getValue();
    this.color = sector.getColor();
}"
259,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/PieSectorApiBean.java,PieSectorApiBean,getLabel__(),"public String getLabel() {
    return label;
}"
260,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/PieSectorApiBean.java,PieSectorApiBean,setLabel__(String label),"public void setLabel(String label) {
    this.label = label;
}"
261,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/PieSectorApiBean.java,PieSectorApiBean,getValue__(),"public double getValue() {
    return value;
}"
262,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/PieSectorApiBean.java,PieSectorApiBean,setValue__(double value),"public void setValue(double value) {
    this.value = value;
}"
263,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/PieSectorApiBean.java,PieSectorApiBean,getColor__(),"public String getColor() {
    return color;
}"
264,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/PieSectorApiBean.java,PieSectorApiBean,setColor__(String color),"public void setColor(String color) {
    this.color = color;
}"
265,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureMonitoringApiBean.java,FeatureMonitoringApiBean,FeatureMonitoringApiBean__(String uid),"public FeatureMonitoringApiBean(String uid) {
    this.featureName = uid;
}"
266,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureMonitoringApiBean.java,FeatureMonitoringApiBean,getFeatureName__(),"public String getFeatureName() {
    return featureName;
}"
267,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureMonitoringApiBean.java,FeatureMonitoringApiBean,setFeatureName__(String featureName),"public void setFeatureName(String featureName) {
    this.featureName = featureName;
}"
268,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureMonitoringApiBean.java,FeatureMonitoringApiBean,getEventsPie__(),"public PieChartApiBean getEventsPie() {
    return eventsPie;
}"
269,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureMonitoringApiBean.java,FeatureMonitoringApiBean,setEventsPie__(PieChartApiBean eventsPie),"public void setEventsPie(PieChartApiBean eventsPie) {
    this.eventsPie = eventsPie;
}"
270,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureMonitoringApiBean.java,FeatureMonitoringApiBean,getBarChart__(),"public BarChartApiBean getBarChart() {
    return barChart;
}"
271,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureMonitoringApiBean.java,FeatureMonitoringApiBean,setBarChart__(BarChartApiBean barChart),"public void setBarChart(BarChartApiBean barChart) {
    this.barChart = barChart;
}"
272,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureMonitoringApiBean.java,FeatureMonitoringApiBean,getHitCount__(),"public int getHitCount() {
    return hitCount;
}"
273,ff4j_ff4j__f12d3871afd0645aeb354e5a91f1b8047687206f__f12d3871afd0645aeb354e5a91f1b8047687206f,ff4j-webapi/src/main/java/org/ff4j/web/api/resources/domain/FeatureMonitoringApiBean.java,FeatureMonitoringApiBean,setHitCount__(int hitCount),"public void setHitCount(int hitCount) {
    this.hitCount = hitCount;
}"
274,SeqWare_seqware__289947f7719911a70d398c3df5a07906fc667bf3__289947f7719911a70d398c3df5a07906fc667bf3,seqware-common/src/main/java/net/sourceforge/seqware/common/util/filetools/FileTools.java,FileTools,"zipDirectoryRecursive__(File path, File zipFileName, boolean compress)","public static boolean zipDirectoryRecursive(File path, File zipFileName, boolean compress) {
    List<File> filesToZip = new ArrayList<>();
    if (path.exists()) {
        File[] files = path.listFiles();
        for (File file : files) {
            if (file.isDirectory()) {
                FileTools.listFilesRecursive(file, filesToZip);
            } else {
                filesToZip.add(file);
            }
        }
    }

    try {
        ZipArchiveOutputStream writer = new ZipArchiveOutputStream(zipFileName);
        writer.setUseZip64(Zip64Mode.Always);
        writer.setLevel(compress? ZipArchiveOutputStream.DEFAULT_COMPRESSION : ZipArchiveOutputStream.STORED);
        for(File file : filesToZip) {
            ZipArchiveEntry entry = new ZipArchiveEntry(file, file.getAbsolutePath().replaceFirst(path.getAbsolutePath() + File.separator, """"));
            entry.setSize(file.length());
            writer.putArchiveEntry(entry);
            if (!file.isDirectory()) {
                BufferedInputStream input = new BufferedInputStream(new FileInputStream(file));
                IOUtils.copy(input, writer);
            }
            writer.closeArchiveEntry();
        }
        writer.close();
    } catch (IOException e) {
        Log.error(e.getMessage());
        return false;
    }
    return true;
}"
275,SeqWare_seqware__289947f7719911a70d398c3df5a07906fc667bf3__289947f7719911a70d398c3df5a07906fc667bf3,seqware-common/src/main/java/io/seqware/util/XMLChar.java,XMLChar,isValid__(int c),"public static boolean isValid(int c) {
    return (c < 0x10000 && (CHARS[c] & MASK_VALID) != 0) || (0x10000 <= c && c <= 0x10FFFF);
}"
276,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/EventManager.java,EventManager,"register__(Listener listener, Plugin plugin)","void register(Listener listener, Plugin plugin);"
277,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/EventManager.java,EventManager,fire__(Event event),void fire(Event event);
278,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/EventManager.java,EventManager,unregisterListener__(Listener listener),void unregisterListener(Listener listener);
279,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/EventManager.java,EventManager,unregisterAllListeners__(Plugin plugin),void unregisterAllListeners(Plugin plugin);
280,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/player/PlayerEatFoodEvent.java,PlayerEatFoodEvent,isCancelled__(),"@Override
public boolean isCancelled() {
    return cancelled;
}"
281,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/player/PlayerEatFoodEvent.java,PlayerEatFoodEvent,setCancelled__(boolean cancelled),"@Override
public void setCancelled(boolean cancelled) {
    this.cancelled = cancelled;
}"
282,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/permission/ServerOperator.java,ServerOperator,isOp__(),boolean isOp();
283,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/permission/ServerOperator.java,ServerOperator,setOp__(boolean value),void setOp(boolean value);
284,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitPlayerConsoleCompletor.java,NukkitPlayerConsoleCompletor,NukkitPlayerConsoleCompletor__(NukkitServer server),"public NukkitPlayerConsoleCompletor(NukkitServer server) {
    this.server = server;
}"
285,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleFormatter.java,NukkitConsoleFormatter,compile__(TextFormat textFormat),"private static Pattern compile(TextFormat textFormat) {
    return Pattern.compile(textFormat.toString(), Pattern.LITERAL | Pattern.CASE_INSENSITIVE);
}"
286,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleFormatter.java,NukkitConsoleFormatter,apply__(String text),"@Override
public String apply(String text) {
    for (Map.Entry<Pattern, String> entry : REPLACEMENTS.entrySet()) {
        text = entry.getKey().matcher(text).replaceAll(entry.getValue());
    }
    return text + RESET;
}"
287,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/player/PlayerEvent.java,PlayerEvent,PlayerEvent__(final Player player),"public PlayerEvent(final Player player) {
    this.player = player;
}"
288,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/player/PlayerEvent.java,PlayerEvent,getPlayer__(),"public Player getPlayer() {
    return player;
}"
289,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/player/PlayerAchievementAwardedEvent.java,PlayerAchievementAwardedEvent,"PlayerAchievementAwardedEvent__(final Player player, final String achievementId)","public PlayerAchievementAwardedEvent(final Player player, final String achievementId) {
    super(player);
    this.achievement = achievementId;
}"
290,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/player/PlayerAchievementAwardedEvent.java,PlayerAchievementAwardedEvent,getAchievement__(),"public String getAchievement() {
    return this.achievement;
}"
291,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/player/PlayerAchievementAwardedEvent.java,PlayerAchievementAwardedEvent,isCancelled__(),"@Override
public boolean isCancelled() {
    return cancelled;
}"
292,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/player/PlayerAchievementAwardedEvent.java,PlayerAchievementAwardedEvent,setCancelled__(boolean cancelled),"@Override
public void setCancelled(boolean cancelled) {
    this.cancelled = cancelled;
}"
293,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/EventFireHandler.java,EventFireHandler,fire__(Event event),void fire(Event event);
294,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/PopupMessage.java,PopupMessage,"PopupMessage__(@Nonnull String caption, @Nonnull String message)","public PopupMessage(@Nonnull String caption, @Nonnull String message) {
    this.caption = Preconditions.checkNotNull(caption, ""caption"");
    this.message = Preconditions.checkNotNull(message, ""message"");
}"
295,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/PopupMessage.java,PopupMessage,getCaption__(),"@Nonnull
public final String getCaption() {
    return caption;
}"
296,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/PopupMessage.java,PopupMessage,getMessage__(),"@Nonnull
public final String getMessage() {
    return message;
}"
297,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/PopupMessage.java,PopupMessage,equals__(Object o),"@Override
public final boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    PopupMessage that = (PopupMessage) o;
    return Objects.equals(caption, that.caption) &&
            Objects.equals(message, that.message);
}"
298,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/PopupMessage.java,PopupMessage,hashCode__(),"@Override
public final int hashCode() {
    return Objects.hash(caption, message);
}"
299,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/PopupMessage.java,PopupMessage,toString__(),"@Override
public final String toString() {
    return ""PopupMessage{"" +
            ""caption='"" + caption + '\'' +
            "", message='"" + message + '\'' +
            '}';
}"
300,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/command/Command.java,Command,getLabel__(),String getLabel();
301,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/util/Rotation.java,Rotation,"Rotation__(float pitch, float yaw, float headYaw)","public Rotation(float pitch, float yaw, float headYaw) {
    this.pitch = validate(pitch, ""pitch"");
    this.yaw = validate(yaw, ""yaw"");
    this.headYaw = validate(headYaw, ""headYaw"");
}"
302,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/util/Rotation.java,Rotation,fromVector3f__(Vector3f vector3f),"public static Rotation fromVector3f(Vector3f vector3f) {
    Preconditions.checkNotNull(vector3f, ""vector3f"");
    return new Rotation(vector3f.getX(), vector3f.getY(), vector3f.getZ());
}"
303,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/util/Rotation.java,Rotation,"validate__(float val, String name)","private static float validate(float val, String name) {
    Preconditions.checkArgument(Float.isFinite(val), ""%s value (%s) is not finite"", name, val);
    return val;
}"
304,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/util/Rotation.java,Rotation,getPitch__(),"public float getPitch() {
    return pitch;
}"
305,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/util/Rotation.java,Rotation,getYaw__(),"public float getYaw() {
    return yaw;
}"
306,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/util/Rotation.java,Rotation,getHeadYaw__(),"public float getHeadYaw() {
    return headYaw;
}"
307,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/util/Rotation.java,Rotation,toVector3f__(),"public Vector3f toVector3f() {
    return new Vector3f(pitch, yaw, headYaw);
}"
308,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/util/Rotation.java,Rotation,equals__(Object o),"@Override
public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;

    Rotation rotation = (Rotation) o;

    if (Float.compare(rotation.pitch, pitch) != 0) return false;
    if (Float.compare(rotation.yaw, yaw) != 0) return false;
    return Float.compare(rotation.headYaw, headYaw) == 0;

}"
309,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/util/Rotation.java,Rotation,hashCode__(),"@Override
public int hashCode() {
    int result = (pitch != +0.0f ? Float.floatToIntBits(pitch) : 0);
    result = 31 * result + (yaw != +0.0f ? Float.floatToIntBits(yaw) : 0);
    result = 31 * result + (headYaw != +0.0f ? Float.floatToIntBits(headYaw) : 0);
    return result;
}"
310,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/util/Rotation.java,Rotation,toString__(),"@Override
public String toString() {
    return ""Rotation{"" +
            ""pitch="" + pitch +
            "", yaw="" + yaw +
            "", headYaw="" + headYaw +
            '}';
}"
311,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleCommandExecutorSource.java,NukkitConsoleCommandExecutorSource,sendMessage__(String text),"@Override
public void sendMessage(String text) {

}"
312,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleCommandExecutorSource.java,NukkitConsoleCommandExecutorSource,sendMessage__(Message text),"@Override
public void sendMessage(Message text) {

}"
313,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleCommandExecutorSource.java,NukkitConsoleCommandExecutorSource,getServer__(),"@Override
public Server getServer() {
    return null;
}"
314,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleCommandExecutorSource.java,NukkitConsoleCommandExecutorSource,getName__(),"@Override
public String getName() {
    return null;
}"
315,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleCommandExecutorSource.java,NukkitConsoleCommandExecutorSource,isPlayer__(),"@Override
public boolean isPlayer() {
    return false;
}"
316,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,getMotd__(),String getMotd();
317,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setMotd__(String motd),void setMotd(String motd);
318,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,getSubMotd__(),String getSubMotd();
319,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setSubMotd__(String subMotd),void setSubMotd(String subMotd);
320,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,getServerPort__(),int getServerPort();
321,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,getServerAddress__(),String getServerAddress();
322,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,getViewDistance__(),int getViewDistance();
323,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setViewDistance__(int viewDistance),void setViewDistance(int viewDistance);
324,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,isWhitelistEnabled__(),boolean isWhitelistEnabled();
325,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setWhitelistEnabled__(boolean whitelistEnabled),void setWhitelistEnabled(boolean whitelistEnabled);
326,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,isAchievementsEnabled__(),boolean isAchievementsEnabled();
327,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setAchievementsEnabled__(boolean achievementsEnabled),void setAchievementsEnabled(boolean achievementsEnabled);
328,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,isAchievementsAnnounced__(),boolean isAchievementsAnnounced();
329,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setAchievementsAnnounced__( boolean achievementsAnnounced),void setAchievementsAnnounced( boolean achievementsAnnounced);
330,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,getSpawnProtection__(),int getSpawnProtection();
331,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setSpawnProtection__(int spawnProtection),void setSpawnProtection(int spawnProtection);
332,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,getMaxPlayers__(),int getMaxPlayers();
333,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setMaxPlayers__(int maxPlayers),void setMaxPlayers(int maxPlayers);
334,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,isFlightEnabled__(),boolean isFlightEnabled();
335,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setFlightEnabled__(boolean flightEnabled),void setFlightEnabled(boolean flightEnabled);
336,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,isAnimalSpawningEnabled__(),boolean isAnimalSpawningEnabled();
337,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setAnimalSpawningEnabled__(boolean animalSpawningEnabled),void setAnimalSpawningEnabled(boolean animalSpawningEnabled);
338,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,isMobSpawningEnabled__(),boolean isMobSpawningEnabled();
339,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setMobSpawningEnabled__(boolean mobSpawningEnabled),void setMobSpawningEnabled(boolean mobSpawningEnabled);
340,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,getDefaultGamemode__(),String getDefaultGamemode();
341,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setDefaultGamemode__(String defaultGamemode),void setDefaultGamemode(String defaultGamemode);
342,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,isGamemodeForced__(),boolean isGamemodeForced();
343,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setGamemodeForced__(boolean gamemodeForced),void setGamemodeForced(boolean gamemodeForced);
344,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,isHardcore__(),boolean isHardcore();
345,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setHardcore__(boolean hardcore),void setHardcore(boolean hardcore);
346,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,isPvpEnabled__(),boolean isPvpEnabled();
347,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setPvpEnabled__(boolean pvpEnabled),void setPvpEnabled(boolean pvpEnabled);
348,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,getDifficulty__(),int getDifficulty();
349,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setDifficulty__(int difficulty),void setDifficulty(int difficulty);
350,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,getGeneratorSettings__(),String getGeneratorSettings();
351,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,getLevelName__(),String getLevelName();
352,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,getLevelSeed__(),String getLevelSeed();
353,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,getLevelType__(),String getLevelType();
354,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,isQueryEnabled__(),boolean isQueryEnabled();
355,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,isAutoSaveEnabled__(),boolean isAutoSaveEnabled();
356,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,isResourcesForced__(),boolean isResourcesForced();
357,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,setResourcesForced__(boolean resourcesForced),void setResourcesForced(boolean resourcesForced);
358,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/ServerProperties.java,ServerProperties,isBugReportEnabled__(),boolean isBugReportEnabled();
359,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleAppender.java,NukkitConsoleAppender,"NukkitConsoleAppender__(String name, Filter filter, Layout<? extends Serializable> layout, boolean ignoreExceptions)","private NukkitConsoleAppender(String name, Filter filter, Layout<? extends Serializable> layout, boolean ignoreExceptions) {
    super(name, filter, layout, ignoreExceptions);
    initializeTerminal();
}"
360,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleAppender.java,NukkitConsoleAppender,getTerminal__(),"public static Terminal getTerminal() {
    return terminal;
}"
361,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleAppender.java,NukkitConsoleAppender,setLineReader__(LineReader reader),"public static void setLineReader(LineReader reader) {
    if (reader != null && reader.getTerminal() != terminal) {
        throw new IllegalArgumentException(""LineReader given was not created with NukkitConsoleAppender!"");
    }
    lineReader = reader;
}"
362,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleAppender.java,NukkitConsoleAppender,initializeTerminal__(),"private static void initializeTerminal() {
    if (!initialized) {
        initialized = true;

        try {
            terminal = TerminalBuilder.builder().jansi(true).build();
        } catch (IllegalStateException e) {
            log.warn(""The environment you're running is unsupported."");
            if (log.isDebugEnabled()) {
                log.debug(e);
            }
        } catch (IOException e) {
            log.fatal(""Failed to initialize the terminal. Console input will not be possible."");
        }
    }
}"
363,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleAppender.java,NukkitConsoleAppender,close__(),"public static void close() throws IOException {
    if (initialized) {
        initialized = false;
        if (terminal != null) {
            try {
                terminal.close();
            } finally {
                terminal = null;
            }
        }
    }
}"
364,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleAppender.java,NukkitConsoleAppender,"createAppender__(
            @Required(message = ""No name provided for NukkitConsoleAppender"") @PluginAttribute(""name"") String name,
            @PluginElement(""Filter"") Filter filter,
            @PluginElement(""Layout"") @Nullable Layout<? extends Serializable> layout,
            @PluginAttribute(value = ""ignoreExceptions"", defaultBoolean = true) boolean ignoreExceptions)","@PluginFactory
public static NukkitConsoleAppender createAppender(
        @Required(message = ""No name provided for NukkitConsoleAppender"") @PluginAttribute(""name"") String name,
        @PluginElement(""Filter"") Filter filter,
        @PluginElement(""Layout"") @Nullable Layout<? extends Serializable> layout,
        @PluginAttribute(value = ""ignoreExceptions"", defaultBoolean = true) boolean ignoreExceptions) {

    if (layout == null) {
        layout = PatternLayout.createDefaultLayout();
    }

    return new NukkitConsoleAppender(name, filter, layout, ignoreExceptions);
}"
365,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleAppender.java,NukkitConsoleAppender,append__(LogEvent event),"@Override
public void append(LogEvent event) {
    if (terminal != null) {
        try {
            if (lineReader != null) {
                // Draw the prompt line again if a reader is available
                lineReader.callWidget(LineReader.CLEAR);
                terminal.writer().print(formatEvent(event));
                lineReader.callWidget(LineReader.REDRAW_LINE);
                lineReader.callWidget(LineReader.REDISPLAY);
            } else {
                terminal.writer().print(formatEvent(event));
            }
        } catch (Exception e) {
            // Ignore
        }
        terminal.writer().flush();
    } else {
        STDOUT.print(getLayout().toSerializable(event));
    }
}"
366,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitConsoleAppender.java,NukkitConsoleAppender,formatEvent__(LogEvent event),"public String formatEvent(LogEvent event) {
    return formatter.apply(getLayout().toSerializable(event).toString());
}"
367,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/NukkitEventManager.java,NukkitEventManager,"register__(Listener listener, Plugin plugin)","@Override
public void register(Listener listener, Plugin plugin) {
    Preconditions.checkNotNull(plugin, ""plugin"");
    Preconditions.checkNotNull(listener, ""listener"");

    // Verify that all listeners are valid.
    for (Method method : listener.getClass().getDeclaredMethods()) {
        if (method.isAnnotationPresent(EventHandler.class)) {
            if (method.getParameterCount() != 1) {
                throw new IllegalArgumentException(""Method "" + method.getName() + "" in "" + listener + "" does not accept only one parameter."");
            }

            if (!Event.class.isAssignableFrom(method.getParameterTypes()[0])) {
                throw new IllegalArgumentException(""Method "" + method.getName() + "" in "" + listener + "" does not accept a subclass of Event."");
            }

            method.setAccessible(true);
        }
    }

    synchronized (registerLock) {
        listenersByPlugin.computeIfAbsent(plugin, k -> new ArrayList<>()).add(listener);
        listeners.add(listener);
        bakeHandlers();
    }
}"
368,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/NukkitEventManager.java,NukkitEventManager,fire__(Event event),"@Override
public void fire(Event event) {
    Preconditions.checkNotNull(event, ""event"");
    EventFireHandler handler = eventHandlers.get(event.getClass());
    if (handler != null) {
        handler.fire(event);
    }
}"
369,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/NukkitEventManager.java,NukkitEventManager,unregisterListener__(Listener listener),"@Override
public void unregisterListener(Listener listener) {
    Preconditions.checkNotNull(listener, ""listener"");
    synchronized (registerLock) {
        for (List<Object> objects : listenersByPlugin.values()) {
            objects.remove(listener);
        }
        listeners.remove(listener);
        bakeHandlers();
    }
}"
370,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/NukkitEventManager.java,NukkitEventManager,unregisterAllListeners__(Plugin plugin),"@Override
public void unregisterAllListeners(Plugin plugin) {
    Preconditions.checkNotNull(plugin, ""plugin"");
    synchronized (registerLock) {
        List<Object> objects = listenersByPlugin.remove(plugin);
        if (objects != null) {
            listeners.removeAll(objects);
            bakeHandlers();
        }
    }
}"
371,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/NukkitEventManager.java,NukkitEventManager,bakeHandlers__(),"private void bakeHandlers() {
    Map<Class<? extends Event>, List<ReflectionEventFireHandler.ListenerMethod>> listenerMap = new HashMap<>();

    for (Object listener : listeners) {
        for (Method method : listener.getClass().getDeclaredMethods()) {
            if (method.isAnnotationPresent(EventHandler.class)) {
                listenerMap.computeIfAbsent((Class<? extends Event>) method.getParameterTypes()[0], (k) -> new ArrayList<>())
                        .add(new ReflectionEventFireHandler.ListenerMethod(listener, method));
            }
        }
    }

    for (List<ReflectionEventFireHandler.ListenerMethod> methods : listenerMap.values()) {
        Collections.sort(methods);
    }

    Map<Class<? extends Event>, EventFireHandler> handlerMap = new HashMap<>();
    for (Map.Entry<Class<? extends Event>, List<ReflectionEventFireHandler.ListenerMethod>> entry : listenerMap.entrySet()) {
        handlerMap.put(entry.getKey(), new ReflectionEventFireHandler(entry.getValue()));
    }
    this.eventHandlers = ImmutableMap.copyOf(handlerMap);
}"
372,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/PluginDescription.java,PluginDescription,getId__(),String getId();
373,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/PluginDescription.java,PluginDescription,getAuthor__(),String getAuthor();
374,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/PluginDescription.java,PluginDescription,getVersion__(),String getVersion();
375,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/PluginDescription.java,PluginDescription,getDependencies__(),Collection<String> getDependencies();
376,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/PluginDescription.java,PluginDescription,getSoftDependencies__(),Collection<String> getSoftDependencies();
377,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/PluginDescription.java,PluginDescription,getPath__(),Optional<Path> getPath();
378,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitCommandConsoleCompletor.java,NukkitCommandConsoleCompletor,NukkitCommandConsoleCompletor__(NukkitServer server),"public NukkitCommandConsoleCompletor(NukkitServer server) {
    this.server = server;
}"
379,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/console/NukkitCommandConsoleCompletor.java,NukkitCommandConsoleCompletor,"complete__(LineReader lineReader, ParsedLine parsedLine, List<Candidate> list)","@Override
public void complete(LineReader lineReader, ParsedLine parsedLine, List<Candidate> list) {
    // buffer could be null
    Preconditions.checkNotNull(lineReader, ""lineReader"");
    Preconditions.checkNotNull(list, ""list"");

    if (parsedLine.wordIndex() == 0) {
        server.getCommandMap().getCommands().keySet().forEach((cmd) ->  list.add(new Candidate(cmd)));
    } else {
        SortedSet<String> names = new TreeSet<String>();
        server.getCommandMap().getCommands().keySet().forEach((cmd) -> names.add(cmd));
        for (String match : names) {
            if (!match.toLowerCase().startsWith(parsedLine.line().toLowerCase())) {
                continue;
            }

            list.add(new Candidate(match));
        }
    }
}"
380,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/Bootstrap.java,Bootstrap,main__(String... args),"public static void main(String... args) {
    //Shorter title for windows 8/2012
    String osName = System.getProperty(""os.name"").toLowerCase();
    if (osName.contains(""windows"")) {
        if (osName.contains(""windows 8"") || osName.contains(""2012"")) {
            shortTitle = true;
        }
    }
    OptionParser parser = new OptionParser(){{
        accepts(""loglevel"").withRequiredArg().ofType(String.class);
        accepts(""disable-ansi"");
    }};

    OptionSet options = parser.parse(args);

    Level logLevel = Level.INFO;
    if (options.has(""loglevel"")) {
        logLevel = Level.toLevel((String) options.valueOf(""loglevel""), Level.INFO);
    }

    LoggerContext ctx = (LoggerContext) org.apache.logging.log4j.LogManager.getContext(false);
    Configuration config = ctx.getConfiguration();
    LoggerConfig loggerConfig = config.getLoggerConfig(org.apache.logging.log4j.LogManager.ROOT_LOGGER_NAME);
    loggerConfig.setLevel(logLevel);
    ctx.updateLoggers();

    if(options.has(""disable-ansi"")) {
        ANSI = false;
    }

    log.debug(""Using log level {}"", logLevel);
    log.info(""Nukkit is loading..."");
    NukkitServer server = new NukkitServer(PATH, DATA_PATH, PLUGIN_PATH, ANSI, shortTitle);
    try {
        server.boot();
    } catch (Exception e) {
        log.throwing(e);
    }

    log.info(""Stopping server..."");
    log.debug(""Stopping other threads"");

    for (Thread thread : java.lang.Thread.getAllStackTraces().keySet()) {
        if (!(thread instanceof InterruptibleThread)) {
            continue;
        }
        log.debug(""Stopping "" + thread.getClass().getSimpleName() + "" thread"");
        if (thread.isAlive()) {
            thread.interrupt();
        }
    }

    ServerKiller killer = new ServerKiller(8);
    killer.start();

    log.info(""Goodbye!"");
    /*logger.shutdown();
    logger.interrupt();
    CommandReader.getInstance().removePromptLine();

    if (ANSI) {
        System.out.print((char) 0x1b + ""]0;Server Stopped"" + (char) 0x07);
    }
    System.exit(0);*/
}"
381,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/TranslatedMessage.java,TranslatedMessage,"TranslatedMessage__(@Nonnull String name, @Nonnull List<String> replacements)","public TranslatedMessage(@Nonnull String name, @Nonnull List<String> replacements) {
    this.name = Preconditions.checkNotNull(name, ""name"");
    this.replacements = ImmutableList.copyOf(Preconditions.checkNotNull(replacements, ""replacements""));
}"
382,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/TranslatedMessage.java,TranslatedMessage,"TranslatedMessage__(@Nonnull String name, @Nonnull String... replacements)","public TranslatedMessage(@Nonnull String name, @Nonnull String... replacements) {
    this.name = Preconditions.checkNotNull(name, ""name"");
    this.replacements = ImmutableList.copyOf(replacements);
}"
383,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/TranslatedMessage.java,TranslatedMessage,getName__(),"@Nonnull
public String getName() {
    return name;
}"
384,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/TranslatedMessage.java,TranslatedMessage,getReplacements__(),"@Nonnull
public List<String> getReplacements() {
    return replacements;
}"
385,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/TranslatedMessage.java,TranslatedMessage,equals__(Object o),"@Override
public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    TranslatedMessage that = (TranslatedMessage) o;
    return Objects.equals(name, that.name) &&
            Objects.equals(replacements, that.replacements);
}"
386,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/TranslatedMessage.java,TranslatedMessage,hashCode__(),"@Override
public int hashCode() {
    return Objects.hash(name, replacements);
}"
387,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/TranslatedMessage.java,TranslatedMessage,toString__(),"@Override
public String toString() {
    return ""TranslatedMessage{"" +
            ""name='"" + name + '\'' +
            "", replacements="" + replacements +
            '}';
}"
388,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,"NukkitServer__(final String filePath, final String dataPath, final String pluginPath, final boolean ansiEnabled, final boolean useShortTitle)","NukkitServer(final String filePath, final String dataPath, final String pluginPath, final boolean ansiEnabled, final boolean useShortTitle) {
    this.filePath = filePath;
    this.dataPath = new File(dataPath).getAbsolutePath() + File.separator;
    this.pluginPath = new File(pluginPath).getAbsolutePath() + File.separator;
    this.ansiEnabled = ansiEnabled;
    this.useShortTitle = useShortTitle;
}"
389,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getEventManager__(),"@Override
public EventManager getEventManager() {
    return eventManager;
}"
390,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getConsoleCommandExecutorSource__(),"@Override
public ConsoleCommandExecutorSource getConsoleCommandExecutorSource() {
    return consoleCommandExecutorSource;
}"
391,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getJsonMapper__(),"@Nonnull
@Override
public ObjectMapper getJsonMapper() {
    return JSON_MAPPER;
}"
392,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getYamlMapper__(),"@Nonnull
@Override
public ObjectMapper getYamlMapper() {
    return YAML_MAPPER;
}"
393,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getPropertiesMapper__(),"@Nonnull
@Override
public ObjectMapper getPropertiesMapper() {
    return PROPERTIES_MAPPER;
}"
394,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,getServerProperties__(),"@Nonnull
@Override
public ServerProperties getServerProperties() {
    return serverProperties;
}"
395,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,broadcastMessage__(Message message),"public void broadcastMessage(Message message) {
    broadcast(message, BROADCAST_CHANNEL_USERS);
}"
396,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,"broadcastMessage__(String message, Collection<MessageRecipient> recipients)","public void broadcastMessage(String message, Collection<MessageRecipient> recipients) {
    for (MessageRecipient recipient : recipients) {
        recipient.sendMessage(message);
    }
}"
397,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,"broadcastMessage__(Message message, Collection<MessageRecipient> recipients)","public void broadcastMessage(Message message, Collection<MessageRecipient> recipients) {
    for (MessageRecipient recipient : recipients) {
        recipient.sendMessage(message);
    }
}"
398,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,loadPlugins__(),"private void loadPlugins() throws Exception {
    log.info(""L"");
    try {
        Path pluginPath = Paths.get(""plugins"");
        if (Files.notExists(pluginPath)) {
            Files.createDirectory(pluginPath);
        } else {
            if (!Files.isDirectory(pluginPath)) {
                log.info(""Plugin location {} is not a directory, continuing without loading plugins."", pluginPath);
                return;
            }
        }
        pluginManager.loadPlugins(pluginPath);
        pluginManager.getAllPlugins().forEach(p -> eventManager.register(p.getPlugin(), p.getPlugin()));
    } catch (Exception e) {
        log.error(""Can't load plugins"", e);
    }
    log.info(""Loaded {} plugins."", pluginManager.getAllPlugins().size());
}"
399,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,loadServerProperties__(),"private void loadServerProperties() throws Exception {
    Path configFile = Paths.get(filePath + File.separator + ""server.properties"");
    try {
        serverProperties = NukkitServerProperties.load(configFile);
        serverProperties.addMissingValues();
        if (serverProperties.hasPropertiesChanged()) {
            NukkitServerProperties.save(configFile, serverProperties);
        }
    } catch (NoSuchFileException e) {
        serverProperties = NukkitServerProperties.defaultConfiguration();
        NukkitServerProperties.save(configFile, serverProperties);
    }
}"
400,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,reloadServerProperties__(),"private void reloadServerProperties() throws Exception {
    if (serverProperties.isValueChanged()) {
        Path configFile = Paths.get(filePath + File.separator + ""server.properties"");
        NukkitServerProperties.save(configFile, serverProperties);
    }
    serverProperties = null;
    loadServerProperties();
}"
401,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer,loadWhitelist__(),"private void loadWhitelist() throws Exception {
    Path whitelistFile = Paths.get(filePath + File.separator + ""whitelist.json"");
    try {
        whitelist = NukkitWhitelist.load(whitelistFile);
    } catch (NoSuchFileException e) {
        whitelist = NukkitWhitelist.defaultConfiguration();
        NukkitWhitelist.save(whitelistFile, whitelist);
    }
}"
402,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer.ConsoleReader,run__(),"@Override
public void run() {
    String line;
    try {
        while (running.get()) {
            // Read line
            reading.set(true);
            line = lineReader.readLine(""> "");
            inputLines.offer(line);
        }
    } catch (UserInterruptException e) {
        shutdown();
    } finally {
        NukkitConsoleAppender.setLineReader(null);
    }
}"
403,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServer.java,NukkitServer.ConsoleReader,readLine__(),"public String readLine() throws Exception{
    try {
        reading.set(true);
        return lineReader.readLine();
    } catch (UserInterruptException e) {
        shutdown();
    }
    return null;
}"
404,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/command/CommandExecutor.java,CommandExecutor,"onCommand__(CommandExecutorSource sender, Command command, String label, String[] args)","boolean onCommand(CommandExecutorSource sender, Command command, String label, String[] args);"
405,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/lang/BaseLang.java,BaseLang,processLang__(String content),"private Map<String, String> processLang(String content) {
    Map<String, String> transforms = new HashMap<>();
    for (String line : content.split(""\n"")) {
        line = line.trim();
        if (line.equals("""") || line.charAt(0) == '#') {
            continue;
        }
        String[] t = line.split(""="");
        if (t.length < 2) {
            continue;
        }
        String key = t[0];
        String value = """";
        for (int i = 1; i < t.length - 1; i++) {
            value += t[i] + ""="";
        }
        value += t[t.length - 1];
        if (value.equals("""")) {
            continue;
        }
        transforms.put(key, value);
    }
    return transforms;
}"
406,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Whitelist.java,Whitelist,getEntries__(),"Map<String, Entry> getEntries();"
407,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Whitelist.java,Whitelist,addToWhitelist__(String name),void addToWhitelist(String name);
408,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Whitelist.java,Whitelist,removeFromWhitelist__(String name),void removeFromWhitelist(String name);
409,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Whitelist.java,Entry,getXuid__(),String getXuid();
410,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Whitelist.java,Entry,getUuid__(),String getUuid();
411,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Whitelist.java,Entry,getName__(),String getName();
412,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/player/PlayerMessageEvent.java,PlayerMessageEvent,PlayerMessageEvent__(final Player player),"protected PlayerMessageEvent(final Player player) {
    super(player);
}"
413,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/command/NukkitCommand.java,NukkitCommand,"execute__(CommandExecutorSource sender, String commandLabel, String[] args)","public abstract boolean execute(CommandExecutorSource sender, String commandLabel, String[] args);"
414,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Server.java,Server,broadcastMessage__(String message),void broadcastMessage(String message);
415,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Server.java,Server,getName__(),"@Nonnull
;"
416,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Server.java,Server,getVersion__(),"@Nonnull
;"
417,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Server.java,Server,getApiVersion__(),"@Nonnull
;"
418,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Server.java,Server,getEventManager__(),"@Nonnull
;"
419,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Server.java,Server,getConsoleCommandExecutorSource__(),"@Nonnull
;"
420,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Server.java,Server,getJsonMapper__(),"@Nonnull
;"
421,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Server.java,Server,getYamlMapper__(),"@Nonnull
;"
422,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Server.java,Server,getPropertiesMapper__(),"@Nonnull
;"
423,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Server.java,Server,getServerProperties__(),"@Nonnull
;"
424,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Server.java,Server,getWhitelist__(),"@Nonnull
;"
425,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,load__(Path path),"public static NukkitServerProperties load(Path path) throws IOException {
    try (BufferedReader reader = Files.newBufferedReader(path)) {
        return NukkitServer.PROPERTIES_MAPPER.readValue(reader, NukkitServerProperties.class);
    }
}"
426,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,"save__(Path path, NukkitServerProperties configuration)","public static void save(Path path, NukkitServerProperties configuration) throws IOException {
    try (BufferedWriter writer = Files.newBufferedWriter(path, StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING)) {
        NukkitServer.PROPERTIES_MAPPER.writerWithDefaultPrettyPrinter().writeValue(writer, configuration);
    }
}"
427,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,defaultConfiguration__(),"public static NukkitServerProperties defaultConfiguration() {
    NukkitServerProperties configuration = new NukkitServerProperties();
    configuration.addMissingValues();
    return configuration;
}"
428,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,generateRandomPassword__(),"private static String generateRandomPassword() {
    BigInteger integer = new BigInteger(130, new Random());
    return integer.toString(36);
}"
429,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,hasPropertiesChanged__(),"public boolean hasPropertiesChanged() {
    return valueChanged;
}"
430,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setMotd__(String motd),"@Override
public void setMotd(String motd) {
    valueChanged = true;
    this.motd = motd;
}"
431,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setSubMotd__(String subMotd),"@Override
public void setSubMotd(String subMotd) {
    valueChanged = true;
    this.subMotd = subMotd;
}"
432,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setViewDistance__(int viewDistance),"@Override
public void setViewDistance(int viewDistance) {
    valueChanged = true;
    this.viewDistance = viewDistance;
}"
433,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setWhitelistEnabled__(boolean whitelistEnabled),"@Override
public void setWhitelistEnabled(boolean whitelistEnabled) {
    valueChanged = true;
    this.whitelistEnabled = whitelistEnabled;
}"
434,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setAchievementsEnabled__(boolean achievementsEnabled),"@Override
public void setAchievementsEnabled(boolean achievementsEnabled) {
    valueChanged = true;
    this.achievementsEnabled = achievementsEnabled;
}"
435,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setAchievementsAnnounced__(boolean achievementsAnnounced),"@Override
public void setAchievementsAnnounced(boolean achievementsAnnounced) {
    valueChanged = true;
    this.achievementsAnnounced = achievementsAnnounced;
}"
436,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setSpawnProtection__(int spawnProtection),"@Override
public void setSpawnProtection(int spawnProtection) {
    valueChanged = true;
    this.spawnProtection = spawnProtection;
}"
437,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setMaxPlayers__(int maxPlayers),"@Override
public void setMaxPlayers(int maxPlayers) {
    valueChanged = true;
    this.maxPlayers = maxPlayers;
}"
438,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setFlightEnabled__(boolean flightEnabled),"@Override
public void setFlightEnabled(boolean flightEnabled) {
    valueChanged = true;
    this.flightEnabled = flightEnabled;
}"
439,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setAnimalSpawningEnabled__(boolean animalSpawningEnabled),"@Override
public void setAnimalSpawningEnabled(boolean animalSpawningEnabled) {
    valueChanged = true;
    this.animalSpawningEnabled = animalSpawningEnabled;
}"
440,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setMobSpawningEnabled__(boolean mobSpawningEnabled),"@Override
public void setMobSpawningEnabled(boolean mobSpawningEnabled) {
    valueChanged = true;
    this.mobSpawningEnabled = mobSpawningEnabled;
}"
441,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setDefaultGamemode__(String defaultGamemode),"@Override
public void setDefaultGamemode(String defaultGamemode) {
    valueChanged = true;
    this.defaultGamemode = defaultGamemode;
}"
442,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setGamemodeForced__(boolean gamemodeForced),"@Override
public void setGamemodeForced(boolean gamemodeForced) {
    valueChanged = true;
    this.gamemodeForced = gamemodeForced;
}"
443,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setHardcore__(boolean hardcore),"@Override
public void setHardcore(boolean hardcore) {
    valueChanged = true;
    if (hardcore && difficulty < 3) difficulty = 3;
    this.hardcore = hardcore;
}"
444,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setPvpEnabled__(boolean pvpEnabled),"@Override
public void setPvpEnabled(boolean pvpEnabled) {
    valueChanged = true;
    this.pvpEnabled = pvpEnabled;
}"
445,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setDifficulty__(int difficulty),"@Override
public void setDifficulty(int difficulty) {
    valueChanged = true;
    this.difficulty = difficulty;
}"
446,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,setResourcesForced__(boolean resourcesForced),"@Override
public void setResourcesForced(boolean resourcesForced) {
    valueChanged = true;
    this.resourcesForced = resourcesForced;
}"
447,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitServerProperties.java,NukkitServerProperties,addMissingValues__(),"public void addMissingValues() {
    if (motd == null) {
        motd = ""A Minecraft Server"";
        valueChanged = true;
    }

    if (subMotd == null) {
        subMotd = ""Powered by Nukkit"";
        valueChanged = true;
    }

    if (defaultGamemode == null) {
        defaultGamemode = ""SURVIVAL"";
        valueChanged = true;
    }

    if (serverAddress == null) {
        serverAddress = ""0.0.0.0"";
        valueChanged = true;
    }

    if (generatorSettings == null) {
        generatorSettings = """";
        valueChanged = true;
    }

    if (levelName == null) {
        levelName = ""world"";
        valueChanged = true;
    }

    if (levelSeed == null) {
        levelSeed = Long.toString(System.currentTimeMillis());
        valueChanged = true;
    }
    if (levelType == null) {
        levelType = ""DEFAULT"";
        valueChanged = true;
    }

    if (rcon == null) {
        rcon = new Rcon();
        rcon.enabled = true;
        rcon.address = ""127.0.0.1"";
        rcon.port = 27015;
        rcon.password = generateRandomPassword();
        valueChanged = true;
    }
}"
448,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,onLoad__(),void onLoad();
449,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,onEnable__(),void onEnable();
450,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,isEnabled__(),boolean isEnabled();
451,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,onDisable__(),void onDisable();
452,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,isDisabled__(),boolean isDisabled();
453,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,getDataFolder__(),File getDataFolder();
454,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,getDescription__(),PluginDescription getDescription();
455,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,getResource__(String filename),InputStream getResource(String filename);
456,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,saveResource__(String filename),boolean saveResource(String filename);
457,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,"saveResource__(String filename, boolean replace)","boolean saveResource(String filename, boolean replace);"
458,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,"saveResource__(String filename, String outputName, boolean replace)","boolean saveResource(String filename, String outputName, boolean replace);"
459,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,getConfig__(),Config getConfig();
460,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,saveConfig__(),void saveConfig();
461,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,saveDefaultConfig__(),void saveDefaultConfig();
462,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,reloadConfig__(),void reloadConfig();
463,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,getServer__(),Server getServer();
464,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,getName__(),String getName();
465,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,getLogger__(),PluginLogger getLogger();
466,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/Plugin.java,Plugin,getPluginLoader__(),PluginLoader getPluginLoader();
467,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Location.java,Location,getPosition__(),Vector3f getPosition();
468,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Location.java,Location,getRotation__(),Rotation getRotation();
469,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/Cancellable.java,Cancellable,isCancelled__(),boolean isCancelled();
470,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/Cancellable.java,Cancellable,setCancelled__(boolean cancelled),void setCancelled(boolean cancelled);
471,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/PluginManager.java,PluginManager,getAllPlugins__(),Collection<Plugin> getAllPlugins();
472,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/plugin/PluginManager.java,PluginManager,getPlugin__(String id),Optional<Plugin> getPlugin(String id);
473,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/firehandler/ReflectionEventFireHandler.java,ReflectionEventFireHandler,ReflectionEventFireHandler__(Collection<ListenerMethod> methods),"public ReflectionEventFireHandler(Collection<ListenerMethod> methods) {
    this.methods = ImmutableList.copyOf(methods);
}"
474,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/firehandler/ReflectionEventFireHandler.java,ReflectionEventFireHandler,fire__(Event event),"@Override
public void fire(Event event) {
    long start = System.nanoTime();
    for (ListenerMethod method : methods) {
        try {
            method.run(event);
        } catch (InvocationTargetException | IllegalAccessException e) {
            log.error(""Exception occurred while executing method "" + method + "" for "" + event, e);
        }
    }
    long differenceTaken = System.nanoTime() - start;
    if (differenceTaken >= LONG_RUNNING_EVENT_TIME) {
        log.warn(""Event {} took {}ms to fire!"", event, BigDecimal.valueOf(differenceTaken)
                .divide(new BigDecimal(""1000000""), RoundingMode.HALF_UP).setScale(2, RoundingMode.HALF_UP));
    }
}"
475,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/firehandler/ReflectionEventFireHandler.java,ReflectionEventFireHandler.ListenerMethod,"ListenerMethod__(Object listener, Method method)","public ListenerMethod(Object listener, Method method) {
    this.listener = listener;
    this.method = method;
}"
476,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/firehandler/ReflectionEventFireHandler.java,ReflectionEventFireHandler.ListenerMethod,run__(Event event),"public void run(Event event) throws InvocationTargetException, IllegalAccessException {
    method.invoke(listener, event);
}"
477,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/firehandler/ReflectionEventFireHandler.java,ReflectionEventFireHandler.ListenerMethod,toString__(),"@Override
public String toString() {
    return listener.getClass().getName() + ""#"" + method.getName();
}"
478,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/firehandler/ReflectionEventFireHandler.java,ReflectionEventFireHandler.ListenerMethod,getListener__(),"public Object getListener() {
    return listener;
}"
479,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/firehandler/ReflectionEventFireHandler.java,ReflectionEventFireHandler.ListenerMethod,getMethod__(),"public Method getMethod() {
    return method;
}"
480,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/event/firehandler/ReflectionEventFireHandler.java,ReflectionEventFireHandler.ListenerMethod,compareTo__(@Nonnull ListenerMethod o),"@Override
public int compareTo(@Nonnull ListenerMethod o) {
    EventHandler handler = getMethod().getAnnotation(EventHandler.class);
    if (handler == null) {
        return -1;
    }

    EventHandler handler2 = o.getMethod().getAnnotation(EventHandler.class);
    if (handler2 == null) {
        return 1;
    }

    return Integer.compare(handler.order(), handler2.order());
}"
481,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/permission/Permissible.java,Permissible,isPermissionSet__(String name),boolean isPermissionSet(String name);
482,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/permission/Permissible.java,Permissible,isPermissionSet__(Permission permission),boolean isPermissionSet(Permission permission);
483,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/permission/Permissible.java,Permissible,hasPermission__(String name),boolean hasPermission(String name);
484,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/permission/Permissible.java,Permissible,hasPermission__(Permission permission),boolean hasPermission(Permission permission);
485,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/permission/Permissible.java,Permissible,addAttachment__(Plugin plugin),PermissionAttachment addAttachment(Plugin plugin);
486,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/permission/Permissible.java,Permissible,"addAttachment__(Plugin plugin, String name)","PermissionAttachment addAttachment(Plugin plugin, String name);"
487,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/permission/Permissible.java,Permissible,"addAttachment__(Plugin plugin, String name, Boolean value)","PermissionAttachment addAttachment(Plugin plugin, String name, Boolean value);"
488,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/permission/Permissible.java,Permissible,removeAttachment__(PermissionAttachment attachment),void removeAttachment(PermissionAttachment attachment);
489,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/permission/Permissible.java,Permissible,recalculatePermissions__(),void recalculatePermissions();
490,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/permission/Permissible.java,Permissible,getEffectivePermissions__(),"Map<String, PermissionAttachmentInfo> getEffectivePermissions();"
491,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/GenericMessage.java,GenericMessage,GenericMessage__(@Nonnull String message),"public GenericMessage(@Nonnull String message) {
    this.message = message;
}"
492,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/GenericMessage.java,GenericMessage,getMessage__(),"@Nonnull
public final String getMessage() {
    return message;
}"
493,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/GenericMessage.java,GenericMessage,equals__(Object o),"@Override
public final boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    GenericMessage that = (GenericMessage) o;
    return Objects.equals(message, that.message);
}"
494,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/GenericMessage.java,GenericMessage,hashCode__(),"@Override
public final int hashCode() {
    return Objects.hash(caption, message);
}"
495,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/message/GenericMessage.java,GenericMessage,toString__(),"@Override
public final String toString() {
    return ""PopupMessage{message='"" + message + '\'' + '}';
}"
496,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/MessageRecipient.java,MessageRecipient,sendMessage__(String text),void sendMessage(String text);
497,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/MessageRecipient.java,MessageRecipient,sendMessage__(Message text),void sendMessage(Message text);
498,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Session.java,Session,getName__(),"@Nonnull
;"
499,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Session.java,Session,getRemoteAddress__(),"@Nonnull
;"
500,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Session.java,Session,getUniqueId__(),"@Nonnull
;"
501,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Session.java,Session,isXboxAuthenticated__(),boolean isXboxAuthenticated();
502,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/Session.java,Session,getXuid__(),"@Nonnull
;"
503,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/Event.java,Event,getEventName__(),"default String getEventName(){
    return getClass().getName();
}"
504,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/player/PlayerCommandPreprocessEvent.java,PlayerCommandPreprocessEvent,"PlayerCommandPreprocessEvent__(final Player player, String message)","public PlayerCommandPreprocessEvent(final Player player, String message) {
    super(player);
    this.message = message;
}"
505,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/player/PlayerCommandPreprocessEvent.java,PlayerCommandPreprocessEvent,setPlayer__(Player player),"public void setPlayer(Player player) {
    this.player = player;
}"
506,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/player/PlayerCommandPreprocessEvent.java,PlayerCommandPreprocessEvent,isCancelled__(),"@Override
public boolean isCancelled() {
    return cancelled;
}"
507,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,api/src/main/java/cn/nukkit/api/event/player/PlayerCommandPreprocessEvent.java,PlayerCommandPreprocessEvent,setCancelled__(boolean cancelled),"@Override
public void setCancelled(boolean cancelled) {
    this.cancelled = cancelled;
}"
508,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitWhitelist.java,NukkitWhitelist,load__(Path path),"public static NukkitWhitelist load(Path path) throws IOException {
    try (BufferedReader reader = Files.newBufferedReader(path)) {
        NukkitWhitelist whitelist = new NukkitWhitelist();

        List<Entry> entryList = NukkitServer.JSON_MAPPER.readValue(reader, new TypeReference<List<Entry>>(){});
        whitelist.entries = new HashMap<>();
        entryList.stream().forEach(entry -> {
            whitelist.entries.put(entry.name, entry);
            whitelist.entries.put(entry.uuid, entry);
            whitelist.entries.put(entry.xuid, entry);
        });

        return whitelist;
    }
}"
509,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitWhitelist.java,NukkitWhitelist,"save__(Path path, NukkitWhitelist whitelist)","public static void save(Path path, NukkitWhitelist whitelist) throws IOException {
    try (BufferedWriter writer = Files.newBufferedWriter(path, StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING)) {
        NukkitServer.PROPERTIES_MAPPER.writerWithDefaultPrettyPrinter().writeValue(writer, whitelist.entries);
    }
}"
510,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitWhitelist.java,NukkitWhitelist,defaultConfiguration__(),"public static NukkitWhitelist defaultConfiguration() {
    NukkitWhitelist whitelist = new NukkitWhitelist();
    whitelist.entries = new HashMap<>();
    return whitelist;
}"
511,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitWhitelist.java,NukkitWhitelist,addToWhitelist__(String name),"public void addToWhitelist(String name) {
    entries.put(name, null);
}"
512,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitWhitelist.java,NukkitWhitelist,removeFromWhitelist__(String name),"public void removeFromWhitelist(String name) {
    entries.remove(name);
}"
513,NukkitX_Nukkit__542354be77c337f5749a379281773038b750779f__542354be77c337f5749a379281773038b750779f,server/src/main/java/cn/nukkit/server/NukkitWhitelist.java,NukkitWhitelist.Entry,"Entry__(String xuid, String uuid, String name)","public Entry(String xuid, String uuid, String name) {
    this.xuid = xuid;
    this.uuid = uuid;
    this.name = name;
}"
514,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/MVCConf.java,MVCConf,addResourceHandlers__(ResourceHandlerRegistry registry),"@Override
public void addResourceHandlers(ResourceHandlerRegistry registry) {
    registry
            .addResourceHandler(""/resources/**"")
                .addResourceLocations(""/resources/"")
                .setCachePeriod(cachePeriod);

      registry
              .addResourceHandler(""/favicon.ico"")
                  .addResourceLocations(""/resources/favicon.ico"")
                  .setCachePeriod(cachePeriod);

}"
515,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/MVCConf.java,MVCConf,internalResourceViewResolver__(),"@Bean
public ViewResolver internalResourceViewResolver() {
    InternalResourceViewResolver viewResolver = new InternalResourceViewResolver();
    viewResolver.setPrefix(""/view/"");
    viewResolver.setSuffix("".jsp"");
    viewResolver.setRedirectHttp10Compatible(false);
    return viewResolver;
}"
516,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/MVCConf.java,MVCConf,"wsControlServlet__(@Value(""${mvc.control-servlet-path}"") String path)","@Bean
public ServletRegistrationBean wsControlServlet(@Value(""${mvc.control-servlet-path}"") String path) {
    ServletRegistrationBean servletRegistrationBean = new ServletRegistrationBean<>(new ControlWebSocketServlet(timer, controlPlayerTransport), path);
    servletRegistrationBean.setLoadOnStartup(100);
    servletRegistrationBean.setName(""wsControlServlet"");
    return servletRegistrationBean;
}"
517,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/MVCConf.java,MVCConf,"wsScreenServlet__(@Value(""${mvc.screen-servlet-path}"") String path)","@Bean
public ServletRegistrationBean wsScreenServlet(@Value(""${mvc.screen-servlet-path}"") String path) {
    ServletRegistrationBean servletRegistrationBean = new ServletRegistrationBean<>(new ScreenWebSocketServlet(), path);
    servletRegistrationBean.setLoadOnStartup(100);
    servletRegistrationBean.setName(""wsScreenServlet"");
    return servletRegistrationBean;
}"
518,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/services/controller/ScreenController.java,ScreenController,"ScreenController__(@NamedArg(""screenPlayerTransport"") PlayerTransport screenPlayerTransport)","public ScreenController(@NamedArg(""screenPlayerTransport"") PlayerTransport screenPlayerTransport) {
    this.transport = screenPlayerTransport;
}"
519,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/AppConfig.java,AppConfig,"restSenderExecutorService__(@Value(""${rest-sender.pool-size}"") int poolSize)","@Bean
public ScheduledThreadPoolExecutor restSenderExecutorService(@Value(""${rest-sender.pool-size}"") int poolSize) {
    return new ScheduledThreadPoolExecutor(poolSize);
}"
520,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/AppConfig.java,AppConfig,controlPlayerTransport__(),"@Bean
public PlayerTransport controlPlayerTransport() {
    return new PlayerTransportImpl();
}"
521,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/AppConfig.java,AppConfig,screenPlayerTransport__(),"@Bean
public PlayerTransport screenPlayerTransport() {
    return new PlayerTransportImpl();
}"
522,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/PostgresDBConfig.java,PostgresDBConfig,connectionThreadPollFactory__(),"@Bean
public ConnectionThreadPoolFactory connectionThreadPollFactory() {
    return new PostgreSQLConnectionThreadPoolFactory(jdbcString);
}"
523,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/PostgresDBConfig.java,PostgresDBConfig,actionLogger__(),"@Bean
public ActionLogger actionLogger() {
    return new ActionLogger(connectionThreadPollFactory());
}"
524,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/PostgresDBConfig.java,PostgresDBConfig,playerGameSaver__(),"@Bean
public PlayerGameSaver playerGameSaver() {
    return new PlayerGameSaver(connectionThreadPollFactory());
}"
525,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/PostgresDBConfig.java,PostgresDBConfig,registration__(),"@Bean
public Registration registration() {
    return new Registration(connectionThreadPollFactory());
}"
526,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/PostgresDBConfig.java,PostgresDBConfig,payment__(),"@Bean
public Payment payment() {
    return new Payment(connectionThreadPollFactory());
}"
527,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/PostgresDBConfig.java,PostgresDBConfig,gameData__(),"@Bean
public GameData gameData() {
    return new GameData(connectionThreadPollFactory());
}"
528,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/SqliteDDConfig.java,SqliteDDConfig,databasePoolFactory__(),"@Bean
public ConnectionThreadPoolFactory databasePoolFactory() {
    return new SqliteConnectionThreadPoolFactory(logFileName, contextPathGetter);
}"
529,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/SqliteDDConfig.java,SqliteDDConfig,actionLogger__(),"@Bean
public ActionLogger actionLogger() {
    return new ActionLogger(databasePoolFactory());
}"
530,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/SqliteDDConfig.java,SqliteDDConfig,playerPoolFactory__(),"@Bean
public ConnectionThreadPoolFactory playerPoolFactory() {
    return new SqliteConnectionThreadPoolFactory(savesFileName, contextPathGetter);
}"
531,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/SqliteDDConfig.java,SqliteDDConfig,playerGameSaver__(),"@Bean
public PlayerGameSaver playerGameSaver() {
    return new PlayerGameSaver(playerPoolFactory());
}"
532,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/SqliteDDConfig.java,SqliteDDConfig,registrationPoolFactory__(),"@Bean
public ConnectionThreadPoolFactory registrationPoolFactory() {
    return new SqliteConnectionThreadPoolFactory(usersFileName, contextPathGetter);
}"
533,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/SqliteDDConfig.java,SqliteDDConfig,registration__(),"@Bean
public Registration registration() {
    return new Registration(registrationPoolFactory());
}"
534,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/SqliteDDConfig.java,SqliteDDConfig,paymentPoolFactory__(),"@Bean
public ConnectionThreadPoolFactory paymentPoolFactory() {
    return new SqliteConnectionThreadPoolFactory(paymentFileName, contextPathGetter);
}"
535,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/SqliteDDConfig.java,SqliteDDConfig,payment__(),"@Bean
public Payment payment() {
    return new Payment(paymentPoolFactory());
}"
536,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/SqliteDDConfig.java,SqliteDDConfig,gameDataPoolFactory__(),"@Bean
public ConnectionThreadPoolFactory gameDataPoolFactory() {
    return new SqliteConnectionThreadPoolFactory(settingsFileName, contextPathGetter);
}"
537,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/config/SqliteDDConfig.java,SqliteDDConfig,gameData__(),"@Bean
public GameData gameData() {
    return new GameData(gameDataPoolFactory());
}"
538,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/services/controller/PlayerController.java,PlayerController,"PlayerController__(@NamedArg(""controlPlayerTransport"") PlayerTransport controlPlayerTransport)","public PlayerController(@NamedArg(""controlPlayerTransport"") PlayerTransport controlPlayerTransport) { // autowiring by name
    this.transport = controlPlayerTransport;
}"
539,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/CodenjoyContestApplication.java,CodenjoyContestApplication,configure__(SpringApplicationBuilder application),"@Override
protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
    return application.sources(CodenjoyContestApplication.class);
}"
540,codenjoyme_codenjoy__9ca86c7a406eddfc69bb688fd840352e9440a99a__9ca86c7a406eddfc69bb688fd840352e9440a99a,CodingDojo/server/src/main/java/com/codenjoy/dojo/CodenjoyContestApplication.java,CodenjoyContestApplication,main__(String[] args),"public static void main(String[] args) {
    SpringApplication.run(CodenjoyContestApplication.class, args);
}"
541,teiid_teiid__b710143466a04535075cd4c9fb56894f5311f672__b710143466a04535075cd4c9fb56894f5311f672,connectors/translator-cassandra/src/main/java/org/teiid/translator/cassandra/CassandraMetadataProcessor.java,CassandraMetadataProcessor,asTeiidRuntimeType__(Name name),"private String asTeiidRuntimeType(Name name) {
    
    switch(name) {
        case ASCII:
            return TypeFacility.RUNTIME_NAMES.STRING;
        case BIGINT:
            return TypeFacility.RUNTIME_NAMES.LONG;
        case BLOB:
            return TypeFacility.RUNTIME_NAMES.BLOB;
        case BOOLEAN:
            return TypeFacility.RUNTIME_NAMES.BOOLEAN;
        case COUNTER:
            return TypeFacility.RUNTIME_NAMES.LONG;
        case DECIMAL:
            return TypeFacility.RUNTIME_NAMES.BIG_DECIMAL;
        case DOUBLE:
            return TypeFacility.RUNTIME_NAMES.DOUBLE;
        case FLOAT:
            return TypeFacility.RUNTIME_NAMES.FLOAT;
        case INET:
            return TypeFacility.RUNTIME_NAMES.OBJECT;
        case INT:
            return TypeFacility.RUNTIME_NAMES.INTEGER;
        case TEXT:
            return TypeFacility.RUNTIME_NAMES.STRING;
        case UUID:
            return TypeFacility.RUNTIME_NAMES.OBJECT;
        case VARCHAR:
            return TypeFacility.RUNTIME_NAMES.STRING;
        case VARINT:
            return TypeFacility.RUNTIME_NAMES.BIG_INTEGER;
        case LIST:
            return TypeFacility.RUNTIME_NAMES.OBJECT;
        case SET:
            return TypeFacility.RUNTIME_NAMES.OBJECT;
        case MAP:
            return TypeFacility.RUNTIME_NAMES.OBJECT;
        case CUSTOM:
            return TypeFacility.RUNTIME_NAMES.BLOB;
        case UDT:
            return TypeFacility.RUNTIME_NAMES.OBJECT;
        case TUPLE:
            return TypeFacility.RUNTIME_NAMES.OBJECT;
        case SMALLINT:
            return TypeFacility.RUNTIME_NAMES.SHORT;
        case TINYINT:
            return TypeFacility.RUNTIME_NAMES.BYTE;
        case TIMEUUID:
            return TypeFacility.RUNTIME_NAMES.OBJECT;
        case TIMESTAMP:
            return TypeFacility.RUNTIME_NAMES.TIMESTAMP;
        case DATE:
            return TypeFacility.RUNTIME_NAMES.DATE;
        case TIME:
            return TypeFacility.RUNTIME_NAMES.TIME;
        default:
            return TypeFacility.RUNTIME_NAMES.OBJECT;
    }
}"
542,afimb_chouette__45aaa983c274e2b6ab2f54af790109d98ef4cff9__45aaa983c274e2b6ab2f54af790109d98ef4cff9,chouette-core/src/main/java/fr/certu/chouette/plugin/validation/ValidationClassReportItem.java,ValidationClassReportItem,sortItems__(),"public void sortItems()
{
	 List<ReportItem> items = getItems();
	 Collections.sort(items);
}"
543,afimb_chouette__45aaa983c274e2b6ab2f54af790109d98ef4cff9__45aaa983c274e2b6ab2f54af790109d98ef4cff9,chouette-core/src/main/java/fr/certu/chouette/plugin/report/ReportItem.java,ReportItem,compareTo__(ReportItem o),"@Override
public int compareTo(ReportItem o) 
{
	// default implementation always return equals
	return 0;
}"
544,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/test/java/com/littlefisher/core/CoreApplicationTests.java,CoreApplicationTests,contextLoads__(),"@Test
public void contextLoads() {
}"
545,littlefishercoder_littlefisher-system__05551a5c0190c6c8ac88205bf30d38d4f91f4a87__05551a5c0190c6c8ac88205bf30d38d4f91f4a87,code/core-base/src/main/java/com/littlefisher/core/CoreApplication.java,CoreApplication,main__(String[] args),"public static void main(String[] args) {
    SpringApplication.run(CoreApplication.class, args);
}"
546,apache_storm__3503dcea62c9bb9d004388773705ad362e7cc5dd__3503dcea62c9bb9d004388773705ad362e7cc5dd,sql/storm-sql-external/storm-sql-mongodb/src/test/org/apache/storm/sql/mongodb/TestMongoDataSourcesProvider.java,TestMongoDataSourcesProvider.MongoArgMatcher,matches__(List<Document> docs),"@SuppressWarnings(""unchecked"")
@Override
public boolean matches(List<Document> docs) {
    Document doc = docs.get(0);
    ByteBuffer buf = ByteBuffer.wrap((byte[]) doc.get(TBL_PROPERTIES.getProperty(""trident.ser.field"")));
    ByteBuffer b = SERIALIZER.write(tuple.getValues(), null);
    return b.equals(buf);
}"
547,apache_storm__3503dcea62c9bb9d004388773705ad362e7cc5dd__3503dcea62c9bb9d004388773705ad362e7cc5dd,sql/storm-sql-external/storm-sql-kafka/src/test/org/apache/storm/sql/kafka/TestKafkaDataSourcesProvider.java,TestKafkaDataSourcesProvider.KafkaMessageMatcher,"matches__(ProducerRecord<Object, ByteBuffer> record)","@SuppressWarnings(""unchecked"")
@Override
public boolean matches(ProducerRecord<Object, ByteBuffer> record) {
    if (record.key() != tuple.get(PRIMARY_INDEX)) {
        return false;
    }
    ByteBuffer buf = record.value();
    ByteBuffer b = SERIALIZER.write(tuple.getValues(), null);
    return b.equals(buf);
}"
