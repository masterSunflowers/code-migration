[
    {
        "rev_path": "dubbo-admin-backend/src/main/java/org/apache/dubbo/admin/common/util/ConvertUtil.java",
        "definition": "public class ConvertUtil {\n    private ConvertUtil() {\n    }\n\n    public static Map<String, String> serviceName2Map(String serviceName) {\n        String group = null;\n        String version = null;\n        int i = serviceName.indexOf(\"/\");\n        if (i > 0) {\n            group = serviceName.substring(0, i);\n            serviceName = serviceName.substring(i + 1);\n        }\n        i = serviceName.lastIndexOf(\":\");\n        if (i > 0) {\n            version = serviceName.substring(i + 1);\n            serviceName = serviceName.substring(0, i);\n        }\n\n        Map<String, String> ret = new HashMap<String, String>();\n        if (!StringUtils.isEmpty(serviceName)) {\n            ret.put(Constants.INTERFACE_KEY, serviceName);\n        }\n        if (!StringUtils.isEmpty(version)) {\n            ret.put(Constants.VERSION_KEY, version);\n        }\n        if (!StringUtils.isEmpty(group)) {\n            ret.put(Constants.GROUP_KEY, group);\n        }\n\n        return ret;\n    }\n}",
        "package": "package org.apache.dubbo.admin.common.util;",
        "tree_path": "ConvertUtil",
        "name": "ConvertUtil",
        "modifiers": "public",
        "superclass": null,
        "super_interfaces": null,
        "body": "{\n    private ConvertUtil() {\n    }\n\n    public static Map<String, String> serviceName2Map(String serviceName) {\n        String group = null;\n        String version = null;\n        int i = serviceName.indexOf(\"/\");\n        if (i > 0) {\n            group = serviceName.substring(0, i);\n            serviceName = serviceName.substring(i + 1);\n        }\n        i = serviceName.lastIndexOf(\":\");\n        if (i > 0) {\n            version = serviceName.substring(i + 1);\n            serviceName = serviceName.substring(0, i);\n        }\n\n        Map<String, String> ret = new HashMap<String, String>();\n        if (!StringUtils.isEmpty(serviceName)) {\n            ret.put(Constants.INTERFACE_KEY, serviceName);\n        }\n        if (!StringUtils.isEmpty(version)) {\n            ret.put(Constants.VERSION_KEY, version);\n        }\n        if (!StringUtils.isEmpty(group)) {\n            ret.put(Constants.GROUP_KEY, group);\n        }\n\n        return ret;\n    }\n}",
        "start_point": {
            "row": 24,
            "column": 0
        },
        "end_point": {
            "row": 55,
            "column": 1
        },
        "file_mode": "Modified",
        "map_path": null,
        "methods": [
            {
                "definition": "private ConvertUtil() {\n}",
                "name": "ConvertUtil",
                "modifiers": "private",
                "parameters": [],
                "body": "{\n}",
                "constructor": true,
                "start_point": {
                    "row": 25,
                    "column": 4
                },
                "end_point": {
                    "row": 26,
                    "column": 5
                }
            },
            {
                "definition": "public static Map<String, String> serviceName2Map(String serviceName) {\n    String group = null;\n    String version = null;\n    int i = serviceName.indexOf(\"/\");\n    if (i > 0) {\n        group = serviceName.substring(0, i);\n        serviceName = serviceName.substring(i + 1);\n    }\n    i = serviceName.lastIndexOf(\":\");\n    if (i > 0) {\n        version = serviceName.substring(i + 1);\n        serviceName = serviceName.substring(0, i);\n    }\n\n    Map<String, String> ret = new HashMap<String, String>();\n    if (!StringUtils.isEmpty(serviceName)) {\n        ret.put(Constants.INTERFACE_KEY, serviceName);\n    }\n    if (!StringUtils.isEmpty(version)) {\n        ret.put(Constants.VERSION_KEY, version);\n    }\n    if (!StringUtils.isEmpty(group)) {\n        ret.put(Constants.GROUP_KEY, group);\n    }\n\n    return ret;\n}",
                "name": "serviceName2Map",
                "modifiers": "public static",
                "return_type": null,
                "parameters": [
                    {
                        "type": "String",
                        "name": "serviceName"
                    }
                ],
                "body": "{\n    String group = null;\n    String version = null;\n    int i = serviceName.indexOf(\"/\");\n    if (i > 0) {\n        group = serviceName.substring(0, i);\n        serviceName = serviceName.substring(i + 1);\n    }\n    i = serviceName.lastIndexOf(\":\");\n    if (i > 0) {\n        version = serviceName.substring(i + 1);\n        serviceName = serviceName.substring(0, i);\n    }\n\n    Map<String, String> ret = new HashMap<String, String>();\n    if (!StringUtils.isEmpty(serviceName)) {\n        ret.put(Constants.INTERFACE_KEY, serviceName);\n    }\n    if (!StringUtils.isEmpty(version)) {\n        ret.put(Constants.VERSION_KEY, version);\n    }\n    if (!StringUtils.isEmpty(group)) {\n        ret.put(Constants.GROUP_KEY, group);\n    }\n\n    return ret;\n}",
                "start_point": {
                    "row": 28,
                    "column": 4
                },
                "end_point": {
                    "row": 54,
                    "column": 5
                }
            }
        ],
        "class_mode": "Unchanged"
    }
]