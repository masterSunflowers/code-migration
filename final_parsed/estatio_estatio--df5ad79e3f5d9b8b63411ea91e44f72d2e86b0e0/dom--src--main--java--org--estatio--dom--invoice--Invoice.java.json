[
    {
        "repo_name": "estatio_estatio",
        "commit": "df5ad79e3f5d9b8b63411ea91e44f72d2e86b0e0",
        "rev_path": "dom/src/main/java/org/estatio/dom/invoice/Invoice.java",
        "definition": "@javax.jdo.annotations.PersistenceCapable(identityType = IdentityType.DATASTORE)\n@javax.jdo.annotations.DatastoreIdentity(\n        strategy = IdGeneratorStrategy.NATIVE,\n        column = \"id\")\n@javax.jdo.annotations.Version(\n        strategy = VersionStrategy.VERSION_NUMBER,\n        column = \"version\")\n@javax.jdo.annotations.Queries({\n        @javax.jdo.annotations.Query(\n                name = \"findMatchingInvoices\", language = \"JDOQL\",\n                value = \"SELECT \"\n                        + \"FROM org.estatio.dom.invoice.Invoice \"\n                        + \"WHERE source == :source \"\n                        + \"&& seller == :seller \"\n                        + \"&& buyer == :buyer \"\n                        + \"&& paymentMethod == :paymentMethod \"\n                        + \"&& status == :status \"\n                        + \"&& dueDate == :dueDate\"),\n        @javax.jdo.annotations.Query(\n                name = \"findByPropertyAndStatus\", language = \"JDOQL\",\n                value = \"SELECT \"\n                        + \"FROM org.estatio.dom.invoice.Invoice \"\n                        + \"WHERE status == :status \"\n                        + \"&& source.occupancies.contains(o) \"\n                        + \"&& o.unit.property == :property \"\n                        + \"VARIABLES \"\n                        + \"org.estatio.dom.lease.Occupancy o; \"\n                        + \"org.estatio.dom.lease.Lease source\"),\n        @javax.jdo.annotations.Query(\n                name = \"findByPropertyAndDueDateAndStatus\", language = \"JDOQL\",\n                value = \"SELECT FROM org.estatio.dom.invoice.Invoice \" +\n                        \"WHERE status == :status && \" +\n                        \"dueDate == :dueDate && \" +\n                        \"source.occupancies.contains(o) &&\" +\n                        \"o.unit.property == :property \" +\n                        \"VARIABLES org.estatio.dom.lease.Occupancy o; org.estatio.dom.lease.Lease source\"),\n        @javax.jdo.annotations.Query(\n                name = \"findByPropertyAndDueDate\", language = \"JDOQL\",\n                value = \"SELECT FROM org.estatio.dom.invoice.Invoice \" +\n                        \"WHERE dueDate == :dueDate && \" +\n                        \"source.occupancies.contains(o) &&\" +\n                        \"o.unit.property == :property \" +\n                        \"VARIABLES org.estatio.dom.lease.Occupancy o; org.estatio.dom.lease.Lease source\"),\n        @javax.jdo.annotations.Query(\n                name = \"findByStatus\", language = \"JDOQL\",\n                value = \"SELECT \"\n                        + \"FROM org.estatio.dom.invoice.Invoice \"\n                        + \"WHERE status == :status \")\n})\n@Bookmarkable\npublic class Invoice extends EstatioMutableObject<Invoice> {\n\n    public Invoice() {\n        super(\"invoiceNumber\");\n    }\n\n    // //////////////////////////////////////\n\n    public String title() {\n        return String.format(\"*%08d\", Integer.parseInt(getId()));\n    }\n\n    // //////////////////////////////////////\n\n    @Hidden(where=Where.OBJECT_FORMS)\n    public String getNumber() {\n        return ObjectUtils.firstNonNull(\n                getInvoiceNumber(),\n                getCollectionNumber(),\n                title());\n    }\n\n    // //////////////////////////////////////\n\n    private Party buyer;\n\n    @javax.jdo.annotations.Column(name = \"buyerPartyId\", allowsNull = \"false\")\n    @Disabled\n    public Party getBuyer() {\n        return buyer;\n\n    }\n\n    public void setBuyer(final Party buyer) {\n        this.buyer = buyer;\n    }\n\n    // //////////////////////////////////////\n\n    private Party seller;\n\n    @javax.jdo.annotations.Column(name = \"sellerPartyId\", allowsNull = \"false\")\n    @Disabled\n    public Party getSeller() {\n        return seller;\n    }\n\n    public void setSeller(final Party seller) {\n        this.seller = seller;\n    }\n\n    // //////////////////////////////////////\n\n    private String collectionNumber;\n\n    @javax.jdo.annotations.Column(allowsNull = \"true\", length = JdoColumnLength.Invoice.NUMBER)\n    @Disabled\n    @Hidden(where=Where.PARENTED_TABLES)\n    public String getCollectionNumber() {\n        return collectionNumber;\n    }\n\n    public void setCollectionNumber(final String collectionNumber) {\n        this.collectionNumber = collectionNumber;\n    }\n\n    // //////////////////////////////////////\n\n    private String invoiceNumber;\n\n    @javax.jdo.annotations.Column(allowsNull = \"true\", length = JdoColumnLength.Invoice.NUMBER)\n    @Disabled\n    @Hidden(where=Where.PARENTED_TABLES)\n    public String getInvoiceNumber() {\n        return invoiceNumber;\n    }\n\n    public void setInvoiceNumber(final String invoiceNumber) {\n        this.invoiceNumber = invoiceNumber;\n    }\n\n    // //////////////////////////////////////\n\n    private InvoiceSource source;\n\n    /**\n     * Polymorphic association to (any implementation of) {@link InvoiceSource}.\n     */\n    @javax.jdo.annotations.Persistent(\n            extensions = {\n                    @Extension(vendorName = \"datanucleus\",\n                            key = \"mapping-strategy\",\n                            value = \"per-implementation\"),\n                    @Extension(vendorName = \"datanucleus\",\n                            key = \"implementation-classes\",\n                            value = \"org.estatio.dom.lease.Lease\") })\n    @javax.jdo.annotations.Columns({\n            @javax.jdo.annotations.Column(name = \"sourceLeaseId\", allowsNull = \"true\")\n    })\n    @Optional\n    // not really, but to be compatible with JDO\n    @Disabled\n    public InvoiceSource getSource() {\n        return source;\n    }\n\n    public void setSource(final InvoiceSource source) {\n        this.source = source;\n    }\n\n    // //////////////////////////////////////\n\n    @javax.jdo.annotations.Persistent\n    private LocalDate invoiceDate;\n\n    @javax.jdo.annotations.Column(allowsNull = \"true\")\n    @Disabled\n    public LocalDate getInvoiceDate() {\n        return invoiceDate;\n    }\n\n    public void setInvoiceDate(final LocalDate invoiceDate) {\n        this.invoiceDate = invoiceDate;\n    }\n\n    // //////////////////////////////////////\n\n    @javax.jdo.annotations.Persistent\n    private LocalDate dueDate;\n\n    @javax.jdo.annotations.Column(allowsNull = \"false\")\n    @Disabled\n    public LocalDate getDueDate() {\n        return dueDate;\n    }\n\n    public void setDueDate(final LocalDate dueDate) {\n        this.dueDate = dueDate;\n    }\n\n    // //////////////////////////////////////\n\n    private InvoiceStatus status;\n\n    @javax.jdo.annotations.Column(allowsNull = \"false\", length = JdoColumnLength.STATUS_ENUM)\n    @Disabled\n    public InvoiceStatus getStatus() {\n        return status;\n    }\n\n    public void setStatus(final InvoiceStatus status) {\n        this.status = status;\n    }\n\n    // //////////////////////////////////////\n\n    private Currency currency;\n\n    // REVIEW: invoice generation is not populating this field.\n    @javax.jdo.annotations.Column(name = \"currencyId\", allowsNull = \"true\")\n    @Hidden(where = Where.ALL_TABLES)\n    @Disabled\n    public Currency getCurrency() {\n        return currency;\n    }\n\n    public void setCurrency(final Currency currency) {\n        this.currency = currency;\n    }\n\n    // //////////////////////////////////////\n\n    private PaymentMethod paymentMethod;\n\n    @javax.jdo.annotations.Column(allowsNull = \"false\", length = JdoColumnLength.PAYMENT_METHOD_ENUM)\n    @Disabled\n    public PaymentMethod getPaymentMethod() {\n        return paymentMethod;\n    }\n\n    public void setPaymentMethod(final PaymentMethod paymentMethod) {\n        this.paymentMethod = paymentMethod;\n    }\n\n    // //////////////////////////////////////\n\n    @javax.jdo.annotations.Persistent(mappedBy = \"invoice\")\n    private SortedSet<InvoiceItem> items = new TreeSet<InvoiceItem>();\n\n    @Disabled\n    @Render(Type.EAGERLY)\n    public SortedSet<InvoiceItem> getItems() {\n        return items;\n    }\n\n    public void setItems(final SortedSet<InvoiceItem> items) {\n        this.items = items;\n    }\n\n    // //////////////////////////////////////\n\n    @Persistent\n    private BigInteger lastItemSequence;\n\n    @javax.jdo.annotations.Column(allowsNull = \"true\")\n    @Hidden\n    public BigInteger getLastItemSequence() {\n        return lastItemSequence;\n    }\n\n    public void setLastItemSequence(final BigInteger lastItemSequence) {\n        this.lastItemSequence = lastItemSequence;\n    }\n\n    @Programmatic\n    public BigInteger nextItemSequence() {\n        BigInteger nextItemSequence = getLastItemSequence() == null\n                ? BigInteger.ONE\n                : getLastItemSequence().add(BigInteger.ONE);\n        setLastItemSequence(nextItemSequence);\n        return nextItemSequence;\n    }\n\n    // //////////////////////////////////////\n\n    @NotPersisted\n    public BigDecimal getNetAmount() {\n        BigDecimal total = BigDecimal.ZERO;\n        for (InvoiceItem item : getItems()) {\n            total = total.add(item.getNetAmount());\n        }\n        return total;\n    }\n\n    @NotPersisted\n    public BigDecimal getVatAmount() {\n        BigDecimal total = BigDecimal.ZERO;\n        for (InvoiceItem item : getItems()) {\n            total = total.add(item.getVatAmount());\n        }\n        return total;\n    }\n\n    @NotPersisted\n    public BigDecimal getGrossAmount() {\n        BigDecimal total = BigDecimal.ZERO;\n        for (InvoiceItem item : getItems()) {\n            total = total.add(item.getGrossAmount());\n        }\n        return total;\n    }\n\n    // //////////////////////////////////////\n\n    @Bulk\n    public Invoice approve() {\n        setStatus(InvoiceStatus.APPROVED);\n        return this;\n    }\n\n    public boolean hideApprove() {\n        return false;\n    }\n\n    public String disableApprove() {\n        return getStatus() != InvoiceStatus.NEW ? \"Can only approve 'new' invoices\" : null;\n    }\n\n    // //////////////////////////////////////\n\n    @Bulk\n    public Invoice collect() {\n\n        // bulk action, so need these guards\n        if (hideCollect()) {\n            return this;\n        }\n        if (disableCollect() != null) {\n            return this;\n        }\n\n        final Numerator numerator = invoices.findCollectionNumberNumerator();\n\n        setCollectionNumber(numerator.increment());\n        this.setStatus(InvoiceStatus.COLLECTED);\n\n        informUser(\"Assigned \" + this.getCollectionNumber() + \" to invoice \" + getContainer().titleOf(this));\n        return this;\n    }\n\n    public boolean hideCollect() {\n        // only applies to direct debits\n        return !getPaymentMethod().isDirectDebit();\n    }\n\n    public String disableCollect() {\n        if (getCollectionNumber() != null) {\n            return \"Collection number already assigned\";\n        }\n\n        final Numerator numerator = invoices.findCollectionNumberNumerator();\n        if (numerator == null) {\n            return \"No 'collection number' numerator found for invoice's property\";\n        }\n\n        if (getStatus() != InvoiceStatus.APPROVED) {\n            return \"Must be in status of 'approved'\";\n        }\n        return null;\n    }\n\n    // //////////////////////////////////////\n\n    @Bulk\n    public Invoice invoiceNow() {\n        return invoiceOn(getClockService().now());\n    }\n\n    public boolean hideInvoiceNow() {\n        return false; // TODO: return true if action is hidden, false if visible\n    }\n\n    public String disableInvoiceNow() {\n        if (getInvoiceNumber() != null) {\n            return \"Invoice number already assigned\";\n        }\n        final Numerator numerator = invoices.findInvoiceNumberNumerator(getProperty());\n        if (numerator == null) {\n            return \"No 'invoice number' numerator found for invoice's property\";\n        }\n        // TODO: offload valid next states to the InvoiceStatus enum? Eg\n        // getStatus.isPossible(InvoiceStatus.APPROVED)\n        //\n        if (getStatus() != InvoiceStatus.COLLECTED && getStatus() != InvoiceStatus.APPROVED) {\n            return \"Must be in status of 'collected'\";\n        }\n        return null;\n    }\n\n    @Programmatic\n    public Invoice invoiceOn(final LocalDate invoiceDate) {\n        // bulk action, so need these guards\n        if (disableInvoiceNow() != null) {\n            return this;\n        }\n        final Numerator numerator = invoices.findInvoiceNumberNumerator(getProperty());\n        setInvoiceNumber(numerator.increment());\n        setInvoiceDate(invoiceDate);\n        this.setStatus(InvoiceStatus.INVOICED);\n        informUser(\"Assigned \" + this.getCollectionNumber() + \" to invoice \" + getContainer().titleOf(this));\n        return this;\n    }\n\n    // //////////////////////////////////////\n\n    /**\n     * Derived from the {@link #getSource() invoice source}.\n     */\n    public Property getProperty() {\n        return getSource().getProperty();\n    }\n\n    // //////////////////////////////////////\n\n    @PublishedAction(InvoiceEagerlyRenderedPayloadFactory.class)\n    @Bulk\n    @ActionSemantics(Of.IDEMPOTENT)\n    public Invoice submitToCoda() {\n        collect();\n        return this;\n    }\n\n    public String disableSubmitToCoda() {\n        if (getPaymentMethod().isDirectDebit()) {\n            return getStatus() == InvoiceStatus.COLLECTED ||\n                    getStatus() == InvoiceStatus.INVOICED\n                    ? null\n                    : \"Must be collected or invoiced\";\n        } else {\n            return getStatus() == InvoiceStatus.INVOICED\n                    ? null\n                    : \"Must be invoiced\";\n        }\n    }\n\n    // //////////////////////////////////////\n\n    @Prototype\n    @Bulk\n    public void remove() {\n        for (InvoiceItem item : getItems()) {\n            item.remove();\n        }\n        getContainer().remove(this);\n    }\n\n    // //////////////////////////////////////\n\n    private Invoices invoices;\n\n    public final void injectInvoices(final Invoices invoices) {\n        this.invoices = invoices;\n    }\n}",
        "package": "package org.estatio.dom.invoice;",
        "tree_path": "Invoice",
        "name": "Invoice",
        "modifiers": "@javax.jdo.annotations.PersistenceCapable(identityType = IdentityType.DATASTORE)\n@javax.jdo.annotations.DatastoreIdentity(\n        strategy = IdGeneratorStrategy.NATIVE,\n        column = \"id\")\n@javax.jdo.annotations.Version(\n        strategy = VersionStrategy.VERSION_NUMBER,\n        column = \"version\")\n@javax.jdo.annotations.Queries({\n        @javax.jdo.annotations.Query(\n                name = \"findMatchingInvoices\", language = \"JDOQL\",\n                value = \"SELECT \"\n                        + \"FROM org.estatio.dom.invoice.Invoice \"\n                        + \"WHERE source == :source \"\n                        + \"&& seller == :seller \"\n                        + \"&& buyer == :buyer \"\n                        + \"&& paymentMethod == :paymentMethod \"\n                        + \"&& status == :status \"\n                        + \"&& dueDate == :dueDate\"),\n        @javax.jdo.annotations.Query(\n                name = \"findByPropertyAndStatus\", language = \"JDOQL\",\n                value = \"SELECT \"\n                        + \"FROM org.estatio.dom.invoice.Invoice \"\n                        + \"WHERE status == :status \"\n                        + \"&& source.occupancies.contains(o) \"\n                        + \"&& o.unit.property == :property \"\n                        + \"VARIABLES \"\n                        + \"org.estatio.dom.lease.Occupancy o; \"\n                        + \"org.estatio.dom.lease.Lease source\"),\n        @javax.jdo.annotations.Query(\n                name = \"findByPropertyAndDueDateAndStatus\", language = \"JDOQL\",\n                value = \"SELECT FROM org.estatio.dom.invoice.Invoice \" +\n                        \"WHERE status == :status && \" +\n                        \"dueDate == :dueDate && \" +\n                        \"source.occupancies.contains(o) &&\" +\n                        \"o.unit.property == :property \" +\n                        \"VARIABLES org.estatio.dom.lease.Occupancy o; org.estatio.dom.lease.Lease source\"),\n        @javax.jdo.annotations.Query(\n                name = \"findByPropertyAndDueDate\", language = \"JDOQL\",\n                value = \"SELECT FROM org.estatio.dom.invoice.Invoice \" +\n                        \"WHERE dueDate == :dueDate && \" +\n                        \"source.occupancies.contains(o) &&\" +\n                        \"o.unit.property == :property \" +\n                        \"VARIABLES org.estatio.dom.lease.Occupancy o; org.estatio.dom.lease.Lease source\"),\n        @javax.jdo.annotations.Query(\n                name = \"findByStatus\", language = \"JDOQL\",\n                value = \"SELECT \"\n                        + \"FROM org.estatio.dom.invoice.Invoice \"\n                        + \"WHERE status == :status \")\n})\n@Bookmarkable\npublic",
        "superclass": "extends EstatioMutableObject<Invoice>",
        "super_interfaces": null,
        "body": "{\n\n    public Invoice() {\n        super(\"invoiceNumber\");\n    }\n\n    // //////////////////////////////////////\n\n    public String title() {\n        return String.format(\"*%08d\", Integer.parseInt(getId()));\n    }\n\n    // //////////////////////////////////////\n\n    @Hidden(where=Where.OBJECT_FORMS)\n    public String getNumber() {\n        return ObjectUtils.firstNonNull(\n                getInvoiceNumber(),\n                getCollectionNumber(),\n                title());\n    }\n\n    // //////////////////////////////////////\n\n    private Party buyer;\n\n    @javax.jdo.annotations.Column(name = \"buyerPartyId\", allowsNull = \"false\")\n    @Disabled\n    public Party getBuyer() {\n        return buyer;\n\n    }\n\n    public void setBuyer(final Party buyer) {\n        this.buyer = buyer;\n    }\n\n    // //////////////////////////////////////\n\n    private Party seller;\n\n    @javax.jdo.annotations.Column(name = \"sellerPartyId\", allowsNull = \"false\")\n    @Disabled\n    public Party getSeller() {\n        return seller;\n    }\n\n    public void setSeller(final Party seller) {\n        this.seller = seller;\n    }\n\n    // //////////////////////////////////////\n\n    private String collectionNumber;\n\n    @javax.jdo.annotations.Column(allowsNull = \"true\", length = JdoColumnLength.Invoice.NUMBER)\n    @Disabled\n    @Hidden(where=Where.PARENTED_TABLES)\n    public String getCollectionNumber() {\n        return collectionNumber;\n    }\n\n    public void setCollectionNumber(final String collectionNumber) {\n        this.collectionNumber = collectionNumber;\n    }\n\n    // //////////////////////////////////////\n\n    private String invoiceNumber;\n\n    @javax.jdo.annotations.Column(allowsNull = \"true\", length = JdoColumnLength.Invoice.NUMBER)\n    @Disabled\n    @Hidden(where=Where.PARENTED_TABLES)\n    public String getInvoiceNumber() {\n        return invoiceNumber;\n    }\n\n    public void setInvoiceNumber(final String invoiceNumber) {\n        this.invoiceNumber = invoiceNumber;\n    }\n\n    // //////////////////////////////////////\n\n    private InvoiceSource source;\n\n    /**\n     * Polymorphic association to (any implementation of) {@link InvoiceSource}.\n     */\n    @javax.jdo.annotations.Persistent(\n            extensions = {\n                    @Extension(vendorName = \"datanucleus\",\n                            key = \"mapping-strategy\",\n                            value = \"per-implementation\"),\n                    @Extension(vendorName = \"datanucleus\",\n                            key = \"implementation-classes\",\n                            value = \"org.estatio.dom.lease.Lease\") })\n    @javax.jdo.annotations.Columns({\n            @javax.jdo.annotations.Column(name = \"sourceLeaseId\", allowsNull = \"true\")\n    })\n    @Optional\n    // not really, but to be compatible with JDO\n    @Disabled\n    public InvoiceSource getSource() {\n        return source;\n    }\n\n    public void setSource(final InvoiceSource source) {\n        this.source = source;\n    }\n\n    // //////////////////////////////////////\n\n    @javax.jdo.annotations.Persistent\n    private LocalDate invoiceDate;\n\n    @javax.jdo.annotations.Column(allowsNull = \"true\")\n    @Disabled\n    public LocalDate getInvoiceDate() {\n        return invoiceDate;\n    }\n\n    public void setInvoiceDate(final LocalDate invoiceDate) {\n        this.invoiceDate = invoiceDate;\n    }\n\n    // //////////////////////////////////////\n\n    @javax.jdo.annotations.Persistent\n    private LocalDate dueDate;\n\n    @javax.jdo.annotations.Column(allowsNull = \"false\")\n    @Disabled\n    public LocalDate getDueDate() {\n        return dueDate;\n    }\n\n    public void setDueDate(final LocalDate dueDate) {\n        this.dueDate = dueDate;\n    }\n\n    // //////////////////////////////////////\n\n    private InvoiceStatus status;\n\n    @javax.jdo.annotations.Column(allowsNull = \"false\", length = JdoColumnLength.STATUS_ENUM)\n    @Disabled\n    public InvoiceStatus getStatus() {\n        return status;\n    }\n\n    public void setStatus(final InvoiceStatus status) {\n        this.status = status;\n    }\n\n    // //////////////////////////////////////\n\n    private Currency currency;\n\n    // REVIEW: invoice generation is not populating this field.\n    @javax.jdo.annotations.Column(name = \"currencyId\", allowsNull = \"true\")\n    @Hidden(where = Where.ALL_TABLES)\n    @Disabled\n    public Currency getCurrency() {\n        return currency;\n    }\n\n    public void setCurrency(final Currency currency) {\n        this.currency = currency;\n    }\n\n    // //////////////////////////////////////\n\n    private PaymentMethod paymentMethod;\n\n    @javax.jdo.annotations.Column(allowsNull = \"false\", length = JdoColumnLength.PAYMENT_METHOD_ENUM)\n    @Disabled\n    public PaymentMethod getPaymentMethod() {\n        return paymentMethod;\n    }\n\n    public void setPaymentMethod(final PaymentMethod paymentMethod) {\n        this.paymentMethod = paymentMethod;\n    }\n\n    // //////////////////////////////////////\n\n    @javax.jdo.annotations.Persistent(mappedBy = \"invoice\")\n    private SortedSet<InvoiceItem> items = new TreeSet<InvoiceItem>();\n\n    @Disabled\n    @Render(Type.EAGERLY)\n    public SortedSet<InvoiceItem> getItems() {\n        return items;\n    }\n\n    public void setItems(final SortedSet<InvoiceItem> items) {\n        this.items = items;\n    }\n\n    // //////////////////////////////////////\n\n    @Persistent\n    private BigInteger lastItemSequence;\n\n    @javax.jdo.annotations.Column(allowsNull = \"true\")\n    @Hidden\n    public BigInteger getLastItemSequence() {\n        return lastItemSequence;\n    }\n\n    public void setLastItemSequence(final BigInteger lastItemSequence) {\n        this.lastItemSequence = lastItemSequence;\n    }\n\n    @Programmatic\n    public BigInteger nextItemSequence() {\n        BigInteger nextItemSequence = getLastItemSequence() == null\n                ? BigInteger.ONE\n                : getLastItemSequence().add(BigInteger.ONE);\n        setLastItemSequence(nextItemSequence);\n        return nextItemSequence;\n    }\n\n    // //////////////////////////////////////\n\n    @NotPersisted\n    public BigDecimal getNetAmount() {\n        BigDecimal total = BigDecimal.ZERO;\n        for (InvoiceItem item : getItems()) {\n            total = total.add(item.getNetAmount());\n        }\n        return total;\n    }\n\n    @NotPersisted\n    public BigDecimal getVatAmount() {\n        BigDecimal total = BigDecimal.ZERO;\n        for (InvoiceItem item : getItems()) {\n            total = total.add(item.getVatAmount());\n        }\n        return total;\n    }\n\n    @NotPersisted\n    public BigDecimal getGrossAmount() {\n        BigDecimal total = BigDecimal.ZERO;\n        for (InvoiceItem item : getItems()) {\n            total = total.add(item.getGrossAmount());\n        }\n        return total;\n    }\n\n    // //////////////////////////////////////\n\n    @Bulk\n    public Invoice approve() {\n        setStatus(InvoiceStatus.APPROVED);\n        return this;\n    }\n\n    public boolean hideApprove() {\n        return false;\n    }\n\n    public String disableApprove() {\n        return getStatus() != InvoiceStatus.NEW ? \"Can only approve 'new' invoices\" : null;\n    }\n\n    // //////////////////////////////////////\n\n    @Bulk\n    public Invoice collect() {\n\n        // bulk action, so need these guards\n        if (hideCollect()) {\n            return this;\n        }\n        if (disableCollect() != null) {\n            return this;\n        }\n\n        final Numerator numerator = invoices.findCollectionNumberNumerator();\n\n        setCollectionNumber(numerator.increment());\n        this.setStatus(InvoiceStatus.COLLECTED);\n\n        informUser(\"Assigned \" + this.getCollectionNumber() + \" to invoice \" + getContainer().titleOf(this));\n        return this;\n    }\n\n    public boolean hideCollect() {\n        // only applies to direct debits\n        return !getPaymentMethod().isDirectDebit();\n    }\n\n    public String disableCollect() {\n        if (getCollectionNumber() != null) {\n            return \"Collection number already assigned\";\n        }\n\n        final Numerator numerator = invoices.findCollectionNumberNumerator();\n        if (numerator == null) {\n            return \"No 'collection number' numerator found for invoice's property\";\n        }\n\n        if (getStatus() != InvoiceStatus.APPROVED) {\n            return \"Must be in status of 'approved'\";\n        }\n        return null;\n    }\n\n    // //////////////////////////////////////\n\n    @Bulk\n    public Invoice invoiceNow() {\n        return invoiceOn(getClockService().now());\n    }\n\n    public boolean hideInvoiceNow() {\n        return false; // TODO: return true if action is hidden, false if visible\n    }\n\n    public String disableInvoiceNow() {\n        if (getInvoiceNumber() != null) {\n            return \"Invoice number already assigned\";\n        }\n        final Numerator numerator = invoices.findInvoiceNumberNumerator(getProperty());\n        if (numerator == null) {\n            return \"No 'invoice number' numerator found for invoice's property\";\n        }\n        // TODO: offload valid next states to the InvoiceStatus enum? Eg\n        // getStatus.isPossible(InvoiceStatus.APPROVED)\n        //\n        if (getStatus() != InvoiceStatus.COLLECTED && getStatus() != InvoiceStatus.APPROVED) {\n            return \"Must be in status of 'collected'\";\n        }\n        return null;\n    }\n\n    @Programmatic\n    public Invoice invoiceOn(final LocalDate invoiceDate) {\n        // bulk action, so need these guards\n        if (disableInvoiceNow() != null) {\n            return this;\n        }\n        final Numerator numerator = invoices.findInvoiceNumberNumerator(getProperty());\n        setInvoiceNumber(numerator.increment());\n        setInvoiceDate(invoiceDate);\n        this.setStatus(InvoiceStatus.INVOICED);\n        informUser(\"Assigned \" + this.getCollectionNumber() + \" to invoice \" + getContainer().titleOf(this));\n        return this;\n    }\n\n    // //////////////////////////////////////\n\n    /**\n     * Derived from the {@link #getSource() invoice source}.\n     */\n    public Property getProperty() {\n        return getSource().getProperty();\n    }\n\n    // //////////////////////////////////////\n\n    @PublishedAction(InvoiceEagerlyRenderedPayloadFactory.class)\n    @Bulk\n    @ActionSemantics(Of.IDEMPOTENT)\n    public Invoice submitToCoda() {\n        collect();\n        return this;\n    }\n\n    public String disableSubmitToCoda() {\n        if (getPaymentMethod().isDirectDebit()) {\n            return getStatus() == InvoiceStatus.COLLECTED ||\n                    getStatus() == InvoiceStatus.INVOICED\n                    ? null\n                    : \"Must be collected or invoiced\";\n        } else {\n            return getStatus() == InvoiceStatus.INVOICED\n                    ? null\n                    : \"Must be invoiced\";\n        }\n    }\n\n    // //////////////////////////////////////\n\n    @Prototype\n    @Bulk\n    public void remove() {\n        for (InvoiceItem item : getItems()) {\n            item.remove();\n        }\n        getContainer().remove(this);\n    }\n\n    // //////////////////////////////////////\n\n    private Invoices invoices;\n\n    public final void injectInvoices(final Invoices invoices) {\n        this.invoices = invoices;\n    }\n}",
        "start_point": {
            "row": 57,
            "column": 0
        },
        "end_point": {
            "row": 510,
            "column": 1
        },
        "file_mode": "Modified",
        "map_path": null,
        "methods": [
            {
                "definition": "public Invoice() {\n    super(\"invoiceNumber\");\n}",
                "name": "Invoice",
                "modifiers": "public",
                "parameters": [],
                "body": "{\n    super(\"invoiceNumber\");\n}",
                "constructor": true,
                "start_point": {
                    "row": 109,
                    "column": 4
                },
                "end_point": {
                    "row": 111,
                    "column": 5
                }
            },
            {
                "definition": "public String title() {\n    return String.format(\"*%08d\", Integer.parseInt(getId()));\n}",
                "name": "title",
                "modifiers": "public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    return String.format(\"*%08d\", Integer.parseInt(getId()));\n}",
                "start_point": {
                    "row": 115,
                    "column": 4
                },
                "end_point": {
                    "row": 117,
                    "column": 5
                }
            },
            {
                "definition": "@Hidden(where=Where.OBJECT_FORMS)\npublic String getNumber() {\n    return ObjectUtils.firstNonNull(\n            getInvoiceNumber(),\n            getCollectionNumber(),\n            title());\n}",
                "name": "getNumber",
                "modifiers": "@Hidden(where=Where.OBJECT_FORMS)\n    public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    return ObjectUtils.firstNonNull(\n            getInvoiceNumber(),\n            getCollectionNumber(),\n            title());\n}",
                "start_point": {
                    "row": 121,
                    "column": 4
                },
                "end_point": {
                    "row": 127,
                    "column": 5
                }
            },
            {
                "definition": "@javax.jdo.annotations.Column(name = \"buyerPartyId\", allowsNull = \"false\")\n@Disabled\npublic Party getBuyer() {\n    return buyer;\n\n}",
                "name": "getBuyer",
                "modifiers": "@javax.jdo.annotations.Column(name = \"buyerPartyId\", allowsNull = \"false\")\n    @Disabled\n    public",
                "return_type": "Party",
                "parameters": [],
                "body": "{\n    return buyer;\n\n}",
                "start_point": {
                    "row": 133,
                    "column": 4
                },
                "end_point": {
                    "row": 138,
                    "column": 5
                }
            },
            {
                "definition": "public void setBuyer(final Party buyer) {\n    this.buyer = buyer;\n}",
                "name": "setBuyer",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "final",
                        "name": "Party"
                    }
                ],
                "body": "{\n    this.buyer = buyer;\n}",
                "start_point": {
                    "row": 140,
                    "column": 4
                },
                "end_point": {
                    "row": 142,
                    "column": 5
                }
            },
            {
                "definition": "@javax.jdo.annotations.Column(name = \"sellerPartyId\", allowsNull = \"false\")\n@Disabled\npublic Party getSeller() {\n    return seller;\n}",
                "name": "getSeller",
                "modifiers": "@javax.jdo.annotations.Column(name = \"sellerPartyId\", allowsNull = \"false\")\n    @Disabled\n    public",
                "return_type": "Party",
                "parameters": [],
                "body": "{\n    return seller;\n}",
                "start_point": {
                    "row": 148,
                    "column": 4
                },
                "end_point": {
                    "row": 152,
                    "column": 5
                }
            },
            {
                "definition": "public void setSeller(final Party seller) {\n    this.seller = seller;\n}",
                "name": "setSeller",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "final",
                        "name": "Party"
                    }
                ],
                "body": "{\n    this.seller = seller;\n}",
                "start_point": {
                    "row": 154,
                    "column": 4
                },
                "end_point": {
                    "row": 156,
                    "column": 5
                }
            },
            {
                "definition": "@javax.jdo.annotations.Column(allowsNull = \"true\", length = JdoColumnLength.Invoice.NUMBER)\n@Disabled\n@Hidden(where=Where.PARENTED_TABLES)\npublic String getCollectionNumber() {\n    return collectionNumber;\n}",
                "name": "getCollectionNumber",
                "modifiers": "@javax.jdo.annotations.Column(allowsNull = \"true\", length = JdoColumnLength.Invoice.NUMBER)\n    @Disabled\n    @Hidden(where=Where.PARENTED_TABLES)\n    public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    return collectionNumber;\n}",
                "start_point": {
                    "row": 162,
                    "column": 4
                },
                "end_point": {
                    "row": 167,
                    "column": 5
                }
            },
            {
                "definition": "public void setCollectionNumber(final String collectionNumber) {\n    this.collectionNumber = collectionNumber;\n}",
                "name": "setCollectionNumber",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "final",
                        "name": "String"
                    }
                ],
                "body": "{\n    this.collectionNumber = collectionNumber;\n}",
                "start_point": {
                    "row": 169,
                    "column": 4
                },
                "end_point": {
                    "row": 171,
                    "column": 5
                }
            },
            {
                "definition": "@javax.jdo.annotations.Column(allowsNull = \"true\", length = JdoColumnLength.Invoice.NUMBER)\n@Disabled\n@Hidden(where=Where.PARENTED_TABLES)\npublic String getInvoiceNumber() {\n    return invoiceNumber;\n}",
                "name": "getInvoiceNumber",
                "modifiers": "@javax.jdo.annotations.Column(allowsNull = \"true\", length = JdoColumnLength.Invoice.NUMBER)\n    @Disabled\n    @Hidden(where=Where.PARENTED_TABLES)\n    public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    return invoiceNumber;\n}",
                "start_point": {
                    "row": 177,
                    "column": 4
                },
                "end_point": {
                    "row": 182,
                    "column": 5
                }
            },
            {
                "definition": "public void setInvoiceNumber(final String invoiceNumber) {\n    this.invoiceNumber = invoiceNumber;\n}",
                "name": "setInvoiceNumber",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "final",
                        "name": "String"
                    }
                ],
                "body": "{\n    this.invoiceNumber = invoiceNumber;\n}",
                "start_point": {
                    "row": 184,
                    "column": 4
                },
                "end_point": {
                    "row": 186,
                    "column": 5
                }
            },
            {
                "definition": "@javax.jdo.annotations.Persistent(\n        extensions = {\n                @Extension(vendorName = \"datanucleus\",\n                        key = \"mapping-strategy\",\n                        value = \"per-implementation\"),\n                @Extension(vendorName = \"datanucleus\",\n                        key = \"implementation-classes\",\n                        value = \"org.estatio.dom.lease.Lease\") })\n@javax.jdo.annotations.Columns({\n        @javax.jdo.annotations.Column(name = \"sourceLeaseId\", allowsNull = \"true\")\n})\n@Optional\n// not really, but to be compatible with JDO\n@Disabled\npublic InvoiceSource getSource() {\n    return source;\n}",
                "name": "getSource",
                "modifiers": "@javax.jdo.annotations.Persistent(\n            extensions = {\n                    @Extension(vendorName = \"datanucleus\",\n                            key = \"mapping-strategy\",\n                            value = \"per-implementation\"),\n                    @Extension(vendorName = \"datanucleus\",\n                            key = \"implementation-classes\",\n                            value = \"org.estatio.dom.lease.Lease\") })\n    @javax.jdo.annotations.Columns({\n            @javax.jdo.annotations.Column(name = \"sourceLeaseId\", allowsNull = \"true\")\n    })\n    @Optional\n    // not really, but to be compatible with JDO\n    @Disabled\n    public",
                "return_type": "InvoiceSource",
                "parameters": [],
                "body": "{\n    return source;\n}",
                "start_point": {
                    "row": 195,
                    "column": 4
                },
                "end_point": {
                    "row": 211,
                    "column": 5
                }
            },
            {
                "definition": "public void setSource(final InvoiceSource source) {\n    this.source = source;\n}",
                "name": "setSource",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "final",
                        "name": "InvoiceSource"
                    }
                ],
                "body": "{\n    this.source = source;\n}",
                "start_point": {
                    "row": 213,
                    "column": 4
                },
                "end_point": {
                    "row": 215,
                    "column": 5
                }
            },
            {
                "definition": "@javax.jdo.annotations.Column(allowsNull = \"true\")\n@Disabled\npublic LocalDate getInvoiceDate() {\n    return invoiceDate;\n}",
                "name": "getInvoiceDate",
                "modifiers": "@javax.jdo.annotations.Column(allowsNull = \"true\")\n    @Disabled\n    public",
                "return_type": "LocalDate",
                "parameters": [],
                "body": "{\n    return invoiceDate;\n}",
                "start_point": {
                    "row": 222,
                    "column": 4
                },
                "end_point": {
                    "row": 226,
                    "column": 5
                }
            },
            {
                "definition": "public void setInvoiceDate(final LocalDate invoiceDate) {\n    this.invoiceDate = invoiceDate;\n}",
                "name": "setInvoiceDate",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "final",
                        "name": "LocalDate"
                    }
                ],
                "body": "{\n    this.invoiceDate = invoiceDate;\n}",
                "start_point": {
                    "row": 228,
                    "column": 4
                },
                "end_point": {
                    "row": 230,
                    "column": 5
                }
            },
            {
                "definition": "@javax.jdo.annotations.Column(allowsNull = \"false\")\n@Disabled\npublic LocalDate getDueDate() {\n    return dueDate;\n}",
                "name": "getDueDate",
                "modifiers": "@javax.jdo.annotations.Column(allowsNull = \"false\")\n    @Disabled\n    public",
                "return_type": "LocalDate",
                "parameters": [],
                "body": "{\n    return dueDate;\n}",
                "start_point": {
                    "row": 237,
                    "column": 4
                },
                "end_point": {
                    "row": 241,
                    "column": 5
                }
            },
            {
                "definition": "public void setDueDate(final LocalDate dueDate) {\n    this.dueDate = dueDate;\n}",
                "name": "setDueDate",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "final",
                        "name": "LocalDate"
                    }
                ],
                "body": "{\n    this.dueDate = dueDate;\n}",
                "start_point": {
                    "row": 243,
                    "column": 4
                },
                "end_point": {
                    "row": 245,
                    "column": 5
                }
            },
            {
                "definition": "@javax.jdo.annotations.Column(allowsNull = \"false\", length = JdoColumnLength.STATUS_ENUM)\n@Disabled\npublic InvoiceStatus getStatus() {\n    return status;\n}",
                "name": "getStatus",
                "modifiers": "@javax.jdo.annotations.Column(allowsNull = \"false\", length = JdoColumnLength.STATUS_ENUM)\n    @Disabled\n    public",
                "return_type": "InvoiceStatus",
                "parameters": [],
                "body": "{\n    return status;\n}",
                "start_point": {
                    "row": 251,
                    "column": 4
                },
                "end_point": {
                    "row": 255,
                    "column": 5
                }
            },
            {
                "definition": "public void setStatus(final InvoiceStatus status) {\n    this.status = status;\n}",
                "name": "setStatus",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "final",
                        "name": "InvoiceStatus"
                    }
                ],
                "body": "{\n    this.status = status;\n}",
                "start_point": {
                    "row": 257,
                    "column": 4
                },
                "end_point": {
                    "row": 259,
                    "column": 5
                }
            },
            {
                "definition": "@javax.jdo.annotations.Column(name = \"currencyId\", allowsNull = \"true\")\n@Hidden(where = Where.ALL_TABLES)\n@Disabled\npublic Currency getCurrency() {\n    return currency;\n}",
                "name": "getCurrency",
                "modifiers": "@javax.jdo.annotations.Column(name = \"currencyId\", allowsNull = \"true\")\n    @Hidden(where = Where.ALL_TABLES)\n    @Disabled\n    public",
                "return_type": "Currency",
                "parameters": [],
                "body": "{\n    return currency;\n}",
                "start_point": {
                    "row": 266,
                    "column": 4
                },
                "end_point": {
                    "row": 271,
                    "column": 5
                }
            },
            {
                "definition": "public void setCurrency(final Currency currency) {\n    this.currency = currency;\n}",
                "name": "setCurrency",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "final",
                        "name": "Currency"
                    }
                ],
                "body": "{\n    this.currency = currency;\n}",
                "start_point": {
                    "row": 273,
                    "column": 4
                },
                "end_point": {
                    "row": 275,
                    "column": 5
                }
            },
            {
                "definition": "@javax.jdo.annotations.Column(allowsNull = \"false\", length = JdoColumnLength.PAYMENT_METHOD_ENUM)\n@Disabled\npublic PaymentMethod getPaymentMethod() {\n    return paymentMethod;\n}",
                "name": "getPaymentMethod",
                "modifiers": "@javax.jdo.annotations.Column(allowsNull = \"false\", length = JdoColumnLength.PAYMENT_METHOD_ENUM)\n    @Disabled\n    public",
                "return_type": "PaymentMethod",
                "parameters": [],
                "body": "{\n    return paymentMethod;\n}",
                "start_point": {
                    "row": 281,
                    "column": 4
                },
                "end_point": {
                    "row": 285,
                    "column": 5
                }
            },
            {
                "definition": "public void setPaymentMethod(final PaymentMethod paymentMethod) {\n    this.paymentMethod = paymentMethod;\n}",
                "name": "setPaymentMethod",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "final",
                        "name": "PaymentMethod"
                    }
                ],
                "body": "{\n    this.paymentMethod = paymentMethod;\n}",
                "start_point": {
                    "row": 287,
                    "column": 4
                },
                "end_point": {
                    "row": 289,
                    "column": 5
                }
            },
            {
                "definition": "@Disabled\n@Render(Type.EAGERLY)\npublic SortedSet<InvoiceItem> getItems() {\n    return items;\n}",
                "name": "getItems",
                "modifiers": "@Disabled\n    @Render(Type.EAGERLY)\n    public",
                "return_type": null,
                "parameters": [],
                "body": "{\n    return items;\n}",
                "start_point": {
                    "row": 296,
                    "column": 4
                },
                "end_point": {
                    "row": 300,
                    "column": 5
                }
            },
            {
                "definition": "public void setItems(final SortedSet<InvoiceItem> items) {\n    this.items = items;\n}",
                "name": "setItems",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "final",
                        "name": "SortedSet<InvoiceItem>"
                    }
                ],
                "body": "{\n    this.items = items;\n}",
                "start_point": {
                    "row": 302,
                    "column": 4
                },
                "end_point": {
                    "row": 304,
                    "column": 5
                }
            },
            {
                "definition": "@javax.jdo.annotations.Column(allowsNull = \"true\")\n@Hidden\npublic BigInteger getLastItemSequence() {\n    return lastItemSequence;\n}",
                "name": "getLastItemSequence",
                "modifiers": "@javax.jdo.annotations.Column(allowsNull = \"true\")\n    @Hidden\n    public",
                "return_type": "BigInteger",
                "parameters": [],
                "body": "{\n    return lastItemSequence;\n}",
                "start_point": {
                    "row": 311,
                    "column": 4
                },
                "end_point": {
                    "row": 315,
                    "column": 5
                }
            },
            {
                "definition": "public void setLastItemSequence(final BigInteger lastItemSequence) {\n    this.lastItemSequence = lastItemSequence;\n}",
                "name": "setLastItemSequence",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "final",
                        "name": "BigInteger"
                    }
                ],
                "body": "{\n    this.lastItemSequence = lastItemSequence;\n}",
                "start_point": {
                    "row": 317,
                    "column": 4
                },
                "end_point": {
                    "row": 319,
                    "column": 5
                }
            },
            {
                "definition": "@Programmatic\npublic BigInteger nextItemSequence() {\n    BigInteger nextItemSequence = getLastItemSequence() == null\n            ? BigInteger.ONE\n            : getLastItemSequence().add(BigInteger.ONE);\n    setLastItemSequence(nextItemSequence);\n    return nextItemSequence;\n}",
                "name": "nextItemSequence",
                "modifiers": "@Programmatic\n    public",
                "return_type": "BigInteger",
                "parameters": [],
                "body": "{\n    BigInteger nextItemSequence = getLastItemSequence() == null\n            ? BigInteger.ONE\n            : getLastItemSequence().add(BigInteger.ONE);\n    setLastItemSequence(nextItemSequence);\n    return nextItemSequence;\n}",
                "start_point": {
                    "row": 321,
                    "column": 4
                },
                "end_point": {
                    "row": 328,
                    "column": 5
                }
            },
            {
                "definition": "@NotPersisted\npublic BigDecimal getNetAmount() {\n    BigDecimal total = BigDecimal.ZERO;\n    for (InvoiceItem item : getItems()) {\n        total = total.add(item.getNetAmount());\n    }\n    return total;\n}",
                "name": "getNetAmount",
                "modifiers": "@NotPersisted\n    public",
                "return_type": "BigDecimal",
                "parameters": [],
                "body": "{\n    BigDecimal total = BigDecimal.ZERO;\n    for (InvoiceItem item : getItems()) {\n        total = total.add(item.getNetAmount());\n    }\n    return total;\n}",
                "start_point": {
                    "row": 332,
                    "column": 4
                },
                "end_point": {
                    "row": 339,
                    "column": 5
                }
            },
            {
                "definition": "@NotPersisted\npublic BigDecimal getVatAmount() {\n    BigDecimal total = BigDecimal.ZERO;\n    for (InvoiceItem item : getItems()) {\n        total = total.add(item.getVatAmount());\n    }\n    return total;\n}",
                "name": "getVatAmount",
                "modifiers": "@NotPersisted\n    public",
                "return_type": "BigDecimal",
                "parameters": [],
                "body": "{\n    BigDecimal total = BigDecimal.ZERO;\n    for (InvoiceItem item : getItems()) {\n        total = total.add(item.getVatAmount());\n    }\n    return total;\n}",
                "start_point": {
                    "row": 341,
                    "column": 4
                },
                "end_point": {
                    "row": 348,
                    "column": 5
                }
            },
            {
                "definition": "@NotPersisted\npublic BigDecimal getGrossAmount() {\n    BigDecimal total = BigDecimal.ZERO;\n    for (InvoiceItem item : getItems()) {\n        total = total.add(item.getGrossAmount());\n    }\n    return total;\n}",
                "name": "getGrossAmount",
                "modifiers": "@NotPersisted\n    public",
                "return_type": "BigDecimal",
                "parameters": [],
                "body": "{\n    BigDecimal total = BigDecimal.ZERO;\n    for (InvoiceItem item : getItems()) {\n        total = total.add(item.getGrossAmount());\n    }\n    return total;\n}",
                "start_point": {
                    "row": 350,
                    "column": 4
                },
                "end_point": {
                    "row": 357,
                    "column": 5
                }
            },
            {
                "definition": "@Bulk\npublic Invoice approve() {\n    setStatus(InvoiceStatus.APPROVED);\n    return this;\n}",
                "name": "approve",
                "modifiers": "@Bulk\n    public",
                "return_type": "Invoice",
                "parameters": [],
                "body": "{\n    setStatus(InvoiceStatus.APPROVED);\n    return this;\n}",
                "start_point": {
                    "row": 361,
                    "column": 4
                },
                "end_point": {
                    "row": 365,
                    "column": 5
                }
            },
            {
                "definition": "public boolean hideApprove() {\n    return false;\n}",
                "name": "hideApprove",
                "modifiers": "public",
                "return_type": null,
                "parameters": [],
                "body": "{\n    return false;\n}",
                "start_point": {
                    "row": 367,
                    "column": 4
                },
                "end_point": {
                    "row": 369,
                    "column": 5
                }
            },
            {
                "definition": "public String disableApprove() {\n    return getStatus() != InvoiceStatus.NEW ? \"Can only approve 'new' invoices\" : null;\n}",
                "name": "disableApprove",
                "modifiers": "public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    return getStatus() != InvoiceStatus.NEW ? \"Can only approve 'new' invoices\" : null;\n}",
                "start_point": {
                    "row": 371,
                    "column": 4
                },
                "end_point": {
                    "row": 373,
                    "column": 5
                }
            },
            {
                "definition": "@Bulk\npublic Invoice collect() {\n\n    // bulk action, so need these guards\n    if (hideCollect()) {\n        return this;\n    }\n    if (disableCollect() != null) {\n        return this;\n    }\n\n    final Numerator numerator = invoices.findCollectionNumberNumerator();\n\n    setCollectionNumber(numerator.increment());\n    this.setStatus(InvoiceStatus.COLLECTED);\n\n    informUser(\"Assigned \" + this.getCollectionNumber() + \" to invoice \" + getContainer().titleOf(this));\n    return this;\n}",
                "name": "collect",
                "modifiers": "@Bulk\n    public",
                "return_type": "Invoice",
                "parameters": [],
                "body": "{\n\n    // bulk action, so need these guards\n    if (hideCollect()) {\n        return this;\n    }\n    if (disableCollect() != null) {\n        return this;\n    }\n\n    final Numerator numerator = invoices.findCollectionNumberNumerator();\n\n    setCollectionNumber(numerator.increment());\n    this.setStatus(InvoiceStatus.COLLECTED);\n\n    informUser(\"Assigned \" + this.getCollectionNumber() + \" to invoice \" + getContainer().titleOf(this));\n    return this;\n}",
                "start_point": {
                    "row": 377,
                    "column": 4
                },
                "end_point": {
                    "row": 395,
                    "column": 5
                }
            },
            {
                "definition": "public boolean hideCollect() {\n    // only applies to direct debits\n    return !getPaymentMethod().isDirectDebit();\n}",
                "name": "hideCollect",
                "modifiers": "public",
                "return_type": null,
                "parameters": [],
                "body": "{\n    // only applies to direct debits\n    return !getPaymentMethod().isDirectDebit();\n}",
                "start_point": {
                    "row": 397,
                    "column": 4
                },
                "end_point": {
                    "row": 400,
                    "column": 5
                }
            },
            {
                "definition": "public String disableCollect() {\n    if (getCollectionNumber() != null) {\n        return \"Collection number already assigned\";\n    }\n\n    final Numerator numerator = invoices.findCollectionNumberNumerator();\n    if (numerator == null) {\n        return \"No 'collection number' numerator found for invoice's property\";\n    }\n\n    if (getStatus() != InvoiceStatus.APPROVED) {\n        return \"Must be in status of 'approved'\";\n    }\n    return null;\n}",
                "name": "disableCollect",
                "modifiers": "public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    if (getCollectionNumber() != null) {\n        return \"Collection number already assigned\";\n    }\n\n    final Numerator numerator = invoices.findCollectionNumberNumerator();\n    if (numerator == null) {\n        return \"No 'collection number' numerator found for invoice's property\";\n    }\n\n    if (getStatus() != InvoiceStatus.APPROVED) {\n        return \"Must be in status of 'approved'\";\n    }\n    return null;\n}",
                "start_point": {
                    "row": 402,
                    "column": 4
                },
                "end_point": {
                    "row": 416,
                    "column": 5
                }
            },
            {
                "definition": "@Bulk\npublic Invoice invoiceNow() {\n    return invoiceOn(getClockService().now());\n}",
                "name": "invoiceNow",
                "modifiers": "@Bulk\n    public",
                "return_type": "Invoice",
                "parameters": [],
                "body": "{\n    return invoiceOn(getClockService().now());\n}",
                "start_point": {
                    "row": 420,
                    "column": 4
                },
                "end_point": {
                    "row": 423,
                    "column": 5
                }
            },
            {
                "definition": "public boolean hideInvoiceNow() {\n    return false; // TODO: return true if action is hidden, false if visible\n}",
                "name": "hideInvoiceNow",
                "modifiers": "public",
                "return_type": null,
                "parameters": [],
                "body": "{\n    return false; // TODO: return true if action is hidden, false if visible\n}",
                "start_point": {
                    "row": 425,
                    "column": 4
                },
                "end_point": {
                    "row": 427,
                    "column": 5
                }
            },
            {
                "definition": "public String disableInvoiceNow() {\n    if (getInvoiceNumber() != null) {\n        return \"Invoice number already assigned\";\n    }\n    final Numerator numerator = invoices.findInvoiceNumberNumerator(getProperty());\n    if (numerator == null) {\n        return \"No 'invoice number' numerator found for invoice's property\";\n    }\n    // TODO: offload valid next states to the InvoiceStatus enum? Eg\n    // getStatus.isPossible(InvoiceStatus.APPROVED)\n    //\n    if (getStatus() != InvoiceStatus.COLLECTED && getStatus() != InvoiceStatus.APPROVED) {\n        return \"Must be in status of 'collected'\";\n    }\n    return null;\n}",
                "name": "disableInvoiceNow",
                "modifiers": "public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    if (getInvoiceNumber() != null) {\n        return \"Invoice number already assigned\";\n    }\n    final Numerator numerator = invoices.findInvoiceNumberNumerator(getProperty());\n    if (numerator == null) {\n        return \"No 'invoice number' numerator found for invoice's property\";\n    }\n    // TODO: offload valid next states to the InvoiceStatus enum? Eg\n    // getStatus.isPossible(InvoiceStatus.APPROVED)\n    //\n    if (getStatus() != InvoiceStatus.COLLECTED && getStatus() != InvoiceStatus.APPROVED) {\n        return \"Must be in status of 'collected'\";\n    }\n    return null;\n}",
                "start_point": {
                    "row": 429,
                    "column": 4
                },
                "end_point": {
                    "row": 444,
                    "column": 5
                }
            },
            {
                "definition": "@Programmatic\npublic Invoice invoiceOn(final LocalDate invoiceDate) {\n    // bulk action, so need these guards\n    if (disableInvoiceNow() != null) {\n        return this;\n    }\n    final Numerator numerator = invoices.findInvoiceNumberNumerator(getProperty());\n    setInvoiceNumber(numerator.increment());\n    setInvoiceDate(invoiceDate);\n    this.setStatus(InvoiceStatus.INVOICED);\n    informUser(\"Assigned \" + this.getCollectionNumber() + \" to invoice \" + getContainer().titleOf(this));\n    return this;\n}",
                "name": "invoiceOn",
                "modifiers": "@Programmatic\n    public",
                "return_type": "Invoice",
                "parameters": [
                    {
                        "type": "final",
                        "name": "LocalDate"
                    }
                ],
                "body": "{\n    // bulk action, so need these guards\n    if (disableInvoiceNow() != null) {\n        return this;\n    }\n    final Numerator numerator = invoices.findInvoiceNumberNumerator(getProperty());\n    setInvoiceNumber(numerator.increment());\n    setInvoiceDate(invoiceDate);\n    this.setStatus(InvoiceStatus.INVOICED);\n    informUser(\"Assigned \" + this.getCollectionNumber() + \" to invoice \" + getContainer().titleOf(this));\n    return this;\n}",
                "start_point": {
                    "row": 446,
                    "column": 4
                },
                "end_point": {
                    "row": 458,
                    "column": 5
                }
            },
            {
                "definition": "public Property getProperty() {\n    return getSource().getProperty();\n}",
                "name": "getProperty",
                "modifiers": "public",
                "return_type": "Property",
                "parameters": [],
                "body": "{\n    return getSource().getProperty();\n}",
                "start_point": {
                    "row": 465,
                    "column": 4
                },
                "end_point": {
                    "row": 467,
                    "column": 5
                }
            },
            {
                "definition": "@PublishedAction(InvoiceEagerlyRenderedPayloadFactory.class)\n@Bulk\n@ActionSemantics(Of.IDEMPOTENT)\npublic Invoice submitToCoda() {\n    collect();\n    return this;\n}",
                "name": "submitToCoda",
                "modifiers": "@PublishedAction(InvoiceEagerlyRenderedPayloadFactory.class)\n    @Bulk\n    @ActionSemantics(Of.IDEMPOTENT)\n    public",
                "return_type": "Invoice",
                "parameters": [],
                "body": "{\n    collect();\n    return this;\n}",
                "start_point": {
                    "row": 471,
                    "column": 4
                },
                "end_point": {
                    "row": 477,
                    "column": 5
                }
            },
            {
                "definition": "public String disableSubmitToCoda() {\n    if (getPaymentMethod().isDirectDebit()) {\n        return getStatus() == InvoiceStatus.COLLECTED ||\n                getStatus() == InvoiceStatus.INVOICED\n                ? null\n                : \"Must be collected or invoiced\";\n    } else {\n        return getStatus() == InvoiceStatus.INVOICED\n                ? null\n                : \"Must be invoiced\";\n    }\n}",
                "name": "disableSubmitToCoda",
                "modifiers": "public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    if (getPaymentMethod().isDirectDebit()) {\n        return getStatus() == InvoiceStatus.COLLECTED ||\n                getStatus() == InvoiceStatus.INVOICED\n                ? null\n                : \"Must be collected or invoiced\";\n    } else {\n        return getStatus() == InvoiceStatus.INVOICED\n                ? null\n                : \"Must be invoiced\";\n    }\n}",
                "start_point": {
                    "row": 479,
                    "column": 4
                },
                "end_point": {
                    "row": 490,
                    "column": 5
                }
            },
            {
                "definition": "@Prototype\n@Bulk\npublic void remove() {\n    for (InvoiceItem item : getItems()) {\n        item.remove();\n    }\n    getContainer().remove(this);\n}",
                "name": "remove",
                "modifiers": "@Prototype\n    @Bulk\n    public",
                "return_type": null,
                "parameters": [],
                "body": "{\n    for (InvoiceItem item : getItems()) {\n        item.remove();\n    }\n    getContainer().remove(this);\n}",
                "start_point": {
                    "row": 494,
                    "column": 4
                },
                "end_point": {
                    "row": 501,
                    "column": 5
                }
            },
            {
                "definition": "public final void injectInvoices(final Invoices invoices) {\n    this.invoices = invoices;\n}",
                "name": "injectInvoices",
                "modifiers": "public final",
                "return_type": null,
                "parameters": [
                    {
                        "type": "final",
                        "name": "Invoices"
                    }
                ],
                "body": "{\n    this.invoices = invoices;\n}",
                "start_point": {
                    "row": 507,
                    "column": 4
                },
                "end_point": {
                    "row": 509,
                    "column": 5
                }
            }
        ]
    }
]