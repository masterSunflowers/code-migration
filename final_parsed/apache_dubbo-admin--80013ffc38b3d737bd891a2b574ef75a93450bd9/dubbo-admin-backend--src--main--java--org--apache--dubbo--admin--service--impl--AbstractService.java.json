[
    {
        "rev_path": "dubbo-admin-backend/src/main/java/org/apache/dubbo/admin/service/impl/AbstractService.java",
        "definition": "public class AbstractService {\n\n    protected static final Logger logger = LoggerFactory.getLogger(AbstractService.class);\n    @Autowired\n    protected RegistryService registryService;\n    @Autowired\n    private RegistryServerSync sync;\n\n    public ConcurrentMap<String, ConcurrentMap<String, Map<String, URL>>> getRegistryCache() {\n        return sync.getRegistryCache();\n    }\n\n}",
        "package": "package org.apache.dubbo.admin.service.impl;",
        "tree_path": "AbstractService",
        "name": "AbstractService",
        "modifiers": "public",
        "superclass": null,
        "super_interfaces": null,
        "body": "{\n\n    protected static final Logger logger = LoggerFactory.getLogger(AbstractService.class);\n    @Autowired\n    protected RegistryService registryService;\n    @Autowired\n    private RegistryServerSync sync;\n\n    public ConcurrentMap<String, ConcurrentMap<String, Map<String, URL>>> getRegistryCache() {\n        return sync.getRegistryCache();\n    }\n\n}",
        "start_point": {
            "row": 32,
            "column": 0
        },
        "end_point": {
            "row": 44,
            "column": 1
        },
        "file_mode": "Modified",
        "map_path": null,
        "methods": [
            {
                "definition": "public ConcurrentMap<String, ConcurrentMap<String, Map<String, URL>>> getRegistryCache() {\n    return sync.getRegistryCache();\n}",
                "name": "getRegistryCache",
                "modifiers": "public",
                "return_type": null,
                "parameters": [],
                "body": "{\n    return sync.getRegistryCache();\n}",
                "start_point": {
                    "row": 40,
                    "column": 4
                },
                "end_point": {
                    "row": 42,
                    "column": 5
                }
            }
        ]
    }
]