[
    {
        "repo_name": "apache_dubbo-admin",
        "commit": "80013ffc38b3d737bd891a2b574ef75a93450bd9",
        "rev_path": "dubbo-admin-backend/src/main/java/org/apache/dubbo/admin/model/domain/Override.java",
        "definition": "public class Override extends Entity {\n\n    private static final long serialVersionUID = 114828505391757846L;\n\n    private String service;\n\n    private String params;\n\n    private String application;\n\n    private String address;\n\n    private String username;\n\n    private boolean enabled;\n\n    public Override() {\n    }\n\n    public Override(long id) {\n        super(id);\n    }\n\n    public String getService() {\n        return service;\n    }\n\n\n    public void setService(String service) {\n        this.service = service;\n    }\n\n\n    public String getParams() {\n        return params;\n    }\n\n\n    public void setParams(String params) {\n        this.params = params;\n    }\n\n\n    public String getApplication() {\n        return application;\n    }\n\n\n    public void setApplication(String application) {\n        this.application = application;\n    }\n\n\n    public String getAddress() {\n        return address;\n    }\n\n\n    public void setAddress(String address) {\n        this.address = address;\n    }\n\n    public String getUsername() {\n        return username;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n\n    public boolean isEnabled() {\n        return enabled;\n    }\n\n\n    public void setEnabled(boolean enabled) {\n        this.enabled = enabled;\n    }\n\n    public String toString() {\n        return \"Override [service=\" + service + \", params=\" + params + \", application=\"\n                + application + \", address=\" + address + \", username=\" + username + \", enabled=\" + enabled + \"]\";\n    }\n\n    public boolean isDefault() {\n        return (getAddress() == null || getAddress().length() == 0 || Constants.ANY_VALUE.equals(getAddress()) || Constants.ANYHOST_VALUE.equals(getAddress()))\n                && (getApplication() == null || getApplication().length() == 0 || Constants.ANY_VALUE.equals(getApplication()));\n    }\n\n    public boolean isMatch(String service, String address, String application) {\n        return isEnabled() && getParams() != null && getParams().length() > 0\n                && service.equals(getService())\n                && (address == null || getAddress() == null || getAddress().length() == 0 || getAddress().equals(Constants.ANY_VALUE) || getAddress().equals(Constants.ANYHOST_VALUE) || getAddress().equals(address))\n                && (application == null || getApplication() == null || getApplication().length() == 0 || getApplication().equals(Constants.ANY_VALUE) || getApplication().equals(application));\n    }\n\n    public boolean isUniqueMatch(Provider provider) {\n        return isEnabled() && getParams() != null && getParams().length() > 0\n                && provider.getService().equals(getService())\n                && provider.getAddress().equals(getAddress());\n    }\n\n    public boolean isMatch(Provider provider) {\n        return isEnabled() && getParams() != null && getParams().length() > 0\n                && provider.getService().equals(getService())\n                && (getAddress() == null || getAddress().length() == 0 || getAddress().equals(Constants.ANY_VALUE) || getAddress().equals(Constants.ANYHOST_VALUE) || getAddress().equals(provider.getAddress()))\n                && (getApplication() == null || getApplication().length() == 0 || getApplication().equals(Constants.ANY_VALUE) || getApplication().equals(provider.getApplication()));\n    }\n\n    public boolean isUniqueMatch(Consumer consumer) {\n        return isEnabled() && getParams() != null && getParams().length() > 0\n                && consumer.getService().equals(getService())\n                && consumer.getAddress().equals(getAddress());\n    }\n\n    public boolean isMatch(Consumer consumer) {\n        return isEnabled() && getParams() != null && getParams().length() > 0\n                && consumer.getService().equals(getService())\n                && (getAddress() == null || getAddress().length() == 0 || getAddress().equals(Constants.ANY_VALUE) || getAddress().equals(Constants.ANYHOST_VALUE) || getAddress().equals(consumer.getAddress()))\n                && (getApplication() == null || getApplication().length() == 0 || getApplication().equals(Constants.ANY_VALUE) || getApplication().equals(consumer.getApplication()));\n    }\n\n    public Map<String, String> toParametersMap() {\n        Map<String, String> map = StringUtils.parseQueryString(getParams());\n        map.remove(Constants.INTERFACE_KEY);\n        map.remove(Constants.GROUP_KEY);\n        map.remove(Constants.VERSION_KEY);\n        map.remove(Constants.APPLICATION_KEY);\n        map.remove(Constants.CATEGORY_KEY);\n        map.remove(Constants.DYNAMIC_KEY);\n        map.remove(Constants.ENABLED_KEY);\n        return map;\n    }\n\n    public URL toUrl() {\n        String group = null;\n        String version = null;\n        String path = service;\n        int i = path.indexOf(\"/\");\n        if (i > 0) {\n            group = path.substring(0, i);\n            path = path.substring(i + 1);\n        }\n        i = path.lastIndexOf(\":\");\n        if (i > 0) {\n            version = path.substring(i + 1);\n            path = path.substring(0, i);\n        }\n        StringBuilder sb = new StringBuilder();\n        sb.append(Constants.OVERRIDE_PROTOCOL);\n        sb.append(\"://\");\n        if (!StringUtils.isBlank(address) && !Constants.ANY_VALUE.equals(address)) {\n            sb.append(address);\n        } else {\n            sb.append(Constants.ANYHOST_VALUE);\n        }\n        sb.append(\"/\");\n        sb.append(path);\n        sb.append(\"?\");\n        Map<String, String> param = StringUtils.parseQueryString(params);\n        param.put(Constants.CATEGORY_KEY, Constants.CONFIGURATORS_CATEGORY);\n        param.put(Constants.ENABLED_KEY, String.valueOf(isEnabled()));\n        param.put(Constants.DYNAMIC_KEY, \"false\");\n        if (!StringUtils.isBlank(application) && !Constants.ANY_VALUE.equals(application)) {\n            param.put(Constants.APPLICATION_KEY, application);\n        }\n        if (group != null) {\n            param.put(Constants.GROUP_KEY, group);\n        }\n        if (version != null) {\n            param.put(Constants.VERSION_KEY, version);\n        }\n        sb.append(StringUtils.toQueryString(param));\n        return URL.valueOf(sb.toString());\n    }\n\n}",
        "package": "package org.apache.dubbo.admin.model.domain;",
        "tree_path": "Override",
        "name": "Override",
        "modifiers": "public",
        "superclass": "extends Entity",
        "super_interfaces": null,
        "body": "{\n\n    private static final long serialVersionUID = 114828505391757846L;\n\n    private String service;\n\n    private String params;\n\n    private String application;\n\n    private String address;\n\n    private String username;\n\n    private boolean enabled;\n\n    public Override() {\n    }\n\n    public Override(long id) {\n        super(id);\n    }\n\n    public String getService() {\n        return service;\n    }\n\n\n    public void setService(String service) {\n        this.service = service;\n    }\n\n\n    public String getParams() {\n        return params;\n    }\n\n\n    public void setParams(String params) {\n        this.params = params;\n    }\n\n\n    public String getApplication() {\n        return application;\n    }\n\n\n    public void setApplication(String application) {\n        this.application = application;\n    }\n\n\n    public String getAddress() {\n        return address;\n    }\n\n\n    public void setAddress(String address) {\n        this.address = address;\n    }\n\n    public String getUsername() {\n        return username;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n\n    public boolean isEnabled() {\n        return enabled;\n    }\n\n\n    public void setEnabled(boolean enabled) {\n        this.enabled = enabled;\n    }\n\n    public String toString() {\n        return \"Override [service=\" + service + \", params=\" + params + \", application=\"\n                + application + \", address=\" + address + \", username=\" + username + \", enabled=\" + enabled + \"]\";\n    }\n\n    public boolean isDefault() {\n        return (getAddress() == null || getAddress().length() == 0 || Constants.ANY_VALUE.equals(getAddress()) || Constants.ANYHOST_VALUE.equals(getAddress()))\n                && (getApplication() == null || getApplication().length() == 0 || Constants.ANY_VALUE.equals(getApplication()));\n    }\n\n    public boolean isMatch(String service, String address, String application) {\n        return isEnabled() && getParams() != null && getParams().length() > 0\n                && service.equals(getService())\n                && (address == null || getAddress() == null || getAddress().length() == 0 || getAddress().equals(Constants.ANY_VALUE) || getAddress().equals(Constants.ANYHOST_VALUE) || getAddress().equals(address))\n                && (application == null || getApplication() == null || getApplication().length() == 0 || getApplication().equals(Constants.ANY_VALUE) || getApplication().equals(application));\n    }\n\n    public boolean isUniqueMatch(Provider provider) {\n        return isEnabled() && getParams() != null && getParams().length() > 0\n                && provider.getService().equals(getService())\n                && provider.getAddress().equals(getAddress());\n    }\n\n    public boolean isMatch(Provider provider) {\n        return isEnabled() && getParams() != null && getParams().length() > 0\n                && provider.getService().equals(getService())\n                && (getAddress() == null || getAddress().length() == 0 || getAddress().equals(Constants.ANY_VALUE) || getAddress().equals(Constants.ANYHOST_VALUE) || getAddress().equals(provider.getAddress()))\n                && (getApplication() == null || getApplication().length() == 0 || getApplication().equals(Constants.ANY_VALUE) || getApplication().equals(provider.getApplication()));\n    }\n\n    public boolean isUniqueMatch(Consumer consumer) {\n        return isEnabled() && getParams() != null && getParams().length() > 0\n                && consumer.getService().equals(getService())\n                && consumer.getAddress().equals(getAddress());\n    }\n\n    public boolean isMatch(Consumer consumer) {\n        return isEnabled() && getParams() != null && getParams().length() > 0\n                && consumer.getService().equals(getService())\n                && (getAddress() == null || getAddress().length() == 0 || getAddress().equals(Constants.ANY_VALUE) || getAddress().equals(Constants.ANYHOST_VALUE) || getAddress().equals(consumer.getAddress()))\n                && (getApplication() == null || getApplication().length() == 0 || getApplication().equals(Constants.ANY_VALUE) || getApplication().equals(consumer.getApplication()));\n    }\n\n    public Map<String, String> toParametersMap() {\n        Map<String, String> map = StringUtils.parseQueryString(getParams());\n        map.remove(Constants.INTERFACE_KEY);\n        map.remove(Constants.GROUP_KEY);\n        map.remove(Constants.VERSION_KEY);\n        map.remove(Constants.APPLICATION_KEY);\n        map.remove(Constants.CATEGORY_KEY);\n        map.remove(Constants.DYNAMIC_KEY);\n        map.remove(Constants.ENABLED_KEY);\n        return map;\n    }\n\n    public URL toUrl() {\n        String group = null;\n        String version = null;\n        String path = service;\n        int i = path.indexOf(\"/\");\n        if (i > 0) {\n            group = path.substring(0, i);\n            path = path.substring(i + 1);\n        }\n        i = path.lastIndexOf(\":\");\n        if (i > 0) {\n            version = path.substring(i + 1);\n            path = path.substring(0, i);\n        }\n        StringBuilder sb = new StringBuilder();\n        sb.append(Constants.OVERRIDE_PROTOCOL);\n        sb.append(\"://\");\n        if (!StringUtils.isBlank(address) && !Constants.ANY_VALUE.equals(address)) {\n            sb.append(address);\n        } else {\n            sb.append(Constants.ANYHOST_VALUE);\n        }\n        sb.append(\"/\");\n        sb.append(path);\n        sb.append(\"?\");\n        Map<String, String> param = StringUtils.parseQueryString(params);\n        param.put(Constants.CATEGORY_KEY, Constants.CONFIGURATORS_CATEGORY);\n        param.put(Constants.ENABLED_KEY, String.valueOf(isEnabled()));\n        param.put(Constants.DYNAMIC_KEY, \"false\");\n        if (!StringUtils.isBlank(application) && !Constants.ANY_VALUE.equals(application)) {\n            param.put(Constants.APPLICATION_KEY, application);\n        }\n        if (group != null) {\n            param.put(Constants.GROUP_KEY, group);\n        }\n        if (version != null) {\n            param.put(Constants.VERSION_KEY, version);\n        }\n        sb.append(StringUtils.toQueryString(param));\n        return URL.valueOf(sb.toString());\n    }\n\n}",
        "start_point": {
            "row": 24,
            "column": 0
        },
        "end_point": {
            "row": 201,
            "column": 1
        },
        "file_mode": "Modified",
        "map_path": null,
        "methods": [
            {
                "definition": "public Override() {\n}",
                "name": "Override",
                "modifiers": "public",
                "parameters": [],
                "body": "{\n}",
                "constructor": true,
                "start_point": {
                    "row": 40,
                    "column": 4
                },
                "end_point": {
                    "row": 41,
                    "column": 5
                }
            },
            {
                "definition": "public Override(long id) {\n    super(id);\n}",
                "name": "Override",
                "modifiers": "public",
                "parameters": [
                    {
                        "type": "long",
                        "name": "id"
                    }
                ],
                "body": "{\n    super(id);\n}",
                "constructor": true,
                "start_point": {
                    "row": 43,
                    "column": 4
                },
                "end_point": {
                    "row": 45,
                    "column": 5
                }
            },
            {
                "definition": "public String getService() {\n    return service;\n}",
                "name": "getService",
                "modifiers": "public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    return service;\n}",
                "start_point": {
                    "row": 47,
                    "column": 4
                },
                "end_point": {
                    "row": 49,
                    "column": 5
                }
            },
            {
                "definition": "public void setService(String service) {\n    this.service = service;\n}",
                "name": "setService",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "String",
                        "name": "service"
                    }
                ],
                "body": "{\n    this.service = service;\n}",
                "start_point": {
                    "row": 52,
                    "column": 4
                },
                "end_point": {
                    "row": 54,
                    "column": 5
                }
            },
            {
                "definition": "public String getParams() {\n    return params;\n}",
                "name": "getParams",
                "modifiers": "public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    return params;\n}",
                "start_point": {
                    "row": 57,
                    "column": 4
                },
                "end_point": {
                    "row": 59,
                    "column": 5
                }
            },
            {
                "definition": "public void setParams(String params) {\n    this.params = params;\n}",
                "name": "setParams",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "String",
                        "name": "params"
                    }
                ],
                "body": "{\n    this.params = params;\n}",
                "start_point": {
                    "row": 62,
                    "column": 4
                },
                "end_point": {
                    "row": 64,
                    "column": 5
                }
            },
            {
                "definition": "public String getApplication() {\n    return application;\n}",
                "name": "getApplication",
                "modifiers": "public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    return application;\n}",
                "start_point": {
                    "row": 67,
                    "column": 4
                },
                "end_point": {
                    "row": 69,
                    "column": 5
                }
            },
            {
                "definition": "public void setApplication(String application) {\n    this.application = application;\n}",
                "name": "setApplication",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "String",
                        "name": "application"
                    }
                ],
                "body": "{\n    this.application = application;\n}",
                "start_point": {
                    "row": 72,
                    "column": 4
                },
                "end_point": {
                    "row": 74,
                    "column": 5
                }
            },
            {
                "definition": "public String getAddress() {\n    return address;\n}",
                "name": "getAddress",
                "modifiers": "public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    return address;\n}",
                "start_point": {
                    "row": 77,
                    "column": 4
                },
                "end_point": {
                    "row": 79,
                    "column": 5
                }
            },
            {
                "definition": "public void setAddress(String address) {\n    this.address = address;\n}",
                "name": "setAddress",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "String",
                        "name": "address"
                    }
                ],
                "body": "{\n    this.address = address;\n}",
                "start_point": {
                    "row": 82,
                    "column": 4
                },
                "end_point": {
                    "row": 84,
                    "column": 5
                }
            },
            {
                "definition": "public String getUsername() {\n    return username;\n}",
                "name": "getUsername",
                "modifiers": "public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    return username;\n}",
                "start_point": {
                    "row": 86,
                    "column": 4
                },
                "end_point": {
                    "row": 88,
                    "column": 5
                }
            },
            {
                "definition": "public void setUsername(String username) {\n    this.username = username;\n}",
                "name": "setUsername",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "String",
                        "name": "username"
                    }
                ],
                "body": "{\n    this.username = username;\n}",
                "start_point": {
                    "row": 90,
                    "column": 4
                },
                "end_point": {
                    "row": 92,
                    "column": 5
                }
            },
            {
                "definition": "public boolean isEnabled() {\n    return enabled;\n}",
                "name": "isEnabled",
                "modifiers": "public",
                "return_type": null,
                "parameters": [],
                "body": "{\n    return enabled;\n}",
                "start_point": {
                    "row": 95,
                    "column": 4
                },
                "end_point": {
                    "row": 97,
                    "column": 5
                }
            },
            {
                "definition": "public void setEnabled(boolean enabled) {\n    this.enabled = enabled;\n}",
                "name": "setEnabled",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "enabled"
                    }
                ],
                "body": "{\n    this.enabled = enabled;\n}",
                "start_point": {
                    "row": 100,
                    "column": 4
                },
                "end_point": {
                    "row": 102,
                    "column": 5
                }
            },
            {
                "definition": "public String toString() {\n    return \"Override [service=\" + service + \", params=\" + params + \", application=\"\n            + application + \", address=\" + address + \", username=\" + username + \", enabled=\" + enabled + \"]\";\n}",
                "name": "toString",
                "modifiers": "public",
                "return_type": "String",
                "parameters": [],
                "body": "{\n    return \"Override [service=\" + service + \", params=\" + params + \", application=\"\n            + application + \", address=\" + address + \", username=\" + username + \", enabled=\" + enabled + \"]\";\n}",
                "start_point": {
                    "row": 104,
                    "column": 4
                },
                "end_point": {
                    "row": 107,
                    "column": 5
                }
            },
            {
                "definition": "public boolean isDefault() {\n    return (getAddress() == null || getAddress().length() == 0 || Constants.ANY_VALUE.equals(getAddress()) || Constants.ANYHOST_VALUE.equals(getAddress()))\n            && (getApplication() == null || getApplication().length() == 0 || Constants.ANY_VALUE.equals(getApplication()));\n}",
                "name": "isDefault",
                "modifiers": "public",
                "return_type": null,
                "parameters": [],
                "body": "{\n    return (getAddress() == null || getAddress().length() == 0 || Constants.ANY_VALUE.equals(getAddress()) || Constants.ANYHOST_VALUE.equals(getAddress()))\n            && (getApplication() == null || getApplication().length() == 0 || Constants.ANY_VALUE.equals(getApplication()));\n}",
                "start_point": {
                    "row": 109,
                    "column": 4
                },
                "end_point": {
                    "row": 112,
                    "column": 5
                }
            },
            {
                "definition": "public boolean isMatch(String service, String address, String application) {\n    return isEnabled() && getParams() != null && getParams().length() > 0\n            && service.equals(getService())\n            && (address == null || getAddress() == null || getAddress().length() == 0 || getAddress().equals(Constants.ANY_VALUE) || getAddress().equals(Constants.ANYHOST_VALUE) || getAddress().equals(address))\n            && (application == null || getApplication() == null || getApplication().length() == 0 || getApplication().equals(Constants.ANY_VALUE) || getApplication().equals(application));\n}",
                "name": "isMatch",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "String",
                        "name": "service"
                    },
                    {
                        "type": "String",
                        "name": "address"
                    },
                    {
                        "type": "String",
                        "name": "application"
                    }
                ],
                "body": "{\n    return isEnabled() && getParams() != null && getParams().length() > 0\n            && service.equals(getService())\n            && (address == null || getAddress() == null || getAddress().length() == 0 || getAddress().equals(Constants.ANY_VALUE) || getAddress().equals(Constants.ANYHOST_VALUE) || getAddress().equals(address))\n            && (application == null || getApplication() == null || getApplication().length() == 0 || getApplication().equals(Constants.ANY_VALUE) || getApplication().equals(application));\n}",
                "start_point": {
                    "row": 114,
                    "column": 4
                },
                "end_point": {
                    "row": 119,
                    "column": 5
                }
            },
            {
                "definition": "public boolean isUniqueMatch(Provider provider) {\n    return isEnabled() && getParams() != null && getParams().length() > 0\n            && provider.getService().equals(getService())\n            && provider.getAddress().equals(getAddress());\n}",
                "name": "isUniqueMatch",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "Provider",
                        "name": "provider"
                    }
                ],
                "body": "{\n    return isEnabled() && getParams() != null && getParams().length() > 0\n            && provider.getService().equals(getService())\n            && provider.getAddress().equals(getAddress());\n}",
                "start_point": {
                    "row": 121,
                    "column": 4
                },
                "end_point": {
                    "row": 125,
                    "column": 5
                }
            },
            {
                "definition": "public boolean isMatch(Provider provider) {\n    return isEnabled() && getParams() != null && getParams().length() > 0\n            && provider.getService().equals(getService())\n            && (getAddress() == null || getAddress().length() == 0 || getAddress().equals(Constants.ANY_VALUE) || getAddress().equals(Constants.ANYHOST_VALUE) || getAddress().equals(provider.getAddress()))\n            && (getApplication() == null || getApplication().length() == 0 || getApplication().equals(Constants.ANY_VALUE) || getApplication().equals(provider.getApplication()));\n}",
                "name": "isMatch",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "Provider",
                        "name": "provider"
                    }
                ],
                "body": "{\n    return isEnabled() && getParams() != null && getParams().length() > 0\n            && provider.getService().equals(getService())\n            && (getAddress() == null || getAddress().length() == 0 || getAddress().equals(Constants.ANY_VALUE) || getAddress().equals(Constants.ANYHOST_VALUE) || getAddress().equals(provider.getAddress()))\n            && (getApplication() == null || getApplication().length() == 0 || getApplication().equals(Constants.ANY_VALUE) || getApplication().equals(provider.getApplication()));\n}",
                "start_point": {
                    "row": 127,
                    "column": 4
                },
                "end_point": {
                    "row": 132,
                    "column": 5
                }
            },
            {
                "definition": "public boolean isUniqueMatch(Consumer consumer) {\n    return isEnabled() && getParams() != null && getParams().length() > 0\n            && consumer.getService().equals(getService())\n            && consumer.getAddress().equals(getAddress());\n}",
                "name": "isUniqueMatch",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "Consumer",
                        "name": "consumer"
                    }
                ],
                "body": "{\n    return isEnabled() && getParams() != null && getParams().length() > 0\n            && consumer.getService().equals(getService())\n            && consumer.getAddress().equals(getAddress());\n}",
                "start_point": {
                    "row": 134,
                    "column": 4
                },
                "end_point": {
                    "row": 138,
                    "column": 5
                }
            },
            {
                "definition": "public boolean isMatch(Consumer consumer) {\n    return isEnabled() && getParams() != null && getParams().length() > 0\n            && consumer.getService().equals(getService())\n            && (getAddress() == null || getAddress().length() == 0 || getAddress().equals(Constants.ANY_VALUE) || getAddress().equals(Constants.ANYHOST_VALUE) || getAddress().equals(consumer.getAddress()))\n            && (getApplication() == null || getApplication().length() == 0 || getApplication().equals(Constants.ANY_VALUE) || getApplication().equals(consumer.getApplication()));\n}",
                "name": "isMatch",
                "modifiers": "public",
                "return_type": null,
                "parameters": [
                    {
                        "type": "Consumer",
                        "name": "consumer"
                    }
                ],
                "body": "{\n    return isEnabled() && getParams() != null && getParams().length() > 0\n            && consumer.getService().equals(getService())\n            && (getAddress() == null || getAddress().length() == 0 || getAddress().equals(Constants.ANY_VALUE) || getAddress().equals(Constants.ANYHOST_VALUE) || getAddress().equals(consumer.getAddress()))\n            && (getApplication() == null || getApplication().length() == 0 || getApplication().equals(Constants.ANY_VALUE) || getApplication().equals(consumer.getApplication()));\n}",
                "start_point": {
                    "row": 140,
                    "column": 4
                },
                "end_point": {
                    "row": 145,
                    "column": 5
                }
            },
            {
                "definition": "public Map<String, String> toParametersMap() {\n    Map<String, String> map = StringUtils.parseQueryString(getParams());\n    map.remove(Constants.INTERFACE_KEY);\n    map.remove(Constants.GROUP_KEY);\n    map.remove(Constants.VERSION_KEY);\n    map.remove(Constants.APPLICATION_KEY);\n    map.remove(Constants.CATEGORY_KEY);\n    map.remove(Constants.DYNAMIC_KEY);\n    map.remove(Constants.ENABLED_KEY);\n    return map;\n}",
                "name": "toParametersMap",
                "modifiers": "public",
                "return_type": null,
                "parameters": [],
                "body": "{\n    Map<String, String> map = StringUtils.parseQueryString(getParams());\n    map.remove(Constants.INTERFACE_KEY);\n    map.remove(Constants.GROUP_KEY);\n    map.remove(Constants.VERSION_KEY);\n    map.remove(Constants.APPLICATION_KEY);\n    map.remove(Constants.CATEGORY_KEY);\n    map.remove(Constants.DYNAMIC_KEY);\n    map.remove(Constants.ENABLED_KEY);\n    return map;\n}",
                "start_point": {
                    "row": 147,
                    "column": 4
                },
                "end_point": {
                    "row": 157,
                    "column": 5
                }
            },
            {
                "definition": "public URL toUrl() {\n    String group = null;\n    String version = null;\n    String path = service;\n    int i = path.indexOf(\"/\");\n    if (i > 0) {\n        group = path.substring(0, i);\n        path = path.substring(i + 1);\n    }\n    i = path.lastIndexOf(\":\");\n    if (i > 0) {\n        version = path.substring(i + 1);\n        path = path.substring(0, i);\n    }\n    StringBuilder sb = new StringBuilder();\n    sb.append(Constants.OVERRIDE_PROTOCOL);\n    sb.append(\"://\");\n    if (!StringUtils.isBlank(address) && !Constants.ANY_VALUE.equals(address)) {\n        sb.append(address);\n    } else {\n        sb.append(Constants.ANYHOST_VALUE);\n    }\n    sb.append(\"/\");\n    sb.append(path);\n    sb.append(\"?\");\n    Map<String, String> param = StringUtils.parseQueryString(params);\n    param.put(Constants.CATEGORY_KEY, Constants.CONFIGURATORS_CATEGORY);\n    param.put(Constants.ENABLED_KEY, String.valueOf(isEnabled()));\n    param.put(Constants.DYNAMIC_KEY, \"false\");\n    if (!StringUtils.isBlank(application) && !Constants.ANY_VALUE.equals(application)) {\n        param.put(Constants.APPLICATION_KEY, application);\n    }\n    if (group != null) {\n        param.put(Constants.GROUP_KEY, group);\n    }\n    if (version != null) {\n        param.put(Constants.VERSION_KEY, version);\n    }\n    sb.append(StringUtils.toQueryString(param));\n    return URL.valueOf(sb.toString());\n}",
                "name": "toUrl",
                "modifiers": "public",
                "return_type": "URL",
                "parameters": [],
                "body": "{\n    String group = null;\n    String version = null;\n    String path = service;\n    int i = path.indexOf(\"/\");\n    if (i > 0) {\n        group = path.substring(0, i);\n        path = path.substring(i + 1);\n    }\n    i = path.lastIndexOf(\":\");\n    if (i > 0) {\n        version = path.substring(i + 1);\n        path = path.substring(0, i);\n    }\n    StringBuilder sb = new StringBuilder();\n    sb.append(Constants.OVERRIDE_PROTOCOL);\n    sb.append(\"://\");\n    if (!StringUtils.isBlank(address) && !Constants.ANY_VALUE.equals(address)) {\n        sb.append(address);\n    } else {\n        sb.append(Constants.ANYHOST_VALUE);\n    }\n    sb.append(\"/\");\n    sb.append(path);\n    sb.append(\"?\");\n    Map<String, String> param = StringUtils.parseQueryString(params);\n    param.put(Constants.CATEGORY_KEY, Constants.CONFIGURATORS_CATEGORY);\n    param.put(Constants.ENABLED_KEY, String.valueOf(isEnabled()));\n    param.put(Constants.DYNAMIC_KEY, \"false\");\n    if (!StringUtils.isBlank(application) && !Constants.ANY_VALUE.equals(application)) {\n        param.put(Constants.APPLICATION_KEY, application);\n    }\n    if (group != null) {\n        param.put(Constants.GROUP_KEY, group);\n    }\n    if (version != null) {\n        param.put(Constants.VERSION_KEY, version);\n    }\n    sb.append(StringUtils.toQueryString(param));\n    return URL.valueOf(sb.toString());\n}",
                "start_point": {
                    "row": 159,
                    "column": 4
                },
                "end_point": {
                    "row": 199,
                    "column": 5
                }
            }
        ],
        "class_mode": "Unchanged"
    }
]