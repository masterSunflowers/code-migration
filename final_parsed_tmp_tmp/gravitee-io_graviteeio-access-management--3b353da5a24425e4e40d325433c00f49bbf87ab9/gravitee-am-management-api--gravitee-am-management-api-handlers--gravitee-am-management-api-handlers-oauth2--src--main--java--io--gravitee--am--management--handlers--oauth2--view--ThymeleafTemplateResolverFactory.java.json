[
    {
        "repo_name": "gravitee-io_graviteeio-access-management",
        "commit": "3b353da5a24425e4e40d325433c00f49bbf87ab9",
        "rev_path": "gravitee-am-management-api/gravitee-am-management-api-handlers/gravitee-am-management-api-handlers-oauth2/src/main/java/io/gravitee/am/management/handlers/oauth2/view/ThymeleafTemplateResolverFactory.java",
        "definition": "public class ThymeleafTemplateResolverFactory extends AbstractAutowiringFactoryBean<ITemplateResolver> {\n\n    private final Logger logger = LoggerFactory.getLogger(ThymeleafTemplateResolverFactory.class);\n\n    @Autowired\n    private Domain domain;\n\n    @Override\n    protected ITemplateResolver doCreateInstance() throws Exception {\n        if (domain.getLoginForm() == null || domain.getLoginForm().getContent() == null || !domain.getLoginForm().isEnabled()) {\n            logger.debug(\"View templating has not been overridden with custom view, returning default views.\");\n            return defaultTemplateResolver();\n        }\n\n        ITemplateResolver resolver = overrideTemplateResolver();\n\n        return (resolver != null) ? resolver : defaultTemplateResolver();\n    }\n\n    private ITemplateResolver overrideTemplateResolver() {\n        return new DomainBasedTemplateResolver();\n\n    }\n    private ITemplateResolver defaultTemplateResolver() {\n        ClassLoaderTemplateResolver templateResolver = new ClassLoaderTemplateResolver();\n        templateResolver.setPrefix(\"/views/\");\n        templateResolver.setSuffix(\".html\");\n        templateResolver.setTemplateMode(\"HTML\");\n        return templateResolver;\n    }\n\n    @Override\n    public Class<?> getObjectType() {\n        return ITemplateResolver.class;\n    }\n}",
        "package": "package io.gravitee.am.management.handlers.oauth2.view;",
        "tree_path": "ThymeleafTemplateResolverFactory",
        "name": "ThymeleafTemplateResolverFactory",
        "modifiers": "public",
        "superclass": "extends AbstractAutowiringFactoryBean<ITemplateResolver>",
        "super_interfaces": null,
        "body": "{\n\n    private final Logger logger = LoggerFactory.getLogger(ThymeleafTemplateResolverFactory.class);\n\n    @Autowired\n    private Domain domain;\n\n    @Override\n    protected ITemplateResolver doCreateInstance() throws Exception {\n        if (domain.getLoginForm() == null || domain.getLoginForm().getContent() == null || !domain.getLoginForm().isEnabled()) {\n            logger.debug(\"View templating has not been overridden with custom view, returning default views.\");\n            return defaultTemplateResolver();\n        }\n\n        ITemplateResolver resolver = overrideTemplateResolver();\n\n        return (resolver != null) ? resolver : defaultTemplateResolver();\n    }\n\n    private ITemplateResolver overrideTemplateResolver() {\n        return new DomainBasedTemplateResolver();\n\n    }\n    private ITemplateResolver defaultTemplateResolver() {\n        ClassLoaderTemplateResolver templateResolver = new ClassLoaderTemplateResolver();\n        templateResolver.setPrefix(\"/views/\");\n        templateResolver.setSuffix(\".html\");\n        templateResolver.setTemplateMode(\"HTML\");\n        return templateResolver;\n    }\n\n    @Override\n    public Class<?> getObjectType() {\n        return ITemplateResolver.class;\n    }\n}",
        "start_point": {
            "row": 29,
            "column": 0
        },
        "end_point": {
            "row": 64,
            "column": 1
        },
        "file_mode": "Renamed-Modified",
        "map_path": "gravitee-am-management-api/gravitee-am-management-api-handlers/gravitee-am-management-api-handlers-admin/src/main/java/io/gravitee/am/management/handlers/admin/view/ThymeleafTemplateResolverFactory.java",
        "methods": [
            {
                "definition": "@Override\nprotected ITemplateResolver doCreateInstance() throws Exception {\n    if (domain.getLoginForm() == null || domain.getLoginForm().getContent() == null || !domain.getLoginForm().isEnabled()) {\n        logger.debug(\"View templating has not been overridden with custom view, returning default views.\");\n        return defaultTemplateResolver();\n    }\n\n    ITemplateResolver resolver = overrideTemplateResolver();\n\n    return (resolver != null) ? resolver : defaultTemplateResolver();\n}",
                "name": "doCreateInstance",
                "modifiers": "@Override\n    protected",
                "return_type": "ITemplateResolver",
                "parameters": [],
                "body": "{\n    if (domain.getLoginForm() == null || domain.getLoginForm().getContent() == null || !domain.getLoginForm().isEnabled()) {\n        logger.debug(\"View templating has not been overridden with custom view, returning default views.\");\n        return defaultTemplateResolver();\n    }\n\n    ITemplateResolver resolver = overrideTemplateResolver();\n\n    return (resolver != null) ? resolver : defaultTemplateResolver();\n}",
                "start_point": {
                    "row": 36,
                    "column": 4
                },
                "end_point": {
                    "row": 46,
                    "column": 5
                }
            },
            {
                "definition": "private ITemplateResolver overrideTemplateResolver() {\n    return new DomainBasedTemplateResolver();\n\n}",
                "name": "overrideTemplateResolver",
                "modifiers": "private",
                "return_type": "ITemplateResolver",
                "parameters": [],
                "body": "{\n    return new DomainBasedTemplateResolver();\n\n}",
                "start_point": {
                    "row": 48,
                    "column": 4
                },
                "end_point": {
                    "row": 51,
                    "column": 5
                }
            },
            {
                "definition": "private ITemplateResolver defaultTemplateResolver() {\n    ClassLoaderTemplateResolver templateResolver = new ClassLoaderTemplateResolver();\n    templateResolver.setPrefix(\"/views/\");\n    templateResolver.setSuffix(\".html\");\n    templateResolver.setTemplateMode(\"HTML\");\n    return templateResolver;\n}",
                "name": "defaultTemplateResolver",
                "modifiers": "private",
                "return_type": "ITemplateResolver",
                "parameters": [],
                "body": "{\n    ClassLoaderTemplateResolver templateResolver = new ClassLoaderTemplateResolver();\n    templateResolver.setPrefix(\"/views/\");\n    templateResolver.setSuffix(\".html\");\n    templateResolver.setTemplateMode(\"HTML\");\n    return templateResolver;\n}",
                "start_point": {
                    "row": 52,
                    "column": 4
                },
                "end_point": {
                    "row": 58,
                    "column": 5
                }
            },
            {
                "definition": "@Override\npublic Class<?> getObjectType() {\n    return ITemplateResolver.class;\n}",
                "name": "getObjectType",
                "modifiers": "@Override\n    public",
                "return_type": null,
                "parameters": [],
                "body": "{\n    return ITemplateResolver.class;\n}",
                "start_point": {
                    "row": 60,
                    "column": 4
                },
                "end_point": {
                    "row": 63,
                    "column": 5
                }
            }
        ],
        "class_mode": "Unchanged"
    }
]