[
    {
        "repo_name": "gravitee-io_graviteeio-access-management",
        "commit": "0b18ada3207991cdfd70a551c56af125d2a0efe1",
        "rev_path": "gravitee-am-management-api/gravitee-am-management-api-handlers/gravitee-am-management-api-handlers-admin/src/main/java/io/gravitee/am/management/handlers/admin/context/AdminSpringServletContext.java",
        "definition": "public class AdminSpringServletContext extends SpringServletContext<Domain> {\n\n    private final Domain domain;\n\n    private AdminSpringServletContext(Domain domain) {\n        this.domain = domain;\n    }\n\n    @Override\n    public List<Servlet> servlets() {\n        return Collections.singletonList(new DispatcherServlet(applicationContext()));\n    }\n\n    @Override\n    public List<Filter> filters() {\n        return Collections.singletonList(new DelegatingFilterProxy(\"springSecurityFilterChain\"));\n    }\n\n    @Override\n    public List<EventListener> listeners() {\n        return Collections.singletonList(new AdminContextLoaderListener(applicationContext()));\n    }\n\n    @Override\n    public Domain deployable() {\n        return domain;\n    }\n\n    @Override\n    protected Set<Class<?>> annotatedClasses() {\n        return new HashSet<>(Arrays.asList(AdminConfiguration.class));\n    }\n\n    @Override\n    protected Set<? extends BeanFactoryPostProcessor> beanFactoryPostProcessors() {\n        return Collections.singleton(new AdminDomainBeanFactoryPostProcessor((Domain) deployable()));\n    }\n\n    static Builder create(Domain domain) {\n        return new Builder(domain);\n    }\n\n    static class Builder {\n\n        private final Domain domain;\n\n        private Builder(Domain domain) {\n            this.domain = domain;\n        }\n\n        SpringServletContext<Domain> build() {\n            return new AdminSpringServletContext(domain);\n        }\n    }\n}",
        "package": "package io.gravitee.am.management.handlers.admin.context;",
        "tree_path": "AdminSpringServletContext",
        "name": "AdminSpringServletContext",
        "modifiers": "public",
        "superclass": "extends SpringServletContext<Domain>",
        "super_interfaces": null,
        "body": "{\n\n    private final Domain domain;\n\n    private AdminSpringServletContext(Domain domain) {\n        this.domain = domain;\n    }\n\n    @Override\n    public List<Servlet> servlets() {\n        return Collections.singletonList(new DispatcherServlet(applicationContext()));\n    }\n\n    @Override\n    public List<Filter> filters() {\n        return Collections.singletonList(new DelegatingFilterProxy(\"springSecurityFilterChain\"));\n    }\n\n    @Override\n    public List<EventListener> listeners() {\n        return Collections.singletonList(new AdminContextLoaderListener(applicationContext()));\n    }\n\n    @Override\n    public Domain deployable() {\n        return domain;\n    }\n\n    @Override\n    protected Set<Class<?>> annotatedClasses() {\n        return new HashSet<>(Arrays.asList(AdminConfiguration.class));\n    }\n\n    @Override\n    protected Set<? extends BeanFactoryPostProcessor> beanFactoryPostProcessors() {\n        return Collections.singleton(new AdminDomainBeanFactoryPostProcessor((Domain) deployable()));\n    }\n\n    static Builder create(Domain domain) {\n        return new Builder(domain);\n    }\n\n    static class Builder {\n\n        private final Domain domain;\n\n        private Builder(Domain domain) {\n            this.domain = domain;\n        }\n\n        SpringServletContext<Domain> build() {\n            return new AdminSpringServletContext(domain);\n        }\n    }\n}",
        "start_point": {
            "row": 32,
            "column": 0
        },
        "end_point": {
            "row": 86,
            "column": 1
        },
        "file_mode": "Renamed-Modified",
        "map_path": "gravitee-am-management-api/gravitee-am-management-api-handlers/gravitee-am-management-api-handlers-oauth2/src/main/java/io/gravitee/am/management/handlers/oauth2/context/OAuth2SpringServletContext.java",
        "methods": [
            {
                "definition": "private AdminSpringServletContext(Domain domain) {\n    this.domain = domain;\n}",
                "name": "AdminSpringServletContext",
                "modifiers": "private",
                "parameters": [
                    {
                        "type": "Domain",
                        "name": "domain"
                    }
                ],
                "body": "{\n    this.domain = domain;\n}",
                "constructor": true,
                "start_point": {
                    "row": 36,
                    "column": 4
                },
                "end_point": {
                    "row": 38,
                    "column": 5
                },
                "method_mode": "Renamed-Modified",
                "map_method": [
                    "OAuth2SpringServletContext",
                    [
                        {
                            "type": "Domain",
                            "name": "domain"
                        }
                    ]
                ]
            },
            {
                "definition": "@Override\npublic List<Servlet> servlets() {\n    return Collections.singletonList(new DispatcherServlet(applicationContext()));\n}",
                "name": "servlets",
                "modifiers": "@Override\n    public",
                "return_type": null,
                "parameters": [],
                "body": "{\n    return Collections.singletonList(new DispatcherServlet(applicationContext()));\n}",
                "start_point": {
                    "row": 40,
                    "column": 4
                },
                "end_point": {
                    "row": 43,
                    "column": 5
                },
                "method_mode": "Unchanged"
            },
            {
                "definition": "@Override\npublic List<Filter> filters() {\n    return Collections.singletonList(new DelegatingFilterProxy(\"springSecurityFilterChain\"));\n}",
                "name": "filters",
                "modifiers": "@Override\n    public",
                "return_type": null,
                "parameters": [],
                "body": "{\n    return Collections.singletonList(new DelegatingFilterProxy(\"springSecurityFilterChain\"));\n}",
                "start_point": {
                    "row": 45,
                    "column": 4
                },
                "end_point": {
                    "row": 48,
                    "column": 5
                },
                "method_mode": "Unchanged"
            },
            {
                "definition": "@Override\npublic List<EventListener> listeners() {\n    return Collections.singletonList(new AdminContextLoaderListener(applicationContext()));\n}",
                "name": "listeners",
                "modifiers": "@Override\n    public",
                "return_type": null,
                "parameters": [],
                "body": "{\n    return Collections.singletonList(new AdminContextLoaderListener(applicationContext()));\n}",
                "start_point": {
                    "row": 50,
                    "column": 4
                },
                "end_point": {
                    "row": 53,
                    "column": 5
                },
                "method_mode": "Modified"
            },
            {
                "definition": "@Override\npublic Domain deployable() {\n    return domain;\n}",
                "name": "deployable",
                "modifiers": "@Override\n    public",
                "return_type": "Domain",
                "parameters": [],
                "body": "{\n    return domain;\n}",
                "start_point": {
                    "row": 55,
                    "column": 4
                },
                "end_point": {
                    "row": 58,
                    "column": 5
                },
                "method_mode": "Unchanged"
            },
            {
                "definition": "@Override\nprotected Set<Class<?>> annotatedClasses() {\n    return new HashSet<>(Arrays.asList(AdminConfiguration.class));\n}",
                "name": "annotatedClasses",
                "modifiers": "@Override\n    protected",
                "return_type": null,
                "parameters": [],
                "body": "{\n    return new HashSet<>(Arrays.asList(AdminConfiguration.class));\n}",
                "start_point": {
                    "row": 60,
                    "column": 4
                },
                "end_point": {
                    "row": 63,
                    "column": 5
                },
                "method_mode": "Modified"
            },
            {
                "definition": "@Override\nprotected Set<? extends BeanFactoryPostProcessor> beanFactoryPostProcessors() {\n    return Collections.singleton(new AdminDomainBeanFactoryPostProcessor((Domain) deployable()));\n}",
                "name": "beanFactoryPostProcessors",
                "modifiers": "@Override\n    protected",
                "return_type": null,
                "parameters": [],
                "body": "{\n    return Collections.singleton(new AdminDomainBeanFactoryPostProcessor((Domain) deployable()));\n}",
                "start_point": {
                    "row": 65,
                    "column": 4
                },
                "end_point": {
                    "row": 68,
                    "column": 5
                },
                "method_mode": "Modified"
            },
            {
                "definition": "static Builder create(Domain domain) {\n    return new Builder(domain);\n}",
                "name": "create",
                "modifiers": "static",
                "return_type": "Builder",
                "parameters": [
                    {
                        "type": "Domain",
                        "name": "domain"
                    }
                ],
                "body": "{\n    return new Builder(domain);\n}",
                "start_point": {
                    "row": 70,
                    "column": 4
                },
                "end_point": {
                    "row": 72,
                    "column": 5
                },
                "method_mode": "Unchanged"
            }
        ],
        "class_mode": "Renamed-Modified",
        "map_tree_path": "OAuth2SpringServletContext"
    },
    {
        "repo_name": "gravitee-io_graviteeio-access-management",
        "commit": "0b18ada3207991cdfd70a551c56af125d2a0efe1",
        "rev_path": "gravitee-am-management-api/gravitee-am-management-api-handlers/gravitee-am-management-api-handlers-admin/src/main/java/io/gravitee/am/management/handlers/admin/context/AdminSpringServletContext.java",
        "definition": "static class Builder {\n\n    private final Domain domain;\n\n    private Builder(Domain domain) {\n        this.domain = domain;\n    }\n\n    SpringServletContext<Domain> build() {\n        return new AdminSpringServletContext(domain);\n    }\n}",
        "package": "package io.gravitee.am.management.handlers.admin.context;",
        "tree_path": "AdminSpringServletContext.Builder",
        "name": "Builder",
        "modifiers": "static",
        "superclass": null,
        "super_interfaces": null,
        "body": "{\n\n    private final Domain domain;\n\n    private Builder(Domain domain) {\n        this.domain = domain;\n    }\n\n    SpringServletContext<Domain> build() {\n        return new AdminSpringServletContext(domain);\n    }\n}",
        "start_point": {
            "row": 74,
            "column": 4
        },
        "end_point": {
            "row": 85,
            "column": 5
        },
        "file_mode": "Renamed-Modified",
        "map_path": "gravitee-am-management-api/gravitee-am-management-api-handlers/gravitee-am-management-api-handlers-oauth2/src/main/java/io/gravitee/am/management/handlers/oauth2/context/OAuth2SpringServletContext.java",
        "methods": [
            {
                "definition": "private Builder(Domain domain) {\n    this.domain = domain;\n}",
                "name": "Builder",
                "modifiers": "private",
                "parameters": [
                    {
                        "type": "Domain",
                        "name": "domain"
                    }
                ],
                "body": "{\n    this.domain = domain;\n}",
                "constructor": true,
                "start_point": {
                    "row": 78,
                    "column": 8
                },
                "end_point": {
                    "row": 80,
                    "column": 9
                },
                "method_mode": "Unchanged"
            },
            {
                "definition": "SpringServletContext<Domain> build() {\n    return new AdminSpringServletContext(domain);\n}",
                "name": "build",
                "modifiers": null,
                "return_type": null,
                "parameters": [],
                "body": "{\n    return new AdminSpringServletContext(domain);\n}",
                "start_point": {
                    "row": 82,
                    "column": 8
                },
                "end_point": {
                    "row": 84,
                    "column": 9
                },
                "method_mode": "Modified"
            }
        ],
        "class_mode": "Renamed-Modified",
        "map_tree_path": "OAuth2SpringServletContext.Builder"
    }
]